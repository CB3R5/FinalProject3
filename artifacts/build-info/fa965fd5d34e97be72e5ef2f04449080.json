{
	"id": "fa965fd5d34e97be72e5ef2f04449080",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200,
				"details": {
					"yul": false
				}
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"TokenB.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract tokenB is ERC20, Ownable {\r\n    constructor()\r\n        ERC20(\"TokenB\", \"TKB\")\r\n        Ownable(msg.sender)\r\n    {\r\n        _mint(msg.sender, 100000000000  * 10 ** decimals());\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenB.sol": {
				"tokenB": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_83, callvalue)\n  tag_85\n  tag_23\n  jump\t// in\ntag_85:\n  mload(0x40)\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  dataSize(sub_0)\n  swap1\n  return\ntag_83:\n  0x00\n  dup1\n  revert\ntag_4:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_5:\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_88\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_88:\n  tag_4\n  jump\t// in\ntag_6:\n  swap1\n  tag_90\n  tag_91\n  mload(0x40)\n  swap1\n  jump\ntag_91:\n  swap3\n  dup4\n  tag_5\n  jump\t// in\ntag_90:\n  jump\t// out\ntag_7:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_88\n  jumpi\n  0x20\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  add\n  swap1\n  jump\t// out\ntag_8:\n  swap1\n  tag_95\n  tag_96\n  dup4\n  tag_7\n  jump\t// in\ntag_96:\n  tag_6\n  jump\t// in\ntag_95:\n  swap2\n  dup3\n  mstore\n  jump\t// out\ntag_10:\n  tag_97\n  0x06\n  tag_8\n  jump\t// in\ntag_97:\n  shl(0xd1, 0x2a37b5b2b721)\n  0x20\n  dup3\n  add\n  mstore\n  swap1\n  jump\t// out\ntag_11:\n  tag_99\n  tag_10\n  jump\t// in\ntag_99:\n  swap1\n  jump\t// out\ntag_13:\n  tag_100\n  0x03\n  tag_8\n  jump\t// in\ntag_100:\n  shl(0xe9, 0x2a25a1)\n  0x20\n  dup3\n  add\n  mstore\n  swap1\n  jump\t// out\ntag_14:\n  tag_99\n  tag_13\n  jump\t// in\ntag_18:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x11)\n  revert(0x00, 0x24)\ntag_19:\n  0xff\n  and\n  0x4d\n  dup2\n  gt\n  tag_104\n  jumpi\n  0x0a\n  exp\n  swap1\n  jump\t// out\ntag_104:\n  tag_18\n  jump\t// in\ntag_21:\n  tag_99\n  tag_99\n  tag_99\n  swap3\n  swap1\n  jump\ntag_22:\n  dup2\n  dup2\n  mul\n  swap3\n  swap2\n  dup2\n  iszero\n  swap2\n  dup5\n  div\n  eq\n  or\n  iszero\n  tag_104\n  jumpi\n  jump\t// out\n    /* \"TokenB.sol\":293:443  constructor()... */\ntag_23:\n  tag_114\n    /* \"TokenB.sol\":356:366  msg.sender */\n  caller\n    /* \"TokenB.sol\":322:330  \"TokenB\" */\n  tag_115\n  tag_11\n  jump\t// in\ntag_115:\n    /* \"TokenB.sol\":332:337  \"TKB\" */\n  tag_116\n  tag_14\n  jump\t// in\ntag_116:\n    /* \"TokenB.sol\":293:443  constructor()... */\n  swap2\n  tag_31\n  jump\t// in\ntag_114:\n    /* \"TokenB.sol\":402:434  100000000000  * 10 ** decimals() */\n  tag_90\n    /* \"TokenB.sol\":390:400  msg.sender */\n  caller\n    /* \"TokenB.sol\":402:434  100000000000  * 10 ** decimals() */\n  tag_118\n    /* \"TokenB.sol\":402:414  100000000000 */\n  0x174876e800\n    /* \"TokenB.sol\":402:434  100000000000  * 10 ** decimals() */\n  tag_119\n    /* \"TokenB.sol\":418:434  10 ** decimals() */\n  tag_120\n    /* \"TokenB.sol\":424:434  decimals() */\n  tag_121\n  tag_55\n  jump\t// in\ntag_121:\n    /* \"TokenB.sol\":418:434  10 ** decimals() */\n  tag_19\n  jump\t// in\ntag_120:\n    /* \"TokenB.sol\":402:434  100000000000  * 10 ** decimals() */\n  swap2\n  tag_21\n  jump\t// in\ntag_119:\n  tag_22\n  jump\t// in\ntag_118:\n  swap1\n  tag_56\n  jump\t// in\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\ntag_26:\n  tag_122\n  tag_99\n  tag_99\n  swap3\n  swap1\n  jump\ntag_122:\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n  jump\ntag_27:\n  tag_99\n  swap1\n  tag_26\n  jump\t// in\ntag_29:\n  tag_127\n  swap1\n  tag_122\n  jump\t// in\ntag_127:\n  swap1\n  mstore\n  jump\t// out\ntag_30:\n  0x20\n  dup2\n  add\n  swap3\n  swap2\n  tag_90\n  swap2\n  swap1\n  tag_29\n  jump\t// in\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\ntag_31:\n  swap2\n  tag_129\n  swap2\n  tag_51\n  jump\t// in\ntag_129:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  tag_130\n  tag_131\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1299  address(0) */\n  tag_132\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1299  address(0) */\n  tag_27\n  jump\t// in\ntag_132:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  tag_122\n  jump\t// in\ntag_131:\n  swap2\n  tag_122\n  jump\t// in\ntag_130:\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_133\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  tag_90\n  swap1\n  tag_69\n  jump\t// in\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_133:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  tag_136\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1342:1352  address(0) */\n  tag_137\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1342:1352  address(0) */\n  tag_27\n  jump\t// in\ntag_137:\n  shl(0xe0, 0x1e4fbdf7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x00\n  swap1\n  dup2\n  mstore\n  swap2\n  dup3\n  swap2\n  0x04\n  tag_30\n  jump\t// in\ntag_136:\n  sub\n  swap1\n  revert\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\ntag_33:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x22)\n  revert(0x00, 0x24)\ntag_34:\n  swap1\n  0x01\n  0x02\n  dup4\n  div\n  swap3\n  and\n  dup1\n  iszero\n  tag_138\n  jumpi\ntag_139:\n  0x20\n  dup4\n  lt\n  eq\n  tag_140\n  jumpi\n  jump\t// out\ntag_140:\n  tag_33\n  jump\t// in\ntag_138:\n  swap2\n  0x7f\n  and\n  swap2\n  jump(tag_139)\ntag_38:\n  swap2\n  not(0x00)\n  0x08\n  swap3\n  swap1\n  swap3\n  mul\n  swap2\n  dup3\n  shl\n  swap2\n  shl\ntag_142:\n  swap2\n  dup2\n  not\n  and\n  swap2\n  and\n  or\n  swap1\n  jump\t// out\ntag_41:\n  swap2\n  swap1\n  tag_147\n  tag_99\n  tag_149\n  swap4\n  tag_21\n  jump\t// in\ntag_147:\n  swap1\n  dup4\n  sload\n  tag_38\n  jump\t// in\ntag_149:\n  swap1\n  sstore\n  jump\t// out\ntag_43:\n  tag_90\n  swap2\n  0x00\n  swap2\n  tag_41\n  jump\t// in\ntag_44:\n  dup2\n  dup2\n  lt\n  tag_153\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_153:\n  dup1\n  tag_155\n  0x00\n  0x01\n  swap4\n  tag_43\n  jump\t// in\ntag_155:\n  add\n  jump(tag_44)\ntag_45:\n  swap2\n  swap1\n  0x1f\n  dup2\n  gt\n  tag_156\n  jumpi\n  pop\n  pop\n  pop\n  jump\t// out\ntag_156:\n  tag_158\n  tag_90\n  swap4\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  jump\ntag_158:\n  swap1\n  0x20\n  0x1f\n  dup5\n  add\n  dup2\n  swap1\n  div\n  dup4\n  add\n  swap4\n  lt\n  tag_161\n  jumpi\ntag_162:\n  0x20\n  0x1f\n  swap1\n  swap2\n  add\n  div\n  add\n  swap1\n  tag_44\n  jump\t// in\ntag_161:\n  swap1\n  swap2\n  pop\n  dup2\n  swap1\n  jump(tag_162)\ntag_49:\n  swap1\n  tag_166\n  dup2\n  mload\n  swap1\n  jump\ntag_166:\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  tag_88\n  jumpi\n  tag_169\n  dup3\n  tag_170\n  dup6\n  sload\n  tag_34\n  jump\t// in\ntag_170:\n  dup6\n  tag_45\n  jump\t// in\ntag_169:\n  0x20\n  swap1\n  0x1f\n  dup4\n  gt\n  0x01\n  eq\n  tag_171\n  jumpi\n  tag_149\n  swap3\n  swap2\n  0x00\n  swap2\n  dup4\n  tag_174\n  jumpi\ntag_175:\n  pop\n  pop\n  not(0x00)\n  0x08\n  dup4\n  mul\n  shr\n  not\n  and\n  swap1\n  0x02\n  mul\n  or\n  swap1\n  jump\ntag_174:\n  add\n  mload\n  swap1\n  pop\n  0x00\n  dup1\n  jump(tag_175)\ntag_171:\n  not(0x1f)\n  dup4\n  and\n  swap2\n  tag_177\n  dup6\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  jump\ntag_177:\n  swap3\n  0x00\ntag_178:\n  dup2\n  dup2\n  lt\n  tag_179\n  jumpi\n  pop\n  swap2\n  0x02\n  swap4\n  swap2\n  dup6\n  0x01\n  swap7\n  swap5\n  lt\n  tag_181\n  jumpi\ntag_182:\n  pop\n  pop\n  pop\n  mul\n  add\n  swap1\n  sstore\n  jump\t// out\ntag_181:\n  add\n  mload\n  not(0x00)\n  0x08\n  0x1f\n  dup6\n  and\n  mul\n  shr\n  not\n  and\n  swap1\n  sstore\n  0x00\n  dup1\n  dup1\n  jump(tag_182)\ntag_179:\n  swap2\n  swap4\n  0x20\n  0x01\n  dup2\n  swap3\n  dup8\n  dup8\n  add\n  mload\n  dup2\n  sstore\n  add\n  swap6\n  add\n  swap3\n  add\n  jump(tag_178)\ntag_50:\n  swap1\n  tag_90\n  swap2\n  tag_49\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\ntag_51:\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_185\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_90\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n  tag_50\n  jump\t// in\ntag_185:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n  tag_50\n  jump\t// in\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\ntag_54:\n  tag_187\n  tag_99\n  tag_99\n  swap3\n  swap1\n  jump\ntag_187:\n  0xff\n  and\n  swap1\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  tag_99\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  tag_54\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  tag_192\n  tag_131\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7520:7530  address(0) */\n  tag_132\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7520:7530  address(0) */\n  tag_27\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\ntag_192:\n  eq\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_195\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  tag_90\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7623  address(0) */\n  tag_198\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7623  address(0) */\n  tag_27\n  jump\t// in\ntag_198:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  swap1\n  swap2\n  tag_82\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_195:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  tag_136\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7574:7584  address(0) */\n  tag_200\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7574:7584  address(0) */\n  tag_27\n  jump\t// in\ntag_200:\n  shl(0xe0, 0xec442f05)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x00\n  swap1\n  dup2\n  mstore\n  swap2\n  dup3\n  swap2\n  0x04\n  tag_30\n  jump\t// in\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\ntag_59:\n  tag_99\n  swap1\n  jump(tag_122)\ntag_60:\n  tag_99\n  swap1\n  sload\n  tag_59\n  jump\t// in\ntag_62:\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  jump(tag_142)\ntag_63:\n  tag_99\n  swap1\n  tag_122\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup3\n  jump\ntag_64:\n  tag_99\n  swap1\n  tag_63\n  jump\t// in\ntag_65:\n  tag_99\n  swap1\n  tag_64\n  jump\t// in\ntag_67:\n  swap1\n  tag_210\n  tag_99\n  tag_149\n  swap3\n  tag_65\n  jump\t// in\ntag_210:\n  dup3\n  sload\n  tag_62\n  jump\t// in\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_69:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  tag_213\n  0x05\n  tag_60\n  jump\t// in\ntag_213:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  tag_214\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x05\n  tag_67\n  jump\t// in\ntag_214:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  tag_215\n  tag_216\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap4\n  tag_65\n  jump\t// in\ntag_216:\n  swap2\n  tag_65\n  jump\t// in\ntag_215:\n  swap2\n  tag_217\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n  mload(0x40)\n  swap1\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\ntag_217:\n  dup1\n  dup1\ntag_218:\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  jump\t// out\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\ntag_70:\n  swap1\n  tag_219\n  swap1\n  tag_65\n  jump\t// in\ntag_219:\n  0x00\n  mstore\n  0x20\n  mstore\n  keccak256(0x00, 0x40)\n  swap1\n  jump\t// out\ntag_72:\n  tag_99\n  swap1\n  dup2\n  jump\ntag_73:\n  tag_99\n  swap1\n  sload\n  tag_72\n  jump\t// in\ntag_75:\n  0x40\n  swap1\n  tag_224\n  tag_90\n  swap5\n  swap7\n  swap6\n  swap4\n  swap7\n  tag_226\n  0x60\n  dup5\n  add\n  swap9\n  0x00\n  dup6\n  add\n  swap1\n  tag_29\n  jump\t// in\ntag_226:\n  0x20\n  dup4\n  add\n  mstore\n  jump\ntag_224:\n  add\n  mstore\n  jump\ntag_77:\n  swap1\n  not(0x00)\n  swap1\n  jump(tag_142)\ntag_78:\n  swap1\n  tag_229\n  tag_99\n  tag_149\n  swap3\n  tag_21\n  jump\t// in\ntag_229:\n  dup3\n  sload\n  tag_77\n  jump\t// in\ntag_79:\n  swap2\n  swap1\n  dup3\n  add\n  dup1\n  swap3\n  gt\n  tag_104\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_82:\n  swap2\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  tag_238\n  tag_131\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6086:6096  address(0) */\n  tag_132\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6086:6096  address(0) */\n  tag_27\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\ntag_238:\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_241\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  tag_243\n  tag_244\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  tag_245\n  0x02\n  tag_73\n  jump\t// in\ntag_245:\n  tag_79\n  jump\t// in\ntag_244:\n  0x02\n  tag_78\n  jump\t// in\ntag_243:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  tag_247\n  tag_131\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6634:6644  address(0) */\n  tag_132\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6634:6644  address(0) */\n  tag_27\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\ntag_247:\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_250\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  tag_252\n  tag_244\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  tag_254\n  0x02\n  tag_73\n  jump\t// in\ntag_254:\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n  sub\n  swap1\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\ntag_252:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  swap2\n  tag_218\n  tag_257\n  tag_258\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap4\n  tag_65\n  jump\t// in\ntag_258:\n  swap4\n  tag_65\n  jump\t// in\ntag_257:\n  swap4\n  tag_259\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n  mload(0x40)\n  swap1\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_259:\n  swap2\n  dup3\n  swap2\n  dup3\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_250:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  tag_260\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  tag_261\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  tag_262\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  tag_70\n  jump\t// in\ntag_262:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  swap2\n  tag_263\n  dup4\n  tag_73\n  jump\t// in\ntag_263:\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n  add\n  swap1\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\ntag_261:\n  swap1\n  tag_78\n  jump\t// in\ntag_260:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_252)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_241:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  tag_264\n  tag_265\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  tag_70\n  jump\t// in\ntag_265:\n  tag_73\n  jump\t// in\ntag_264:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  tag_268\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  tag_271\n  swap1\n    /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n  dup4\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  tag_272\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  tag_70\n  jump\t// in\ntag_272:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  tag_78\n  jump\t// in\ntag_271:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_243)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_268:\n  shl(0xe2, 0x391434e3)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x00\n  swap1\n  dup2\n  mstore\n  swap3\n  dup4\n  swap3\n  tag_136\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  tag_75\n  jump\t// in\nstop\n\nsub_0: assembly {\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_122, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_122:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06fdde03\n      eq\n      tag_125\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_127\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_129\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_131\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_133\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_135\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_137\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_139\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_141\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_143\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_145\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_147\n      jumpi\n      0xf2fde38b\n      sub\n      tag_151\n      jumpi\n      tag_46\n      jump\t// in\n    tag_147:\n      tag_45\n      jump\t// in\n    tag_145:\n      tag_43\n      jump\t// in\n    tag_143:\n      tag_42\n      jump\t// in\n    tag_141:\n      tag_41\n      jump\t// in\n    tag_139:\n      tag_38\n      jump\t// in\n    tag_137:\n      tag_37\n      jump\t// in\n    tag_135:\n      tag_35\n      jump\t// in\n    tag_133:\n      tag_33\n      jump\t// in\n    tag_131:\n      tag_29\n      jump\t// in\n    tag_129:\n      tag_27\n      jump\t// in\n    tag_127:\n      tag_24\n      jump\t// in\n    tag_125:\n      tag_12\n      jump\t// in\n    tag_5:\n      0x00\n      swap2\n      sub\n      slt\n      tag_151\n      jumpi\n      jump\t// out\n    tag_151:\n      0x00\n      dup1\n      revert\n    tag_8:\n      swap1\n      dup3\n      0x00\n      swap4\n      swap3\n      dup3\n      mcopy\n      add\n      mstore\n      jump\t// out\n    tag_10:\n      tag_153\n      tag_154\n      0x20\n      swap4\n      tag_155\n      swap4\n      tag_156\n      dup2\n      mload\n      swap1\n      jump\n    tag_156:\n      dup1\n      dup4\n      mstore\n      swap4\n      dup5\n      swap3\n      0x20\n      add\n      swap1\n      jump\n    tag_153:\n      swap6\n      dup7\n      swap2\n      add\n      tag_8\n      jump\t// in\n    tag_154:\n      0x1f\n      add\n      not(0x1f)\n      and\n      swap1\n      jump\n    tag_155:\n      add\n      swap1\n      jump\t// out\n    tag_11:\n      0x20\n      dup1\n      dup3\n      mstore\n      tag_157\n      swap3\n      swap2\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_157:\n      swap1\n      jump\t// out\n    tag_12:\n      jumpi(tag_151, callvalue)\n      tag_160\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_160:\n      tag_161\n      tag_162\n      tag_59\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_11\n      jump\t// in\n    tag_161:\n      sub\n      swap1\n      return\n    tag_14:\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      jump\t// out\n    tag_15:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n    tag_165:\n      sub\n      tag_151\n      jumpi\n      jump\t// out\n    tag_16:\n      swap1\n      pop\n      calldataload\n      swap1\n      tag_168\n      dup3\n      tag_15\n      jump\t// in\n    tag_168:\n      jump\t// out\n    tag_18:\n      dup1\n      jump(tag_165)\n    tag_19:\n      swap1\n      pop\n      calldataload\n      swap1\n      tag_168\n      dup3\n      tag_18\n      jump\t// in\n    tag_20:\n      swap2\n      swap1\n      0x40\n      dup4\n      dup3\n      sub\n      slt\n      tag_151\n      jumpi\n      tag_157\n      swap1\n      tag_175\n      dup2\n      dup6\n      tag_16\n      jump\t// in\n    tag_175:\n      swap4\n      0x20\n      add\n      tag_19\n      jump\t// in\n    tag_24:\n      jumpi(tag_151, callvalue)\n      tag_161\n      tag_182\n      tag_183\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_183:\n      swap1\n      tag_61\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      jump\n    tag_27:\n      jumpi(tag_151, callvalue)\n      tag_189\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_189:\n      tag_161\n      tag_191\n      tag_67\n      jump\t// in\n    tag_191:\n      mload(0x40)\n    tag_192:\n      swap2\n      dup3\n      swap2\n      dup3\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      jump\n    tag_28:\n      swap1\n      swap2\n      0x60\n      dup3\n      dup5\n      sub\n      slt\n      tag_151\n      jumpi\n      tag_157\n      tag_196\n      dup5\n      dup5\n      tag_16\n      jump\t// in\n    tag_196:\n      swap4\n      tag_197\n      dup2\n      0x20\n      dup7\n      add\n      tag_16\n      jump\t// in\n    tag_197:\n      swap4\n      0x40\n      add\n      tag_19\n      jump\t// in\n    tag_29:\n      jumpi(tag_151, callvalue)\n      tag_161\n      tag_182\n      tag_202\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_202:\n      swap2\n      tag_68\n      jump\t// in\n    tag_33:\n      jumpi(tag_151, callvalue)\n      tag_208\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_208:\n      tag_161\n      tag_210\n      tag_73\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      0xff\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      jump\n    tag_35:\n      jumpi(tag_151, callvalue)\n      tag_214\n      tag_215\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_215:\n      swap1\n      tag_76\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      stop\n    tag_36:\n      swap1\n      0x20\n      dup3\n      dup3\n      sub\n      slt\n      tag_151\n      jumpi\n      tag_157\n      swap2\n      tag_16\n      jump\t// in\n    tag_37:\n      jumpi(tag_151, callvalue)\n      tag_161\n      tag_191\n      tag_225\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_225:\n      tag_81\n      jump\t// in\n    tag_38:\n      jumpi(tag_151, callvalue)\n      tag_229\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_229:\n      tag_214\n      tag_87\n      jump\t// in\n    tag_41:\n      jumpi(tag_151, callvalue)\n      tag_237\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_237:\n      tag_161\n      tag_239\n      tag_92\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      jump\n    tag_42:\n      jumpi(tag_151, callvalue)\n      tag_243\n      calldatasize\n      0x04\n      tag_5\n      jump\t// in\n    tag_243:\n      tag_161\n      tag_162\n      tag_93\n      jump\t// in\n    tag_43:\n      jumpi(tag_151, callvalue)\n      tag_161\n      tag_182\n      tag_251\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_251:\n      swap1\n      tag_94\n      jump\t// in\n    tag_44:\n      swap2\n      swap1\n      0x40\n      dup4\n      dup3\n      sub\n      slt\n      tag_151\n      jumpi\n      tag_157\n      swap1\n      tag_255\n      dup2\n      dup6\n      tag_16\n      jump\t// in\n    tag_255:\n      swap4\n      0x20\n      add\n      tag_16\n      jump\t// in\n    tag_45:\n      jumpi(tag_151, callvalue)\n      tag_161\n      tag_191\n      tag_261\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_261:\n      swap1\n      tag_96\n      jump\t// in\n    tag_46:\n      jumpi(tag_151, callvalue)\n      tag_214\n      tag_266\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_266:\n      tag_99\n      jump\t// in\n    tag_49:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_50:\n      swap1\n      0x01\n      0x02\n      dup4\n      div\n      swap3\n      and\n      dup1\n      iszero\n      tag_269\n      jumpi\n    tag_270:\n      0x20\n      dup4\n      lt\n      eq\n      tag_271\n      jumpi\n      jump\t// out\n    tag_271:\n      tag_49\n      jump\t// in\n    tag_269:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_270)\n    tag_53:\n      dup1\n      sload\n      0x00\n      swap4\n      swap3\n      swap2\n      tag_273\n      tag_274\n      dup4\n      tag_50\n      jump\t// in\n    tag_274:\n      dup1\n      dup6\n      mstore\n      swap4\n      0x20\n      add\n      swap1\n      jump\n    tag_273:\n      swap2\n      0x01\n      dup2\n      and\n      swap1\n      dup2\n      iszero\n      tag_275\n      jumpi\n      pop\n      0x01\n      eq\n      tag_277\n      jumpi\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_277:\n      tag_279\n      swap2\n      swap3\n      swap4\n      swap5\n      pop\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      jump\n    tag_279:\n      swap2\n      0x00\n      swap3\n    tag_280:\n      dup2\n      dup5\n      lt\n      tag_281\n      jumpi\n      pop\n      pop\n      add\n      swap1\n      jump\t// out\n    tag_281:\n      dup1\n      sload\n      dup5\n      dup5\n      add\n      mstore\n      0x20\n      swap1\n      swap4\n      add\n      swap3\n      0x01\n      add\n      jump(tag_280)\n    tag_275:\n      swap3\n      swap5\n      swap6\n      pop\n      pop\n      pop\n      not(0xff)\n      and\n      dup3\n      mstore\n      iszero\n      iszero\n      0x20\n      mul\n      add\n      swap1\n      jump\t// out\n    tag_54:\n      swap1\n      tag_157\n      swap2\n      tag_53\n      jump\t// in\n    tag_55:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_56:\n      swap1\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_285\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_285:\n      tag_55\n      jump\t// in\n    tag_57:\n      swap1\n      tag_168\n      tag_288\n      swap3\n      tag_289\n      mload(0x40)\n      swap1\n      jump\n    tag_289:\n      swap4\n      dup5\n      dup1\n      swap3\n      tag_54\n      jump\t// in\n    tag_288:\n      sub\n      dup4\n      tag_56\n      jump\t// in\n    tag_58:\n      tag_157\n      swap1\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      tag_293\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      tag_101\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap1\n      jump\t// out\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n    tag_65:\n      tag_157\n      swap1\n      dup2\n      jump\n    tag_66:\n      tag_157\n      swap1\n      sload\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      tag_157\n      0x02\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      tag_293\n      swap3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      tag_104\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      swap1\n      swap2\n      tag_105\n      jump\t// in\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n    tag_72:\n      tag_305\n      tag_157\n      tag_157\n      swap3\n      swap1\n      jump\n    tag_305:\n      0xff\n      and\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n    tag_74:\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap2\n      tag_311\n      tag_106\n      jump\t// in\n    tag_311:\n        /* \"TokenB.sol\":451:546  function mint(address to, uint256 amount) public onlyOwner {... */\n      swap1\n        /* \"TokenB.sol\":531:537  amount */\n      tag_168\n        /* \"TokenB.sol\":451:546  function mint(address to, uint256 amount) public onlyOwner {... */\n      swap2\n        /* \"TokenB.sol\":531:537  amount */\n      tag_107\n      jump\t// in\n        /* \"TokenB.sol\":451:546  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_76:\n      swap1\n      tag_168\n      swap2\n      tag_74\n      jump\t// in\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n    tag_77:\n      tag_157\n      swap1\n      tag_14\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      jump\n    tag_78:\n      tag_157\n      swap1\n      tag_77\n      jump\t// in\n    tag_79:\n      tag_157\n      swap1\n      tag_78\n      jump\t// in\n    tag_80:\n      swap1\n      tag_319\n      swap1\n      tag_79\n      jump\t// in\n    tag_319:\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      tag_320\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      tag_322\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      0x00\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      pop\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      tag_80\n      jump\t// in\n    tag_320:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n    tag_82:\n      tag_323\n      tag_106\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      tag_168\n      tag_86\n      jump\t// in\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n    tag_84:\n      tag_14\n      tag_157\n      tag_157\n      swap3\n      swap1\n      jump\n    tag_85:\n      tag_157\n      swap1\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2376:2386  address(0) */\n      tag_168\n      tag_330\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2376:2386  address(0) */\n      tag_85\n      jump\t// in\n    tag_330:\n      tag_112\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_87:\n      tag_168\n      tag_82\n      jump\t// in\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n    tag_90:\n      tag_157\n      swap1\n      jump(tag_14)\n    tag_91:\n      tag_157\n      swap1\n      sload\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      tag_157\n      0x05\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      tag_293\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      tag_344\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      tag_320\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      tag_346\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      0x00\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      pop\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      tag_80\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap1\n      tag_348\n      tag_106\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      tag_349\n      tag_350\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2639:2649  address(0) */\n      tag_14\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2639:2649  address(0) */\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n    tag_350:\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      and\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n    tag_349:\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      tag_168\n      swap1\n      tag_112\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_355\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2692:2702  address(0) */\n      tag_356\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2692:2702  address(0) */\n      tag_85\n      jump\t// in\n    tag_356:\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x00\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      swap1\n      dup2\n      swap1\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      0x24\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_355:\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n      tag_168\n      swap1\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_101:\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n      swap3\n      tag_117\n      jump\t// in\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x60\n      dup2\n      add\n      swap4\n      swap3\n      tag_168\n      swap3\n      swap1\n      swap2\n      0x40\n      swap2\n      tag_360\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n      jump\n    tag_360:\n      add\n      mstore\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_104:\n      swap2\n      swap3\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_364\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_96\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      swap1\n      not(0x00)\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_368:\n      pop\n      pop\n      pop\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      swap3\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      tag_373\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      swap2\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      swap1\n      0x00\n      swap3\n      tag_117\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      dup1\n      0x00\n      dup1\n      dup1\n      jump(tag_368)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_371:\n      pop\n      shl(0xe1, 0x7dc7a0d9)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x00\n      swap1\n      dup2\n      mstore\n      swap2\n      dup3\n      swap2\n      tag_355\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_105:\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      tag_376\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5475  address(0) */\n      tag_14\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5475  address(0) */\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n    tag_376:\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_379\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      tag_381\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5558:5568  address(0) */\n      tag_14\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5558:5568  address(0) */\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n    tag_381:\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      swap1\n      swap2\n      tag_121\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_355\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5612:5622  address(0) */\n      tag_388\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5612:5622  address(0) */\n      tag_85\n      jump\t// in\n    tag_388:\n      shl(0xe0, 0xec442f05)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x00\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      swap1\n      dup2\n      swap1\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      0x24\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_355\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5527  address(0) */\n      tag_390\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5527  address(0) */\n      tag_85\n      jump\t// in\n    tag_390:\n      shl(0xe1, 0x4b637e8f)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x00\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      swap1\n      dup2\n      swap1\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      0x24\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_391\n      tag_92\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      tag_392\n      tag_350\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_14\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n    tag_392:\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_395:\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      tag_399\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7520:7530  address(0) */\n      tag_14\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7520:7530  address(0) */\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n    tag_399:\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7623  address(0) */\n      tag_405\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7623  address(0) */\n      tag_85\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      swap1\n      swap2\n      tag_121\n      jump\t// in\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n    tag_109:\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n    tag_408:\n      swap2\n      dup2\n      not\n      and\n      swap2\n      and\n      or\n      swap1\n      jump\t// out\n    tag_111:\n      swap1\n      tag_409\n      tag_157\n      tag_411\n      swap3\n      tag_79\n      jump\t// in\n    tag_409:\n      dup3\n      sload\n      tag_109\n      jump\t// in\n    tag_411:\n      swap1\n      sstore\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      tag_412\n      0x05\n      tag_91\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      tag_413\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x05\n      tag_111\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      tag_414\n      tag_415\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap4\n      tag_79\n      jump\t// in\n    tag_415:\n      swap2\n      tag_79\n      jump\t// in\n    tag_414:\n      swap2\n      tag_416\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mload(0x40)\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n    tag_416:\n      dup1\n      dup1\n    tag_417:\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      jump\t// out\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n    tag_113:\n      swap1\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      swap1\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      jump(tag_408)\n    tag_114:\n      tag_157\n      tag_157\n      tag_157\n      swap3\n      swap1\n      jump\n    tag_116:\n      swap1\n      tag_422\n      tag_157\n      tag_411\n      swap3\n      tag_114\n      jump\t// in\n    tag_422:\n      dup3\n      sload\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_117:\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      tag_425\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9803:9813  address(0) */\n      tag_14\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9803:9813  address(0) */\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n    tag_425:\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_428\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      tag_430\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9903:9913  address(0) */\n      tag_14\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9903:9913  address(0) */\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n    tag_430:\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      tag_435\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      tag_436\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      tag_437\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      tag_80\n      jump\t// in\n    tag_437:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap1\n      tag_80\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      tag_116\n      jump\t// in\n    tag_435:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      tag_438\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      swap2\n      tag_417\n      tag_441\n      tag_442\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap4\n      tag_79\n      jump\t// in\n    tag_442:\n      swap4\n      tag_79\n      jump\t// in\n    tag_441:\n      swap4\n      tag_192\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mload(0x40)\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_355\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9956:9966  address(0) */\n      tag_445\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9956:9966  address(0) */\n      tag_85\n      jump\t// in\n    tag_445:\n      shl(0xe1, 0x4a1406b1)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x00\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      swap1\n      dup2\n      swap1\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      0x24\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_355\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9857:9867  address(0) */\n      tag_447\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9857:9867  address(0) */\n      tag_85\n      jump\t// in\n    tag_447:\n      shl(0xe0, 0xe602df05)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x00\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      swap1\n      dup2\n      swap1\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      0x24\n      swap1\n      jump\n    tag_118:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_119:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_450\n      jumpi\n      jump\t// out\n    tag_450:\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_121:\n      swap2\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      tag_453\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6086:6096  address(0) */\n      tag_14\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6086:6096  address(0) */\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n    tag_453:\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_456\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      tag_458\n      tag_459\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      tag_460\n      0x02\n      tag_66\n      jump\t// in\n    tag_460:\n      tag_119\n      jump\t// in\n    tag_459:\n      0x02\n      tag_116\n      jump\t// in\n    tag_458:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      tag_462\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6634:6644  address(0) */\n      tag_14\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6634:6644  address(0) */\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n    tag_462:\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_465\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      tag_467\n      tag_459\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      tag_469\n      0x02\n      tag_66\n      jump\t// in\n    tag_469:\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      sub\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n    tag_467:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      swap2\n      tag_417\n      tag_441\n      tag_442\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap4\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_465:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      tag_475\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      tag_476\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      tag_477\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      tag_80\n      jump\t// in\n    tag_477:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      swap2\n      tag_155\n      dup4\n      tag_66\n      jump\t// in\n    tag_476:\n      swap1\n      tag_116\n      jump\t// in\n    tag_475:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_467)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_456:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      tag_479\n      tag_320\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      tag_80\n      jump\t// in\n    tag_479:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      tag_483\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      tag_486\n      swap1\n        /* \"TokenB.sol\":252:549  contract tokenB is ERC20, Ownable {... */\n      dup4\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      tag_436\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n    tag_486:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_458)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_483:\n      shl(0xe2, 0x391434e3)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x00\n      swap1\n      dup2\n      mstore\n      swap3\n      dup4\n      swap3\n      tag_355\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      tag_102\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220666ce4505db1315624f9215049b4941d8bc10a2230edaf2927aed230e6a7588664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_encode_address": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_address_uint256_uint256": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_address": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_to_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_memory": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_string": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 1414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_rational_by_uint8": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_from_storage_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_from_storage_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_rational_by": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_rational_by_1": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_by": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_uint160": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_bytes1": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"constructor_ERC20": {
									"entryPoint": 988,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"constructor_Ownable": {
									"entryPoint": 453,
									"id": 50,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"constructor_tokenB": {
									"entryPoint": 315,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"convert_address_to_address": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_rational_by_to_address": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_rational_by_to_uint160": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_rational_by_to_uint256": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_rational_by_to_uint8": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_stringliteral_9e28_to_string": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"convert_stringliteral_ab61_to_string": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"convert_uint160_to_address": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_uint160_to_uint160": {
									"entryPoint": 1149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_uint256_to_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_literal_to_memory_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"copy_literal_to_memory_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"divide_by_ceil": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_from_storage_value_offset_address": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_from_storage_value_offset_uint256": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 58,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_decimals": {
									"entryPoint": 1029,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_mint": {
									"entryPoint": 1039,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_transferOwnership": {
									"entryPoint": 1210,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_update": {
									"entryPoint": 1427,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 38,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"prepare_store_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_storage_split_offset_address": {
									"entryPoint": 1124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_storage_split_offset_uint256": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_uint256": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_byte_slice_shift": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"update_byte_slice_shift_0": {
									"entryPoint": 1134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"update_storage_value_offset_address_to_address": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offset_string_to_string": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offset_uint256_to_uint256": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_uint256_to_uint256": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"wrapping_add_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"wrapping_sub_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"zero_value_for_split_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"zero_value_for_split_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x22 JUMPI PUSH2 0x11 PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6A PUSH2 0x6BC DUP3 CODECOPY PUSH2 0xB6A SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x26 JUMP JUMPDEST SWAP1 PUSH2 0x74 PUSH2 0x6D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x3A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA4 PUSH2 0x9F DUP4 PUSH2 0x76 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x6 PUSH2 0x92 JUMP JUMPDEST PUSH6 0x2A37B5B2B721 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xCD PUSH2 0xA9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDA PUSH1 0x3 PUSH2 0x92 JUMP JUMPDEST PUSH3 0x2A25A1 PUSH1 0xE9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xCD PUSH2 0xD0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x116 JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xCD PUSH2 0xCD PUSH2 0xCD SWAP3 SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x116 JUMPI JUMP JUMPDEST PUSH2 0x155 CALLER PUSH2 0x147 PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xE9 JUMP JUMPDEST SWAP2 PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0x74 CALLER PUSH2 0x180 PUSH5 0x174876E800 PUSH2 0x17B PUSH2 0x175 PUSH2 0x170 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x105 JUMP JUMPDEST SWAP2 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x128 JUMP JUMPDEST SWAP1 PUSH2 0x40F JUMP JUMPDEST PUSH2 0x193 PUSH2 0xCD PUSH2 0xCD SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xCD SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1B1 SWAP1 PUSH2 0x193 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x74 SWAP2 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST SWAP2 PUSH2 0x1CF SWAP2 PUSH2 0x3DC JUMP JUMPDEST DUP1 PUSH2 0x1EA PUSH2 0x1E4 PUSH2 0x1DF PUSH0 PUSH2 0x19F JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST SWAP2 PUSH2 0x193 JUMP JUMPDEST EQ PUSH2 0x1F8 JUMPI PUSH2 0x74 SWAP1 PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x21A PUSH2 0x204 PUSH0 PUSH2 0x19F JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x252 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x24D JUMPI JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x242 JUMP JUMPDEST SWAP2 PUSH0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x286 PUSH2 0xCD PUSH2 0x28E SWAP4 PUSH2 0x11B JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x25C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x74 SWAP2 PUSH0 SWAP2 PUSH2 0x275 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2A8 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x2B5 PUSH0 PUSH1 0x1 SWAP4 PUSH2 0x292 JUMP JUMPDEST ADD PUSH2 0x29D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x2CA JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x74 SWAP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x2FC JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x29D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2ED JUMP JUMPDEST SWAP1 PUSH2 0x30F DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5B JUMPI PUSH2 0x332 DUP3 PUSH2 0x32C DUP6 SLOAD PUSH2 0x232 JUMP JUMPDEST DUP6 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x36B JUMPI PUSH2 0x28E SWAP3 SWAP2 PUSH0 SWAP2 DUP4 PUSH2 0x360 JUMPI JUMPDEST POP POP PUSH0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x37E DUP6 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3BA JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x3A2 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x399 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x381 JUMP JUMPDEST SWAP1 PUSH2 0x74 SWAP2 PUSH2 0x306 JUMP JUMPDEST SWAP1 PUSH2 0x3EB PUSH2 0x74 SWAP3 PUSH1 0x3 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0xCD PUSH2 0xCD SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xCD PUSH1 0x12 PUSH2 0x3F2 JUMP JUMPDEST DUP1 PUSH2 0x41F PUSH2 0x1E4 PUSH2 0x1DF PUSH0 PUSH2 0x19F JUMP JUMPDEST EQ PUSH2 0x439 JUMPI PUSH2 0x74 SWAP2 PUSH2 0x431 PUSH0 PUSH2 0x19F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x593 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x445 PUSH0 PUSH2 0x19F JUMP JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0xCD SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH2 0xCD SWAP1 SLOAD PUSH2 0x45B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x26B JUMP JUMPDEST PUSH2 0xCD SWAP1 PUSH2 0x193 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xCD SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xCD SWAP1 PUSH2 0x491 JUMP JUMPDEST SWAP1 PUSH2 0x4B3 PUSH2 0xCD PUSH2 0x28E SWAP3 PUSH2 0x49A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x46E JUMP JUMPDEST PUSH2 0x4C4 PUSH1 0x5 PUSH2 0x464 JUMP JUMPDEST PUSH2 0x4CF DUP3 PUSH1 0x5 PUSH2 0x4A3 JUMP JUMPDEST SWAP1 PUSH2 0x503 PUSH2 0x4FD PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x49A JUMP JUMPDEST SWAP2 PUSH2 0x49A JUMP JUMPDEST SWAP2 PUSH2 0x50D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 PUSH2 0x51F SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xCD SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xCD SWAP1 SLOAD PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x562 PUSH2 0x74 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x55B PUSH1 0x60 DUP5 ADD SWAP9 PUSH0 DUP6 ADD SWAP1 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 PUSH0 NOT SWAP1 PUSH2 0x26B JUMP JUMPDEST SWAP1 PUSH2 0x57F PUSH2 0xCD PUSH2 0x28E SWAP3 PUSH2 0x11B JUMP JUMPDEST DUP3 SLOAD PUSH2 0x566 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x116 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x5A6 PUSH2 0x1E4 PUSH2 0x1DF PUSH0 PUSH2 0x19F JUMP JUMPDEST SUB PUSH2 0x66C JUMPI PUSH2 0x5C8 PUSH2 0x5C1 DUP4 PUSH2 0x5BC PUSH1 0x2 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x56F JUMP JUMPDEST DUP3 PUSH2 0x5D8 PUSH2 0x1E4 PUSH2 0x1DF PUSH0 PUSH2 0x19F JUMP JUMPDEST SUB PUSH2 0x642 JUMPI PUSH2 0x5F2 PUSH2 0x5C1 DUP4 PUSH2 0x5EE PUSH1 0x2 PUSH2 0x532 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x510 PUSH2 0x62B PUSH2 0x625 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x49A JUMP JUMPDEST SWAP4 PUSH2 0x49A JUMP JUMPDEST SWAP4 PUSH2 0x635 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x667 DUP3 PUSH2 0x661 PUSH2 0x653 DUP7 PUSH0 PUSH2 0x515 JUMP JUMPDEST SWAP2 PUSH2 0x65D DUP4 PUSH2 0x532 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x67E PUSH2 0x679 DUP3 PUSH0 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0x6A0 JUMPI PUSH2 0x69B SWAP1 DUP4 SWAP1 SUB PUSH2 0x696 DUP4 PUSH0 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 SWAP1 DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH2 0x21A SWAP3 SWAP1 PUSH1 0x4 PUSH2 0x53C JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA9 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xEF JUMPI PUSH2 0x3BD JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x312 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST PUSH0 SWAP2 SUB SLT PUSH2 0xEF JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP3 PUSH0 SWAP4 SWAP3 DUP3 MCOPY ADD MSTORE JUMP JUMPDEST PUSH2 0x11F PUSH2 0x128 PUSH1 0x20 SWAP4 PUSH2 0x132 SWAP4 PUSH2 0x113 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x147 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xFE JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x165 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x136 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0xEF JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A0 DUP3 PUSH2 0x181 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x18C JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A0 DUP3 PUSH2 0x1A2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xEF JUMPI PUSH2 0x147 SWAP1 PUSH2 0x1CF DUP2 DUP6 PUSH2 0x193 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x1F4 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x221 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xEF JUMPI PUSH2 0x147 PUSH2 0x24B DUP5 DUP5 PUSH2 0x193 JUMP JUMPDEST SWAP4 PUSH2 0x259 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x193 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x1F4 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x232 JUMP JUMPDEST SWAP2 PUSH2 0x537 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x299 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x2C6 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xEF JUMPI PUSH2 0x147 SWAP2 PUSH2 0x193 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x221 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x61A JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x32D PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x165 PUSH2 0x63F JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x1F4 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 PUSH2 0x649 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xEF JUMPI PUSH2 0x147 SWAP1 PUSH2 0x398 DUP2 DUP6 PUSH2 0x193 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x193 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x221 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E JUMP JUMPDEST SWAP1 PUSH2 0x653 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x2C6 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x409 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x404 JUMPI JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3F9 JUMP JUMPDEST DUP1 SLOAD PUSH0 SWAP4 SWAP3 SWAP2 PUSH2 0x42F PUSH2 0x425 DUP4 PUSH2 0x3E9 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x47E JUMPI POP PUSH1 0x1 EQ PUSH2 0x448 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x459 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x46A JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x45D JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x147 SWAP2 PUSH2 0x413 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4D3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST SWAP1 PUSH2 0x1A0 PUSH2 0x4F2 SWAP3 PUSH2 0x4E9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x493 JUMP JUMPDEST SUB DUP4 PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x3 PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x517 SWAP2 SWAP1 CALLER PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x147 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x147 SWAP1 SLOAD PUSH2 0x51C JUMP JUMPDEST PUSH2 0x147 PUSH1 0x2 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x517 SWAP3 SWAP1 PUSH2 0x547 DUP3 CALLER DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x55C PUSH2 0x147 PUSH2 0x147 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x12 PUSH2 0x54F JUMP JUMPDEST SWAP1 PUSH2 0x1A0 SWAP2 PUSH2 0x579 PUSH2 0x80D JUMP JUMPDEST SWAP1 PUSH2 0x1A0 SWAP2 PUSH2 0x83D JUMP JUMPDEST SWAP1 PUSH2 0x1A0 SWAP2 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x175 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 PUSH2 0x5BD SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x147 SWAP2 PUSH2 0x5D7 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0x80D JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x609 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x147 PUSH2 0x147 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x615 PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x147 SWAP1 SLOAD PUSH2 0x622 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x5 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x147 PUSH1 0x4 PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x517 SWAP2 CALLER PUSH2 0x547 JUMP JUMPDEST PUSH2 0x147 SWAP2 PUSH2 0x66D PUSH2 0x5DE SWAP3 PUSH2 0x665 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x1A0 SWAP1 PUSH2 0x67E PUSH2 0x80D JUMP JUMPDEST DUP1 PUSH2 0x69B PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x6A9 JUMPI PUSH2 0x1A0 SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x6B5 PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 SWAP1 PUSH2 0x672 JUMP JUMPDEST SWAP2 PUSH2 0x1A0 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x1A0 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x719 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP2 SWAP3 SWAP2 PUSH2 0x72A DUP3 DUP3 PUSH2 0x653 JUMP JUMPDEST SWAP1 PUSH0 NOT DUP3 LT PUSH2 0x73B JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x75C JUMPI SWAP3 SWAP4 PUSH2 0x753 SWAP4 SWAP3 SWAP2 SUB SWAP1 PUSH0 SWAP3 PUSH2 0x91F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP1 PUSH2 0x734 JUMP JUMPDEST POP PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH0 SWAP1 DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH2 0x6D7 SWAP2 DUP7 SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x78B PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x7DF JUMPI DUP2 PUSH2 0x7A0 PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x7B1 JUMPI PUSH2 0x1A0 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xA37 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x7BD PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x7EB PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH2 0x815 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x821 PUSH2 0x68E CALLER PUSH2 0x175 JUMP JUMPDEST SUB PUSH2 0x828 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x84D PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x7B1 JUMPI PUSH2 0x1A0 SWAP2 PUSH2 0x85F PUSH0 PUSH2 0x600 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xA37 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x88C PUSH2 0x147 PUSH2 0x893 SWAP3 PUSH2 0x5AA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x867 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8A1 PUSH1 0x5 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x8AC DUP3 PUSH1 0x5 PUSH2 0x87C JUMP JUMPDEST SWAP1 PUSH2 0x8E0 PUSH2 0x8DA PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x5AA JUMP JUMPDEST SWAP2 PUSH2 0x5AA JUMP JUMPDEST SWAP2 PUSH2 0x8EA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 PUSH0 NOT SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x147 PUSH2 0x147 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x918 PUSH2 0x147 PUSH2 0x893 SWAP3 PUSH2 0x8FB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x8F2 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x931 PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x9E3 JUMPI DUP4 PUSH2 0x946 PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x9B5 JUMPI PUSH2 0x969 DUP4 PUSH2 0x964 PUSH2 0x95D DUP6 PUSH1 0x1 PUSH2 0x5B3 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x972 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x8ED PUSH2 0x9AB PUSH2 0x9A5 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x5AA JUMP JUMPDEST SWAP4 PUSH2 0x5AA JUMP JUMPDEST SWAP4 PUSH2 0x225 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x9C1 PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x9EF PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA32 JUMPI JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0xA4A PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST SUB PUSH2 0xAEF JUMPI PUSH2 0xA6C PUSH2 0xA65 DUP4 PUSH2 0xA60 PUSH1 0x2 PUSH2 0x523 JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x908 JUMP JUMPDEST DUP3 PUSH2 0xA7C PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST SUB PUSH2 0xAC9 JUMPI PUSH2 0xA96 PUSH2 0xA65 DUP4 PUSH2 0xA92 PUSH1 0x2 PUSH2 0x523 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x8ED PUSH2 0x9AB PUSH2 0x9A5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0xAEA DUP3 PUSH2 0xAE4 PUSH2 0xADA DUP7 PUSH0 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 PUSH2 0x132 DUP4 PUSH2 0x523 JUMP JUMPDEST SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xAFC PUSH2 0x5DE DUP3 PUSH0 PUSH2 0x5B3 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0xB19 JUMPI PUSH2 0xB14 SWAP1 DUP4 SWAP1 SUB PUSH2 0x964 DUP4 PUSH0 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 SWAP1 DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH2 0x6D7 SWAP3 SWAP1 PUSH1 0x4 PUSH2 0x6F2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x6CE4505DB13156 0x24 EXTDELEGATECALL 0x21 POP BLOBHASH 0xB4 SWAP5 SAR DUP12 0xC1 EXP 0x22 ADDRESS 0xED 0xAF 0x29 0x27 0xAE 0xD2 ADDRESS DUPN 0xA7 PC DUP7 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "252:297:6:-:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:297:6;;;;;;-1:-1:-1;;;;;252:297:6;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;252:297:6;;;;;;;;-1:-1:-1;;252:297:6;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;;;252:297:6;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;;;252:297:6;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;293:150::-;;356:10;322:8;;:::i;:::-;332:5;;:::i;:::-;293:150;;:::i;:::-;402:32;390:10;402:32;:12;:32;418:16;424:10;;:::i;:::-;418:16;:::i;:::-;402:32;;:::i;:::-;;:::i;:::-;;;:::i;252:297::-;;;;;;;;-1:-1:-1;;;;;252:297:6;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;1225:187:0:-;;;;;:::i;:::-;1273:12;:26;;1289:10;1297:1;1289:10;:::i;:::-;1273:26;:::i;:::-;;;:::i;:::-;;1269:95;;1392:12;;;:::i;1269:95::-;1322:31;1342:10;1350:1;1342:10;:::i;:::-;-1:-1:-1;;;1322:31:0;;;;;;;;;:::i;:::-;;;;252:297:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;252:297:6;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;252:297:6;;;;;;;;;;;;;-1:-1:-1;;;;;252:297:6;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:297:6;;;;;;;;;;;;;;;;-1:-1:-1;252:297:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;252:297:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1582:113:2:-;;1648:13;1671:17;1582:113;1648:13;;:::i;:::-;1671:17;;:::i;252:297:6:-;;;;;;;;;;;;2688:82:2;2754:9;2761:2;2754:9;:::i;7439:208::-;7509:7;:21;;7520:10;7528:1;7520:10;:::i;7509:21::-;;7505:91;;7634:5;7621:1;7613:10;7621:1;7613:10;:::i;:::-;7625:7;7634:5;;;:::i;7505:91::-;7553:32;7574:10;7582:1;7574:10;:::i;:::-;-1:-1:-1;;;7553:32:2;;;;;;;;;:::i;252:297:6:-;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;252:297:6;;;;;;;;-1:-1:-1;;;;;252:297:6;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;252:297:6;;;;3052:40:0;;;;;;;2912:187::o;252:297:6:-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;252:297:6;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::o;5989:1107:2:-;;;;6078:4;:18;;6086:10;6094:1;6086:10;:::i;6078:18::-;;6074:540;;6214:21;;6230:5;6214:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6628:2;:16;;6634:10;6642:1;6634:10;:::i;6628:16::-;;6624:425;;6791:21;;6807:5;6791:21;;;:::i;:::-;252:297:6;;;6791:21:2;7079:2;7083:5;7064:25;;;;;;;:::i;:::-;;;:::i;:::-;;;252:297:6;;;;7064:25:2;;;;;252:297:6;;;;;;;6624:425:2;7002:22;7019:5;7002:22;:13;7012:2;7002:9;:13;:::i;:::-;:22;;;;:::i;:::-;252:297:6;;;7002:22:2;;;:::i;:::-;6624:425;;6074:540;6288:15;;6298:4;6288:9;:15;:::i;:::-;;:::i;:::-;6335:5;6321:11;:19;6317:115;;6552:37;;252:297:6;;;6552:15:2;6562:4;6552:9;:15;:::i;:::-;:37;:::i;:::-;6074:540;;6317:115;-1:-1:-1;;;6367:50:2;;;;;;;;;6392:4;6367:50;;:::i"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_addresst_address": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_addresst_uint256": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_address": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint256": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_string_storage": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_address_uint256_uint256": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bool_to_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_storage": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_to_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint8_to_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_string": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_string": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_string_fromStack": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_from_storage_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_from_storage_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_rational_by": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_by": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_uint160": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_address_to_address": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_array_string_storage_to_string": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_rational_by_to_address": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_rational_by_to_uint160": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_rational_by_to_uint8": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_uint160_to_address": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_uint160_to_uint160": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_uint256_to_uint256": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_array_from_storage_to_memory_string": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"external_fun_allowance": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_approve": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_balanceOf": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_decimals": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_mint": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_name": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_owner": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_renounceOwnership": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_symbol": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_totalSupply": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transfer": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferFrom": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferOwnership": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_from_storage_value_offset_address": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_from_storage_value_offset_uint256": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun__approve": {
									"entryPoint": 1764,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun__mint": {
									"entryPoint": 2109,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun__transfer": {
									"entryPoint": 1914,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun__transferOwnership": {
									"entryPoint": 2199,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_allowance": {
									"entryPoint": 1619,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_approve": {
									"entryPoint": 1292,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_approve_750": {
									"entryPoint": 2335,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_balanceOf": {
									"entryPoint": 1481,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_checkOwner": {
									"entryPoint": 2061,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_decimals": {
									"entryPoint": 1378,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_mint": {
									"entryPoint": 1411,
									"id": 981,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_mint_inner": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_msgSender": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_name": {
									"entryPoint": 1282,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_owner": {
									"entryPoint": 1589,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_renounceOwnership": {
									"entryPoint": 1562,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_renounceOwnership_inner": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_spendAllowance": {
									"entryPoint": 1821,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_symbol": {
									"entryPoint": 1599,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_totalSupply": {
									"entryPoint": 1325,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_transfer": {
									"entryPoint": 1609,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_transferFrom": {
									"entryPoint": 1335,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_transferOwnership": {
									"entryPoint": 1755,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_transferOwnership_inner": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_update": {
									"entryPoint": 2615,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_mapping_address_uint256__of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"modifier_onlyOwner": {
									"entryPoint": 1507,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"modifier_onlyOwner_104": {
									"entryPoint": 1650,
									"id": 58,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"modifier_onlyOwner_973": {
									"entryPoint": 1388,
									"id": 58,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"prepare_store_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_storage_split_offset_address": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_storage_split_offset_uint256": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_0_unsigned": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"update_byte_slice_shift": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"update_byte_slice_shift_0": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"update_storage_value_offset_address_to_address": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offset_uint256_to_uint256": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint256": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"wrapping_add_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"wrapping_sub_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"zero_value_for_split_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"zero_value_for_split_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"zero_value_for_split_string": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"zero_value_for_split_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"zero_value_for_split_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c806306fdde03146100e0578063095ea7b3146100db57806318160ddd146100d657806323b872dd146100d1578063313ce567146100cc57806340c10f19146100c757806370a08231146100c2578063715018a6146100bd5780638da5cb5b146100b857806395d89b41146100b3578063a9059cbb146100ae578063dd62ed3e146100a95763f2fde38b036100ef576103bd565b6103a1565b610362565b610347565b610312565b6102fa565b6102df565b6102ad565b61027e565b610262565b610206565b6101d8565b61014a565b5f9103126100ef57565b5f80fd5b90825f9392825e0152565b61011f61012860209361013293610113815190565b80835293849260200190565b958691016100f3565b601f01601f191690565b0190565b6020808252610147929101906100fe565b90565b346100ef5761015a3660046100e5565b610171610165610502565b60405191829182610136565b0390f35b6001600160a01b031690565b6001600160a01b0381165b036100ef57565b905035906101a082610181565b565b8061018c565b905035906101a0826101a2565b91906040838203126100ef57610147906101cf8185610193565b936020016101a8565b346100ef576101716101f46101ee3660046101b5565b9061050c565b60405191829182901515815260200190565b346100ef576102163660046100e5565b61017161022161052d565b6040515b9182918290815260200190565b90916060828403126100ef5761014761024b8484610193565b936102598160208601610193565b936040016101a8565b346100ef576101716101f4610278366004610232565b91610537565b346100ef5761028e3660046100e5565b610171610299610562565b6040519182918260ff909116815260200190565b346100ef576102c66102c03660046101b5565b90610583565b604051005b906020828203126100ef5761014791610193565b346100ef576101716102216102f53660046102cb565b6105c9565b346100ef5761030a3660046100e5565b6102c661061a565b346100ef576103223660046100e5565b61017161032d610635565b604051918291826001600160a01b03909116815260200190565b346100ef576103573660046100e5565b61017161016561063f565b346100ef576101716101f46103783660046101b5565b90610649565b91906040838203126100ef57610147906103988185610193565b93602001610193565b346100ef576101716102216103b736600461037e565b90610653565b346100ef576102c66103d03660046102cb565b6106db565b634e487b7160e01b5f52602260045260245ffd5b9060016002830492168015610409575b602083101461040457565b6103d5565b91607f16916103f9565b80545f93929161042f610425836103e9565b8085529360200190565b916001811690811561047e575060011461044857505050565b61045991929394505f5260205f2090565b915f925b81841061046a5750500190565b80548484015260209093019260010161045d565b92949550505060ff1916825215156020020190565b9061014791610413565b634e487b7160e01b5f52604160045260245ffd5b90601f01601f1916810190811067ffffffffffffffff8211176104d357604052565b61049d565b906101a06104f2926104e960405190565b93848092610493565b03836104b1565b610147906104d8565b61014760036104f9565b6105179190336106e4565b600190565b6101479081565b610147905461051c565b6101476002610523565b610517929061054782338361071d565b91909161077a565b61055c6101476101479290565b60ff1690565b610147601261054f565b906101a09161057961080d565b906101a09161083d565b906101a09161056c565b61014790610175906001600160a01b031682565b6101479061058d565b610147906105a1565b906105bd906105aa565b5f5260205260405f2090565b6105de610147916105d75f90565b505f6105b3565b610523565b6105eb61080d565b6101a0610609565b6101756101476101479290565b610147906105f3565b6101a06106155f610600565b610897565b6101a06105e3565b61014790610175565b6101479054610622565b610147600561062b565b61014760046104f9565b6105179133610547565b6101479161066d6105de926106655f90565b5060016105b3565b6105b3565b6101a09061067e61080d565b8061069b61068e6101755f610600565b916001600160a01b031690565b146106a9576101a090610897565b6106d76106b55f610600565b631e4fbdf760e01b5f9081526001600160a01b03909116600452908190602490565b0390fd5b6101a090610672565b916101a0929160019261091f565b6001600160a01b0390911681526060810193926101a0929091604091610719906020830152565b0152565b91929161072a8282610653565b905f19821061073b575b5050509050565b84821061075c57929361075393929103905f9261091f565b805f8080610734565b50637dc7a0d960e11b5f9081529182916106d79186919060046106f2565b918261078b61068e6101755f610600565b146107df57816107a061068e6101755f610600565b146107b1576101a092919091610a37565b6106d76107bd5f610600565b63ec442f0560e01b5f9081526001600160a01b03909116600452908190602490565b6106d76107eb5f610600565b634b637e8f60e11b5f9081526001600160a01b03909116600452908190602490565b610815610635565b61082161068e33610175565b0361082857565b63118cdaa760e01b5f90815233600452602490fd5b8061084d61068e6101755f610600565b146107b1576101a09161085f5f610600565b919091610a37565b906001600160a01b03905b9181191691161790565b9061088c610147610893926105aa565b8254610867565b9055565b6108a1600561062b565b6108ac82600561087c565b906108e06108da7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936105aa565b916105aa565b916108ea60405190565b80805b0390a3565b905f1990610872565b6101476101476101479290565b90610918610147610893926108fb565b82546108f2565b90928161093161068e6101755f610600565b146109e3578361094661068e6101755f610600565b146109b5576109698361096461095d8560016105b3565b87906105b3565b610908565b61097257505050565b9190916108ed6109ab6109a57f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925936105aa565b936105aa565b9361022560405190565b6106d76109c15f610600565b634a1406b160e11b5f9081526001600160a01b03909116600452908190602490565b6106d76109ef5f610600565b63e602df0560e01b5f9081526001600160a01b03909116600452908190602490565b634e487b7160e01b5f52601160045260245ffd5b91908201809211610a3257565b610a11565b91909180610a4a61068e6101755f610600565b03610aef57610a6c610a6583610a606002610523565b610a25565b6002610908565b82610a7c61068e6101755f610600565b03610ac957610a96610a6583610a926002610523565b0390565b9190916108ed6109ab6109a57fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936105aa565b610aea82610ae4610ada865f6105b3565b9161013283610523565b90610908565b610a96565b610afc6105de825f6105b3565b828110610b1957610b1490839003610964835f6105b3565b610a6c565b63391434e360e21b5f9081529283926106d7929060046106f256fea2646970667358221220666ce4505db1315624f9215049b4941d8bc10a2230edaf2927aed230e6a7588664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA9 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xEF JUMPI PUSH2 0x3BD JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x312 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST PUSH0 SWAP2 SUB SLT PUSH2 0xEF JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP3 PUSH0 SWAP4 SWAP3 DUP3 MCOPY ADD MSTORE JUMP JUMPDEST PUSH2 0x11F PUSH2 0x128 PUSH1 0x20 SWAP4 PUSH2 0x132 SWAP4 PUSH2 0x113 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x147 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xFE JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x165 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x136 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0xEF JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A0 DUP3 PUSH2 0x181 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x18C JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A0 DUP3 PUSH2 0x1A2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xEF JUMPI PUSH2 0x147 SWAP1 PUSH2 0x1CF DUP2 DUP6 PUSH2 0x193 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x1F4 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x221 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xEF JUMPI PUSH2 0x147 PUSH2 0x24B DUP5 DUP5 PUSH2 0x193 JUMP JUMPDEST SWAP4 PUSH2 0x259 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x193 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x1F4 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x232 JUMP JUMPDEST SWAP2 PUSH2 0x537 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x299 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x2C6 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xEF JUMPI PUSH2 0x147 SWAP2 PUSH2 0x193 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x221 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x61A JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x32D PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x165 PUSH2 0x63F JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x1F4 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5 JUMP JUMPDEST SWAP1 PUSH2 0x649 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xEF JUMPI PUSH2 0x147 SWAP1 PUSH2 0x398 DUP2 DUP6 PUSH2 0x193 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x193 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x171 PUSH2 0x221 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x37E JUMP JUMPDEST SWAP1 PUSH2 0x653 JUMP JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH2 0x2C6 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x409 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x404 JUMPI JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3F9 JUMP JUMPDEST DUP1 SLOAD PUSH0 SWAP4 SWAP3 SWAP2 PUSH2 0x42F PUSH2 0x425 DUP4 PUSH2 0x3E9 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x47E JUMPI POP PUSH1 0x1 EQ PUSH2 0x448 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x459 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x46A JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x45D JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x147 SWAP2 PUSH2 0x413 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4D3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST SWAP1 PUSH2 0x1A0 PUSH2 0x4F2 SWAP3 PUSH2 0x4E9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x493 JUMP JUMPDEST SUB DUP4 PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x3 PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x517 SWAP2 SWAP1 CALLER PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x147 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x147 SWAP1 SLOAD PUSH2 0x51C JUMP JUMPDEST PUSH2 0x147 PUSH1 0x2 PUSH2 0x523 JUMP JUMPDEST PUSH2 0x517 SWAP3 SWAP1 PUSH2 0x547 DUP3 CALLER DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x55C PUSH2 0x147 PUSH2 0x147 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x12 PUSH2 0x54F JUMP JUMPDEST SWAP1 PUSH2 0x1A0 SWAP2 PUSH2 0x579 PUSH2 0x80D JUMP JUMPDEST SWAP1 PUSH2 0x1A0 SWAP2 PUSH2 0x83D JUMP JUMPDEST SWAP1 PUSH2 0x1A0 SWAP2 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x175 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 PUSH2 0x5BD SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x147 SWAP2 PUSH2 0x5D7 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0x80D JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x609 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x147 PUSH2 0x147 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x615 PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x147 SWAP1 SLOAD PUSH2 0x622 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x5 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x147 PUSH1 0x4 PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x517 SWAP2 CALLER PUSH2 0x547 JUMP JUMPDEST PUSH2 0x147 SWAP2 PUSH2 0x66D PUSH2 0x5DE SWAP3 PUSH2 0x665 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x1A0 SWAP1 PUSH2 0x67E PUSH2 0x80D JUMP JUMPDEST DUP1 PUSH2 0x69B PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x6A9 JUMPI PUSH2 0x1A0 SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x6B5 PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 SWAP1 PUSH2 0x672 JUMP JUMPDEST SWAP2 PUSH2 0x1A0 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x1A0 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x719 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP2 SWAP3 SWAP2 PUSH2 0x72A DUP3 DUP3 PUSH2 0x653 JUMP JUMPDEST SWAP1 PUSH0 NOT DUP3 LT PUSH2 0x73B JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x75C JUMPI SWAP3 SWAP4 PUSH2 0x753 SWAP4 SWAP3 SWAP2 SUB SWAP1 PUSH0 SWAP3 PUSH2 0x91F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP1 PUSH2 0x734 JUMP JUMPDEST POP PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH0 SWAP1 DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH2 0x6D7 SWAP2 DUP7 SWAP2 SWAP1 PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x78B PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x7DF JUMPI DUP2 PUSH2 0x7A0 PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x7B1 JUMPI PUSH2 0x1A0 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xA37 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x7BD PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x7EB PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH2 0x815 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x821 PUSH2 0x68E CALLER PUSH2 0x175 JUMP JUMPDEST SUB PUSH2 0x828 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x84D PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x7B1 JUMPI PUSH2 0x1A0 SWAP2 PUSH2 0x85F PUSH0 PUSH2 0x600 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xA37 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x88C PUSH2 0x147 PUSH2 0x893 SWAP3 PUSH2 0x5AA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x867 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8A1 PUSH1 0x5 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x8AC DUP3 PUSH1 0x5 PUSH2 0x87C JUMP JUMPDEST SWAP1 PUSH2 0x8E0 PUSH2 0x8DA PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x5AA JUMP JUMPDEST SWAP2 PUSH2 0x5AA JUMP JUMPDEST SWAP2 PUSH2 0x8EA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 PUSH0 NOT SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x147 PUSH2 0x147 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x918 PUSH2 0x147 PUSH2 0x893 SWAP3 PUSH2 0x8FB JUMP JUMPDEST DUP3 SLOAD PUSH2 0x8F2 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x931 PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x9E3 JUMPI DUP4 PUSH2 0x946 PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST EQ PUSH2 0x9B5 JUMPI PUSH2 0x969 DUP4 PUSH2 0x964 PUSH2 0x95D DUP6 PUSH1 0x1 PUSH2 0x5B3 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x972 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x8ED PUSH2 0x9AB PUSH2 0x9A5 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x5AA JUMP JUMPDEST SWAP4 PUSH2 0x5AA JUMP JUMPDEST SWAP4 PUSH2 0x225 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x9C1 PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x9EF PUSH0 PUSH2 0x600 JUMP JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x24 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA32 JUMPI JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0xA4A PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST SUB PUSH2 0xAEF JUMPI PUSH2 0xA6C PUSH2 0xA65 DUP4 PUSH2 0xA60 PUSH1 0x2 PUSH2 0x523 JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x908 JUMP JUMPDEST DUP3 PUSH2 0xA7C PUSH2 0x68E PUSH2 0x175 PUSH0 PUSH2 0x600 JUMP JUMPDEST SUB PUSH2 0xAC9 JUMPI PUSH2 0xA96 PUSH2 0xA65 DUP4 PUSH2 0xA92 PUSH1 0x2 PUSH2 0x523 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x8ED PUSH2 0x9AB PUSH2 0x9A5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0xAEA DUP3 PUSH2 0xAE4 PUSH2 0xADA DUP7 PUSH0 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 PUSH2 0x132 DUP4 PUSH2 0x523 JUMP JUMPDEST SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xAFC PUSH2 0x5DE DUP3 PUSH0 PUSH2 0x5B3 JUMP JUMPDEST DUP3 DUP2 LT PUSH2 0xB19 JUMPI PUSH2 0xB14 SWAP1 DUP4 SWAP1 SUB PUSH2 0x964 DUP4 PUSH0 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 SWAP1 DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH2 0x6D7 SWAP3 SWAP1 PUSH1 0x4 PUSH2 0x6F2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x6CE4505DB13156 0x24 EXTDELEGATECALL 0x21 POP BLOBHASH 0xB4 SWAP5 SAR DUP12 0xC1 EXP 0x22 ADDRESS 0xED 0xAF 0x29 0x27 0xAE 0xD2 ADDRESS DUPN 0xA7 PC DUP7 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "252:297:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;252:297:6;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;252:297:6;;:::o;:::-;-1:-1:-1;;;;;252:297:6;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;252:297:6;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;252:297:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;252:297:6;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;1760:89:2:-;1830:12;1837:5;1830:12;:::i;3979:186::-;4131:5;;;735:10:5;4131:5:2;:::i;:::-;4154:4;4147:11;:::o;252:297:6:-;;;;;;;;;;:::i;2830:97:2:-;2908:12;;;:::i;4757:244::-;4967:5;;;4931;4967;735:10:5;4967:5:2;4931;:::i;:::-;4963:2;4967:5;;;:::i;252:297:6:-;;;;;;;;;;;;2688:82:2;2754:9;2761:2;2754:9;:::i;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;451:95:6;531:6;451:95;531:6;:::i;451:95::-;;;;;:::i;252:297::-;;;;;-1:-1:-1;;;;;252:297:6;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;2985:116:2:-;3076:18;;2985:116;3050:7;252:297:6;;;3050:7:2;3076:9;;:18;:::i;:::-;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;252:297:6:-;;;;;;;;;;;:::i;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;252:297:6:-;;;;;;;;;;:::i;1638:85:0:-;1710:6;;;:::i;1962:93:2:-;2034:14;2041:7;2034:14;:::i;3296:178::-;3440:5;;735:10:5;3397:12:2;728:17:5;3532:140:2;3638:27;3532:140;3638:18;:27;3532:140;3612:7;252:297:6;;;3612:7:2;3638:11;;:18;:::i;:::-;:27;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;2627:8;:22;;2639:10;2647:1;2639:10;:::i;2627:22::-;;-1:-1:-1;;;;;252:297:6;;;2627:22:0;;2623:91;;2742:8;;;:::i;2623:91::-;2672:31;2692:10;2700:1;2692:10;:::i;:::-;-1:-1:-1;;;2672:31:0;;;;-1:-1:-1;;;;;252:297:6;;;2672:31:0;252:297:6;2672:31:0;;;252:297:6;;;2672:31:0;;;;2543:215;;;;:::i;8707:128:2:-;;8823:4;8707:128;8807:7;8823:4;;;:::i;252:297:6:-;-1:-1:-1;;;;;252:297:6;;;;;;;;;;;;;;;;;;;;;;;;;;;10396:476:2;;;;10522:25;10539:7;10396:476;10522:25;:::i;:::-;10561:16;-1:-1:-1;;10561:16:2;:36;10557:309;;10396:476;;;;;;:::o;10557:309::-;10636:5;10617:16;:24;10613:130;;10793:5;;10835;;10793;10800:7;252:297:6;10835:5:2;;;;:::i;:::-;10557:309;;;;;;10613:130;-1:-1:-1;;;;10668:60:2;;;;;;;;;10695:7;;10704:16;10668:60;;:::i;5374:300::-;;5457:4;:18;;5465:10;5473:1;5465:10;:::i;5457:18::-;;5453:86;;5552:2;:16;;5558:10;5566:1;5558:10;:::i;5552:16::-;;5548:86;;5661:5;5651:4;5657:2;5661:5;;;:::i;5548:86::-;5591:32;5612:10;5620:1;5612:10;:::i;:::-;-1:-1:-1;;;5591:32:2;;;;-1:-1:-1;;;;;252:297:6;;;5591:32:2;252:297:6;5591:32:2;;;252:297:6;;;5453:86:2;5498:30;5517:10;5525:1;5517:10;:::i;:::-;-1:-1:-1;;;5498:30:2;;;;-1:-1:-1;;;;;252:297:6;;;5498:30:2;252:297:6;5498:30:2;;;252:297:6;;;1796:162:0;1855:7;;:::i;:::-;:23;;735:10:5;1866:12:0;728:17:5;1855:23:0;;1851:101;;1796:162::o;1851:101::-;-1:-1:-1;;;1901:40:0;;;;735:10:5;1901:40:0;252:297:6;;;2672:31:0;7439:208:2;7509:7;:21;;7520:10;7528:1;7520:10;:::i;7509:21::-;;7505:91;;7634:5;7621:1;7613:10;7621:1;7613:10;:::i;:::-;7625:7;7634:5;;;:::i;252:297:6:-;;-1:-1:-1;;;;;252:297:6;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;252:297:6;;;;3052:40:0;;;;;;;2912:187::o;252:297:6:-;;-1:-1:-1;;10580:17:2;252:297:6;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;9682:432:2:-;;;9794:5;:19;;9803:10;9811:1;9803:10;:::i;9794:19::-;;9790:89;;9892:7;:21;;9903:10;9911:1;9903:10;:::i;9892:21::-;;9888:90;;9987:35;10017:5;9987:27;:18;9999:5;9987:11;:18;:::i;:::-;10006:7;9987:27;;:::i;:::-;:35;:::i;:::-;10032:76;;9682:432;;;:::o;10032:76::-;10082:7;10091:5;10066:31;;;;;;;:::i;:::-;;;:::i;:::-;;;252:297:6;;;;9888:90:2;9936:31;9956:10;9964:1;9956:10;:::i;:::-;-1:-1:-1;;;9936:31:2;;;;-1:-1:-1;;;;;252:297:6;;;9936:31:2;252:297:6;9936:31:2;;;252:297:6;;;9790:89:2;9836:32;9857:10;9865:1;9857:10;:::i;:::-;-1:-1:-1;;;9836:32:2;;;;-1:-1:-1;;;;;252:297:6;;;9836:32:2;252:297:6;9836:32:2;;;252:297:6;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;5989:1107:2:-;;;;6078:4;:18;;6086:10;6094:1;6086:10;:::i;6078:18::-;;6074:540;;6214:21;;6230:5;6214:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6628:2;:16;;6634:10;6642:1;6634:10;:::i;6628:16::-;;6624:425;;6791:21;;6807:5;6791:21;;;:::i;:::-;252:297:6;;;6791:21:2;7079:2;7083:5;7064:25;;;;;;;:::i;6624:425::-;7002:22;7019:5;7002:22;:13;7012:2;7002:9;:13;:::i;:::-;:22;;;;:::i;:::-;;;:::i;:::-;6624:425;;6074:540;6288:15;;6298:4;6288:9;:15;:::i;:::-;6335:5;6321:11;:19;6317:115;;6552:37;;252:297:6;;;6552:15:2;6562:4;6552:9;:15;:::i;:37::-;6074:540;;6317:115;-1:-1:-1;;;6367:50:2;;;;;;;;;6392:4;6367:50;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "584400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"decimals()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "RETURN",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "LT",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A37B5B2B721"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A25A1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "4D"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 293,
									"end": 443,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 293,
									"end": 443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 356,
									"end": 366,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 322,
									"end": 330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 322,
									"end": 330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 322,
									"end": 330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 322,
									"end": 330,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 322,
									"end": 330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 332,
									"end": 337,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 332,
									"end": 337,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 332,
									"end": 337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 332,
									"end": 337,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 332,
									"end": 337,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 443,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 293,
									"end": 443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 293,
									"end": 443,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 293,
									"end": 443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 390,
									"end": 400,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 402,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "174876E800"
								},
								{
									"begin": 402,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 418,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 424,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 424,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 424,
									"end": 434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 424,
									"end": 434,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 424,
									"end": 434,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 418,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 418,
									"end": 434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 418,
									"end": 434,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 418,
									"end": 434,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 402,
									"end": 434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 402,
									"end": 434,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 402,
									"end": 434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 402,
									"end": 434,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 402,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 402,
									"end": 434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "129"
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1225,
									"end": 1412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "tag",
									"source": 0,
									"value": "129"
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "130"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "131"
								},
								{
									"begin": 1289,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "132"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1289,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1289,
									"end": 1299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1289,
									"end": 1299,
									"name": "tag",
									"source": 0,
									"value": "132"
								},
								{
									"begin": 1289,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "122"
								},
								{
									"begin": 1273,
									"end": 1299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "tag",
									"source": 0,
									"value": "131"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "122"
								},
								{
									"begin": 1273,
									"end": 1299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "tag",
									"source": 0,
									"value": "130"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "133"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "90"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 1392,
									"end": 1404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "133"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "136"
								},
								{
									"begin": 1342,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "137"
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1342,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1342,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1342,
									"end": 1352,
									"name": "tag",
									"source": 0,
									"value": "137"
								},
								{
									"begin": 1342,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "136"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "185"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "185"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "99"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 2754,
									"end": 2763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "192"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 7520,
									"end": 7530,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7520,
									"end": 7530,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7520,
									"end": 7530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "tag",
									"source": 2,
									"value": "192"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "195"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "90"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7613,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "198"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7613,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7613,
									"end": 7623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7613,
									"end": 7623,
									"name": "tag",
									"source": 2,
									"value": "198"
								},
								{
									"begin": 7613,
									"end": 7623,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 7634,
									"end": 7639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "195"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 7574,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "200"
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7574,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7574,
									"end": 7584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7574,
									"end": 7584,
									"name": "tag",
									"source": 2,
									"value": "200"
								},
								{
									"begin": 7574,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "213"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 3004,
									"end": 3010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "tag",
									"source": 0,
									"value": "213"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "214"
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 3020,
									"end": 3037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "tag",
									"source": 0,
									"value": "214"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "215"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "216"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 3052,
									"end": 3092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "tag",
									"source": 0,
									"value": "216"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 3052,
									"end": 3092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "tag",
									"source": 0,
									"value": "215"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "217"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "tag",
									"source": 0,
									"value": "217"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "tag",
									"source": 0,
									"value": "218"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "219"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "219"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "224"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "226"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP9",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "226"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "224"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "229"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "229"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "238"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 6086,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6086,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6086,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "tag",
									"source": 2,
									"value": "238"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "241"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "243"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "244"
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "245"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "245"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "244"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "243"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "247"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 6634,
									"end": 6644,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6634,
									"end": 6644,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6634,
									"end": 6644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "tag",
									"source": 2,
									"value": "247"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "250"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "252"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "244"
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "254"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6791,
									"end": 6812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "tag",
									"source": 2,
									"value": "254"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "tag",
									"source": 2,
									"value": "252"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "218"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "257"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "258"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "258"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "257"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "259"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "259"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "250"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "260"
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "261"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "262"
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 7002,
									"end": 7015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "tag",
									"source": 2,
									"value": "262"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "263"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 7002,
									"end": 7024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "tag",
									"source": 2,
									"value": "263"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 252,
									"end": 549,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "tag",
									"source": 2,
									"value": "261"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 7002,
									"end": 7024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "tag",
									"source": 2,
									"value": "260"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "252"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "241"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "264"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "265"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6288,
									"end": 6303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "tag",
									"source": 2,
									"value": "265"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6288,
									"end": 6303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "tag",
									"source": 2,
									"value": "264"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "268"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "271"
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 252,
									"end": 549,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 252,
									"end": 549,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "272"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6552,
									"end": 6567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "tag",
									"source": 2,
									"value": "272"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 6552,
									"end": 6589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "tag",
									"source": 2,
									"value": "271"
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "243"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "268"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220666ce4505db1315624f9215049b4941d8bc10a2230edaf2927aed230e6a7588664736f6c634300081e0033",
									".code": [
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "STOP",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4131,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2908,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4931,
											"end": 4936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4967,
											"end": 4972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2754,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 531,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 451,
											"end": 546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 531,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 531,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 451,
											"end": 546,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 451,
											"end": 546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 451,
											"end": 546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 451,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 451,
											"end": 546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 451,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 451,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3076,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3076,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1554,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2384,
											"end": 2385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2376,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2376,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1710,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 728,
											"end": 745,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3638,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3638,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 2639,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2639,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2742,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2692,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2692,
											"end": 2702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2702,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2692,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 8823,
											"end": 8827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10835,
											"end": 10840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5465,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5465,
											"end": 5475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5558,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5558,
											"end": 5568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5661,
											"end": 5666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 5612,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5612,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5612,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5612,
											"end": 5622,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 5612,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 5517,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5517,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5527,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 5517,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 728,
											"end": 745,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 7520,
											"end": 7530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7613,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 7613,
											"end": 7623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7613,
											"end": 7623,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 7613,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7634,
											"end": 7639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3004,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3020,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3052,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3052,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 9803,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 9803,
											"end": 9813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 9903,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9903,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 9903,
											"end": 9913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9987,
											"end": 10005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "tag",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9987,
											"end": 10014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 9987,
											"end": 10022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "tag",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 9956,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9956,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 9956,
											"end": 9966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9956,
											"end": 9966,
											"name": "tag",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 9956,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 9857,
											"end": 9867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 9857,
											"end": 9867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9867,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 9857,
											"end": 9867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 252,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6086,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "459"
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "460"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "460"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "459"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6634,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6634,
											"end": 6644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "tag",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "459"
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 6791,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "tag",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "tag",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "475"
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "476"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "477"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7002,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "tag",
											"source": 2,
											"value": "477"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7002,
											"end": 7024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "tag",
											"source": 2,
											"value": "476"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7002,
											"end": 7024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "tag",
											"source": 2,
											"value": "475"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6288,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "tag",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 252,
											"end": 549,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6552,
											"end": 6567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"TokenB.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenB.sol\":\"tokenB\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":false},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"TokenB.sol\":{\"keccak256\":\"0x4ecd7990c678512d7cd85e3fb7509a87dc4f4d0d84080c4c4f987b02f2ed5025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://747ec2d4278e037eb19219b2137b3ecc4f921d3691df9f26a4ec7b1126025959\",\"dweb:/ipfs/QmYQTBU2Vw3vwrD5D7WKjB7SJ4NVmXC4gnf4PmT5JdTXdm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "TokenB.sol:tokenB",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "TokenB.sol:tokenB",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "TokenB.sol:tokenB",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "TokenB.sol:tokenB",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "TokenB.sol:tokenB",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "TokenB.sol:tokenB",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"TokenB.sol": {
				"ast": {
					"absolutePath": "TokenB.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"Ownable": [
							147
						],
						"tokenB": [
							982
						]
					},
					"id": 983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 983,
							"sourceUnit": 800,
							"src": "111:68:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "119:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 983,
							"sourceUnit": 148,
							"src": "181:67:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 938,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "189:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 940,
										"name": "ERC20",
										"nameLocations": [
											"271:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "271:5:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "271:5:6"
								},
								{
									"baseName": {
										"id": 942,
										"name": "Ownable",
										"nameLocations": [
											"278:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "278:7:6"
									},
									"id": 943,
									"nodeType": "InheritanceSpecifier",
									"src": "278:7:6"
								}
							],
							"canonicalName": "tokenB",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 982,
							"linearizedBaseContracts": [
								982,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "tokenB",
							"nameLocation": "261:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "373:70:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 955,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "390:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "394:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "390:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030303030303030303030",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "402:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000_by_1",
																	"typeString": "int_const 100000000000"
																},
																"value": "100000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "418:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 959,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "424:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "424:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "418:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "402:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 954,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "384:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "384:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "384:51:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "546f6b656e42",
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "322:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2",
														"typeString": "literal_string \"TokenB\""
													},
													"value": "TokenB"
												},
												{
													"hexValue": "544b42",
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "332:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca",
														"typeString": "literal_string \"TKB\""
													},
													"value": "TKB"
												}
											],
											"id": 948,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 945,
												"name": "ERC20",
												"nameLocations": [
													"316:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "316:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "316:22:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 950,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "356:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "360:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "356:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 952,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 949,
												"name": "Ownable",
												"nameLocations": [
													"348:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "348:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "348:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:0:6"
									},
									"scope": 982,
									"src": "293:150:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "510:36:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "527:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "531:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 975,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "521:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "521:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "521:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 973,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 972,
												"name": "onlyOwner",
												"nameLocations": [
													"500:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "500:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "500:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "460:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "473:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "465:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "485:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "477:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:28:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:6"
									},
									"scope": 982,
									"src": "451:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 983,
							"src": "252:297:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "83:466:6"
				},
				"id": 6
			}
		}
	}
}