{
	"id": "d85a18d71c641a8488dbeb61853801d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"simpleswap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n/// @title SimpleSwap - Decentralized Exchange Contract\r\n/// @notice Minimal DEX with liquidity provision and token swap\r\ncontract SimpleSwap is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    uint256 private constant FEE_NUMERATOR = 997;\r\n    uint256 private constant FEE_DENOMINATOR = 1000;\r\n\r\n    struct Reserves {\r\n        uint256 reserve0;\r\n        uint256 reserve1;\r\n    }\r\n\r\n    struct Pair {\r\n        Reserves reserves;\r\n        uint256 totalSupply;\r\n        mapping(address => uint256) balances;\r\n    }\r\n\r\n    mapping(address => mapping(address => Pair)) private _pairs;\r\n\r\n    event LiquidityAdded(address indexed token0, address indexed token1, address indexed provider, uint256 amount0, uint256 amount1, uint256 liquidity);\r\n    event LiquidityRemoved(address indexed token0, address indexed token1, address indexed provider, uint256 amount0, uint256 amount1, uint256 liquidity);\r\n    event TokensSwapped(address indexed tokenIn, address indexed tokenOut, address indexed user, uint256 amountIn, uint256 amountOut);\r\n\r\n    function balanceOf(address tokenA, address tokenB, address user) external view returns (uint256) {\r\n        (address token0, address token1) = _sortTokens(tokenA, tokenB);\r\n        return _pairs[token0][token1].balances[user];\r\n    }\r\n\r\n    function getReserves(address tokenA, address tokenB) external view returns (uint256 reserveA, uint256 reserveB) {\r\n        (address token0, address token1) = _sortTokens(tokenA, tokenB);\r\n        Reserves memory r = _pairs[token0][token1].reserves;\r\n        (reserveA, reserveB) = tokenA == token0 ? (r.reserve0, r.reserve1) : (r.reserve1, r.reserve0);\r\n    }\r\n\r\n    function getAmountOut(uint256 amountIn, address tokenIn, address tokenOut) external view returns (uint256) {\r\n        (address token0, address token1) = _sortTokens(tokenIn, tokenOut);\r\n        Pair storage pair = _pairs[token0][token1];\r\n        (uint256 reserveIn, uint256 reserveOut) = tokenIn == token0 ?\r\n            (pair.reserves.reserve0, pair.reserves.reserve1) :\r\n            (pair.reserves.reserve1, pair.reserves.reserve0);\r\n        return _getAmountOut(amountIn, reserveIn, reserveOut);\r\n    }\r\n\r\n    function _sortTokens(address tokenA, address tokenB) internal pure returns (address, address) {\r\n        require(tokenA != tokenB, \"Identical tokens\");\r\n        require(tokenA != address(0) && tokenB != address(0), \"Zero address\");\r\n        return tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n    }\r\n\r\n    function _getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) internal pure returns (uint256) {\r\n        require(amountIn > 0 && reserveIn > 0 && reserveOut > 0, \"Invalid input\");\r\n        uint256 amountInWithFee = amountIn * FEE_NUMERATOR;\r\n        return (amountInWithFee * reserveOut) / (reserveIn * FEE_DENOMINATOR + amountInWithFee);\r\n    }\r\n\r\n    function _getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) internal pure returns (uint256) {\r\n        require(amountOut > 0 && reserveIn > 0 && reserveOut > amountOut, \"Invalid output\");\r\n        uint256 numerator = reserveIn * amountOut * FEE_DENOMINATOR;\r\n        uint256 denominator = (reserveOut - amountOut) * FEE_NUMERATOR;\r\n        return (numerator / denominator) + 1;\r\n    }\r\n\r\n    function _min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function _sqrt(uint256 y) internal pure returns (uint256 z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint256 x = (y >> 1) + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) >> 1;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external nonReentrant returns (uint256 amountA, uint256 amountB, uint256 liquidity) {\r\n        require(block.timestamp <= deadline, \"Expired\");\r\n        (address token0, address token1) = _sortTokens(tokenA, tokenB);\r\n        Pair storage pair = _pairs[token0][token1];\r\n\r\n        (uint256 reserve0, uint256 reserve1) = (pair.reserves.reserve0, pair.reserves.reserve1);\r\n\r\n        if (reserve0 == 0 && reserve1 == 0) {\r\n            (amountA, amountB) = (amountADesired, amountBDesired);\r\n        } else {\r\n            uint256 amountBOptimal = (amountADesired * reserve1) / reserve0;\r\n            if (amountBOptimal <= amountBDesired) {\r\n                require(amountBOptimal >= amountBMin, \"Slippage B\");\r\n                (amountA, amountB) = (amountADesired, amountBOptimal);\r\n            } else {\r\n                uint256 amountAOptimal = (amountBDesired * reserve0) / reserve1;\r\n                require(amountAOptimal >= amountAMin, \"Slippage A\");\r\n                (amountA, amountB) = (amountAOptimal, amountBDesired);\r\n            }\r\n        }\r\n\r\n        IERC20(tokenA).safeTransferFrom(msg.sender, address(this), amountA);\r\n        IERC20(tokenB).safeTransferFrom(msg.sender, address(this), amountB);\r\n\r\n        if (pair.totalSupply == 0) {\r\n            liquidity = _sqrt(amountA * amountB);\r\n        } else {\r\n            liquidity = _min((amountA * pair.totalSupply) / reserve0, (amountB * pair.totalSupply) / reserve1);\r\n        }\r\n\r\n        require(liquidity > 0, \"Liquidity zero\");\r\n\r\n        pair.reserves.reserve0 = reserve0 + amountA;\r\n        pair.reserves.reserve1 = reserve1 + amountB;\r\n        pair.totalSupply += liquidity;\r\n        pair.balances[to] += liquidity;\r\n\r\n        emit LiquidityAdded(token0, token1, to, amountA, amountB, liquidity);\r\n    }\r\n\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 liquidity,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external nonReentrant returns (uint256 amountA, uint256 amountB) {\r\n        require(block.timestamp <= deadline, \"Expired\");\r\n        require(liquidity > 0, \"Zero liquidity\");\r\n\r\n        (address token0, address token1) = _sortTokens(tokenA, tokenB);\r\n        Pair storage pair = _pairs[token0][token1];\r\n        require(pair.balances[msg.sender] >= liquidity, \"Insufficient LP\");\r\n\r\n        uint256 reserve0 = pair.reserves.reserve0;\r\n        uint256 reserve1 = pair.reserves.reserve1;\r\n        uint256 totalSupply = pair.totalSupply;\r\n\r\n        amountA = (liquidity * reserve0) / totalSupply;\r\n        amountB = (liquidity * reserve1) / totalSupply;\r\n\r\n        require(amountA >= amountAMin, \"Min A\");\r\n        require(amountB >= amountBMin, \"Min B\");\r\n\r\n        pair.reserves.reserve0 = reserve0 - amountA;\r\n        pair.reserves.reserve1 = reserve1 - amountB;\r\n        pair.totalSupply -= liquidity;\r\n        pair.balances[msg.sender] -= liquidity;\r\n\r\n        IERC20(tokenA).safeTransfer(to, amountA);\r\n        IERC20(tokenB).safeTransfer(to, amountB);\r\n\r\n        emit LiquidityRemoved(token0, token1, msg.sender, amountA, amountB, liquidity);\r\n    }\r\n\r\n    function swapExactTokensForTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external nonReentrant returns (uint256[] memory amounts) {\r\n        require(block.timestamp <= deadline, \"Expired\");\r\n        require(path.length == 2, \"Path must be 2\");\r\n        require(amountIn > 0, \"Zero input\");\r\n\r\n        address tokenIn = path[0];\r\n        address tokenOut = path[1];\r\n\r\n        (address token0, address token1) = _sortTokens(tokenIn, tokenOut);\r\n        Pair storage pair = _pairs[token0][token1];\r\n\r\n        (uint256 reserveIn, uint256 reserveOut) = tokenIn == token0 ?\r\n            (pair.reserves.reserve0, pair.reserves.reserve1) :\r\n            (pair.reserves.reserve1, pair.reserves.reserve0);\r\n\r\n        IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), amountIn);\r\n\r\n        uint256 amountOut = _getAmountOut(amountIn, reserveIn, reserveOut);\r\n        require(amountOut >= amountOutMin, \"Insufficient output\");\r\n\r\n        if (tokenIn == token0) {\r\n            pair.reserves.reserve0 = reserveIn + amountIn;\r\n            pair.reserves.reserve1 = reserveOut - amountOut;\r\n        } else {\r\n            pair.reserves.reserve1 = reserveIn + amountIn;\r\n            pair.reserves.reserve0 = reserveOut - amountOut;\r\n        }\r\n\r\n        IERC20(tokenOut).safeTransfer(to, amountOut);\r\n\r\n        amounts = new uint256[](2);\r\n        amounts[0] = amountIn;\r\n        amounts[1] = amountOut;\r\n\r\n        emit TokensSwapped(tokenIn, tokenOut, msg.sender, amountIn, amountOut);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200023b1bd0a79883a963152ec9aa6fd4501b0b58861348160b902a41d381bc45e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200023b1bd0a79883a963152ec9aa6fd4501b0b58861348160b902a41d381bc45e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x23 0xB1 0xBD EXP PUSH26 0x883A963152EC9AA6FD4501B0B58861348160B902A41D381BC45E PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212200023b1bd0a79883a963152ec9aa6fd4501b0b58861348160b902a41d381bc45e64736f6c634300081e0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x23 0xB1 0xBD EXP PUSH26 0x883A963152EC9AA6FD4501B0B58861348160B902A41D381BC45E PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200023b1bd0a79883a963152ec9aa6fd4501b0b58861348160b902a41d381bc45e64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"simpleswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simpleswap.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "TokensSwapped",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SimpleSwap - Decentralized Exchange Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  sstore\n    /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_18, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_18:\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x38ed1739\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5e1e6325\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x75bb9b63\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xbaa2abde\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd52bb6f4\n      eq\n      tag_28\n      jumpi\n      0xe8e33700\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      jumpi(tag_38, callvalue)\n      jumpi(tag_38, slt(add(not(0x03), calldatasize), 0x0100))\n      tag_36\n      tag_3\n      jump\t// in\n    tag_36:\n      tag_37\n      tag_1\n      jump\t// in\n    tag_37:\n      swap1\n      calldataload(0x64)\n      calldataload(0x44)\n      calldataload(0xc4)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_38\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_40\n      tag_12\n      jump\t// in\n    tag_40:\n        /* \"simpleswap.sol\":4305:4352  require(block.timestamp <= deadline, \"Expired\") */\n      tag_41\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      calldataload(0xe4)\n        /* \"simpleswap.sol\":4313:4328  block.timestamp */\n      timestamp\n        /* \"simpleswap.sol\":4313:4340  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"simpleswap.sol\":4305:4352  require(block.timestamp <= deadline, \"Expired\") */\n      tag_5\n      jump\t// in\n    tag_41:\n        /* \"simpleswap.sol\":4398:4425  _sortTokens(tokenA, tokenB) */\n      tag_42\n      dup6\n      dup6\n      tag_13\n      jump\t// in\n    tag_42:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap4\n      dup5\n      sload\n        /* \"simpleswap.sol\":4555:4577  pair.reserves.reserve1 */\n      swap5\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n        /* \"simpleswap.sol\":4555:4577  pair.reserves.reserve1 */\n      dup2\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap2\n      dup3\n      sload\n        /* \"simpleswap.sol\":4595:4608  reserve0 == 0 */\n      swap8\n      dup8\n      iszero\n        /* \"simpleswap.sol\":4595:4625  reserve0 == 0 && reserve1 == 0 */\n      dup1\n      tag_43\n      jumpi\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_44:\n        /* \"simpleswap.sol\":4591:5259  if (reserve0 == 0 && reserve1 == 0) {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"simpleswap.sol\":4642:4695  (amountA, amountB) = (amountADesired, amountBDesired) */\n      swap1\n        /* \"simpleswap.sol\":5330:5337  amountA */\n      tag_49\n        /* \"simpleswap.sol\":4642:4695  (amountA, amountB) = (amountADesired, amountBDesired) */\n      swap11\n        /* \"simpleswap.sol\":5408:5415  amountB */\n      tag_48\n        /* \"simpleswap.sol\":4642:4695  (amountA, amountB) = (amountADesired, amountBDesired) */\n      swap3\n      swap12\n      dup13\n      swap3\n        /* \"simpleswap.sol\":4591:5259  if (reserve0 == 0 && reserve1 == 0) {... */\n      dup1\n      swap13\n    tag_49:\n        /* \"simpleswap.sol\":5323:5327  this */\n      address\n      swap1\n        /* \"simpleswap.sol\":5303:5313  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      and\n        /* \"simpleswap.sol\":5330:5337  amountA */\n      tag_14\n      jump\t// in\n        /* \"simpleswap.sol\":5408:5415  amountB */\n    tag_48:\n        /* \"simpleswap.sol\":5433:5449  pair.totalSupply */\n      0x02\n      dup2\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup1\n      sload\n      swap8\n        /* \"simpleswap.sol\":5433:5454  pair.totalSupply == 0 */\n      dup11\n      dup11\n      dup3\n      dup11\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup13\n        /* \"simpleswap.sol\":5433:5454  pair.totalSupply == 0 */\n      dup1\n      tag_50\n      jumpi\n        /* \"simpleswap.sol\":5489:5506  amountA * amountB */\n      pop\n      pop\n      pop\n      swap1\n      tag_52\n      swap2\n      tag_10\n      jump\t// in\n    tag_52:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x00\n        /* \"simpleswap.sol\":3713:3714  3 */\n      0x03\n        /* \"simpleswap.sol\":3709:3714  y > 3 */\n      dup3\n      gt\n        /* \"simpleswap.sol\":3713:3714  3 */\n      iszero\n      tag_53\n      jumpi\n        /* \"simpleswap.sol\":3731:3736  z = y */\n      pop\n      dup1\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup1\n      0x01\n      shr\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_55\n      jumpi\n        /* \"simpleswap.sol\":3790:3883  while (x < z) {... */\n      swap1\n        /* \"simpleswap.sol\":3797:3802  x < z */\n    tag_57:\n      dup3\n      dup3\n      lt\n      tag_58\n      jumpi\n        /* \"simpleswap.sol\":3705:3944  if (y > 3) {... */\n      pop\n      pop\n    tag_60:\n        /* \"simpleswap.sol\":5429:5650  if (pair.totalSupply == 0) {... */\n      swap8\n    tag_61:\n        /* \"simpleswap.sol\":5670:5683  liquidity > 0 */\n      dup9\n      iszero\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_62\n      jumpi\n      tag_64\n        /* \"simpleswap.sol\":5740:5758  reserve0 + amountA */\n      swap10\n        /* \"simpleswap.sol\":5863:5876  pair.balances */\n      0x03\n        /* \"simpleswap.sol\":5740:5758  reserve0 + amountA */\n      swap6\n        /* \"simpleswap.sol\":5794:5812  reserve1 + amountB */\n      tag_65\n        /* \"simpleswap.sol\":5740:5758  reserve0 + amountA */\n      dup15\n        /* \"simpleswap.sol\":5823:5852  pair.totalSupply += liquidity */\n      tag_66\n        /* \"simpleswap.sol\":5740:5758  reserve0 + amountA */\n      swap6\n      dup16\n      tag_67\n      swap1\n      dup16\n      swap8\n      tag_7\n      jump\t// in\n    tag_67:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup10\n      sstore\n        /* \"simpleswap.sol\":5794:5812  reserve1 + amountB */\n      tag_7\n      jump\t// in\n    tag_65:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      sstore\n        /* \"simpleswap.sol\":5823:5852  pair.totalSupply += liquidity */\n      tag_7\n      jump\t// in\n    tag_66:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      sstore\n      dup5\n      0x00\n      mstore\n        /* \"simpleswap.sol\":5863:5876  pair.balances */\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"simpleswap.sol\":5863:5893  pair.balances[to] += liquidity */\n      tag_68\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup6\n      dup3\n      sload\n        /* \"simpleswap.sol\":5863:5893  pair.balances[to] += liquidity */\n      tag_7\n      jump\t// in\n    tag_68:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      sstore\n      0x40\n      dup1\n      mload\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup10\n      swap1\n      mstore\n      swap1\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n        /* \"simpleswap.sol\":5911:5974  LiquidityAdded(token0, token1, to, amountA, amountB, liquidity) */\n      0x43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b70\n      swap1\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x60\n      swap1\n        /* \"simpleswap.sol\":5911:5974  LiquidityAdded(token0, token1, to, amountA, amountB, liquidity) */\n      log4\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sstore(0x00, 0x01)\n      mload(0x40)\n      swap4\n      dup5\n      swap4\n      dup5\n      0x40\n      swap2\n      swap5\n      swap4\n      swap3\n      0x60\n      dup3\n      add\n      swap6\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n    tag_64:\n      sub\n      swap1\n      return\n    tag_62:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x90, 0x4c6971756964697479207a65726f)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"simpleswap.sol\":3790:3883  while (x < z) {... */\n    tag_58:\n        /* \"simpleswap.sol\":3823:3828  z = x */\n      swap1\n      swap2\n      pop\n        /* \"simpleswap.sol\":3852:3861  y / x + x */\n      tag_70\n        /* \"simpleswap.sol\":3823:3828  z = x */\n      dup3\n        /* \"simpleswap.sol\":3852:3857  y / x */\n      tag_71\n      dup2\n      dup5\n      tag_11\n      jump\t// in\n    tag_71:\n        /* \"simpleswap.sol\":3852:3861  y / x + x */\n      tag_7\n      jump\t// in\n    tag_70:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n      shr\n        /* \"simpleswap.sol\":3790:3883  while (x < z) {... */\n      swap1\n      jump(tag_57)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_55:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"simpleswap.sol\":3705:3944  if (y > 3) {... */\n    tag_53:\n        /* \"simpleswap.sol\":3904:3910  y != 0 */\n      swap1\n        /* \"simpleswap.sol\":3900:3944  if (y != 0) {... */\n      iszero\n        /* \"simpleswap.sol\":3705:3944  if (y > 3) {... */\n      tag_60\n        /* \"simpleswap.sol\":3900:3944  if (y != 0) {... */\n      jumpi\n        /* \"simpleswap.sol\":3927:3932  z = 1 */\n      pop\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n        /* \"simpleswap.sol\":3705:3944  if (y > 3) {... */\n      jump(tag_60)\n        /* \"simpleswap.sol\":5429:5650  if (pair.totalSupply == 0) {... */\n    tag_50:\n        /* \"simpleswap.sol\":5557:5596  (amountA * pair.totalSupply) / reserve0 */\n      tag_74\n        /* \"simpleswap.sol\":5599:5625  amountB * pair.totalSupply */\n      tag_76\n        /* \"simpleswap.sol\":5558:5584  amountA * pair.totalSupply */\n      swap3\n      tag_76\n      dup4\n        /* \"simpleswap.sol\":5598:5637  (amountB * pair.totalSupply) / reserve1 */\n      tag_77\n        /* \"simpleswap.sol\":5558:5584  amountA * pair.totalSupply */\n      swap8\n      tag_10\n      jump\t// in\n    tag_76:\n        /* \"simpleswap.sol\":5557:5596  (amountA * pair.totalSupply) / reserve0 */\n      tag_11\n      jump\t// in\n    tag_74:\n        /* \"simpleswap.sol\":5599:5625  amountB * pair.totalSupply */\n      swap5\n      tag_10\n      jump\t// in\n        /* \"simpleswap.sol\":5598:5637  (amountB * pair.totalSupply) / reserve1 */\n    tag_77:\n        /* \"simpleswap.sol\":3605:3610  a < b */\n      dup1\n      dup3\n      lt\n      iszero\n      tag_78\n      jumpi\n        /* \"simpleswap.sol\":3605:3618  a < b ? a : b */\n      pop\n    tag_80:\n        /* \"simpleswap.sol\":5429:5650  if (pair.totalSupply == 0) {... */\n      swap8\n      jump(tag_61)\n        /* \"simpleswap.sol\":3605:3618  a < b ? a : b */\n    tag_78:\n      swap1\n      pop\n      jump(tag_80)\n        /* \"simpleswap.sol\":4591:5259  if (reserve0 == 0 && reserve1 == 0) {... */\n    tag_45:\n        /* \"simpleswap.sol\":4754:4779  amountADesired * reserve1 */\n      swap1\n        /* \"simpleswap.sol\":4753:4791  (amountADesired * reserve1) / reserve0 */\n      tag_81\n        /* \"simpleswap.sol\":4754:4779  amountADesired * reserve1 */\n      dup9\n      tag_76\n      dup12\n      dup5\n      tag_10\n      jump\t// in\n        /* \"simpleswap.sol\":4753:4791  (amountADesired * reserve1) / reserve0 */\n    tag_81:\n        /* \"simpleswap.sol\":4810:4842  amountBOptimal <= amountBDesired */\n      swap2\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      pop\n      calldataload(0xa4)\n        /* \"simpleswap.sol\":4871:4899  amountBOptimal >= amountBMin */\n      dup3\n      lt\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_85\n      jumpi\n        /* \"simpleswap.sol\":5330:5337  amountA */\n      tag_49\n        /* \"simpleswap.sol\":4933:4986  (amountA, amountB) = (amountADesired, amountBOptimal) */\n      swap11\n        /* \"simpleswap.sol\":5408:5415  amountB */\n      tag_48\n        /* \"simpleswap.sol\":4933:4986  (amountA, amountB) = (amountADesired, amountBOptimal) */\n      swap3\n      swap12\n      dup13\n      swap3\n        /* \"simpleswap.sol\":4806:5248  if (amountBOptimal <= amountBDesired) {... */\n      dup1\n      swap13\n        /* \"simpleswap.sol\":4591:5259  if (reserve0 == 0 && reserve1 == 0) {... */\n      jump(tag_49)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_85:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb1, 0x29b634b83830b3b29021)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"simpleswap.sol\":4806:5248  if (amountBOptimal <= amountBDesired) {... */\n    tag_83:\n        /* \"simpleswap.sol\":5053:5078  amountBDesired * reserve0 */\n      swap2\n      pop\n      pop\n        /* \"simpleswap.sol\":5052:5090  (amountBDesired * reserve0) / reserve1 */\n      tag_88\n        /* \"simpleswap.sol\":5053:5078  amountBDesired * reserve0 */\n      dup9\n      tag_76\n      dup10\n      dup5\n      tag_10\n      jump\t// in\n        /* \"simpleswap.sol\":5052:5090  (amountBDesired * reserve0) / reserve1 */\n    tag_88:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      calldataload(0x84)\n        /* \"simpleswap.sol\":5117:5145  amountAOptimal >= amountAMin */\n      dup2\n      lt\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_90\n      jumpi\n        /* \"simpleswap.sol\":5330:5337  amountA */\n      tag_49\n        /* \"simpleswap.sol\":5179:5232  (amountA, amountB) = (amountAOptimal, amountBDesired) */\n      swap11\n        /* \"simpleswap.sol\":5408:5415  amountB */\n      tag_48\n        /* \"simpleswap.sol\":5179:5232  (amountA, amountB) = (amountAOptimal, amountBDesired) */\n      swap3\n      swap12\n      dup13\n      swap3\n        /* \"simpleswap.sol\":4806:5248  if (amountBOptimal <= amountBDesired) {... */\n      dup1\n      swap13\n        /* \"simpleswap.sol\":4591:5259  if (reserve0 == 0 && reserve1 == 0) {... */\n      jump(tag_49)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_90:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x536c6970706167652041)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"simpleswap.sol\":4595:4625  reserve0 == 0 && reserve1 == 0 */\n    tag_43:\n        /* \"simpleswap.sol\":4612:4625  reserve1 == 0 */\n      pop\n      dup9\n      iszero\n        /* \"simpleswap.sol\":4595:4625  reserve0 == 0 && reserve1 == 0 */\n      jump(tag_44)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_38:\n      0x00\n      dup1\n      revert\n    tag_28:\n      jumpi(tag_38, callvalue)\n      jumpi(tag_38, slt(add(not(0x03), calldatasize), 0x40))\n      tag_96\n      tag_3\n      jump\t// in\n    tag_96:\n        /* \"simpleswap.sol\":1696:1723  _sortTokens(tokenA, tokenB) */\n      tag_97\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_98\n      tag_1\n      jump\t// in\n    tag_98:\n        /* \"simpleswap.sol\":1696:1723  _sortTokens(tokenA, tokenB) */\n      dup3\n      tag_13\n      jump\t// in\n    tag_97:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap2\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      0x00\n      mstore\n        /* \"simpleswap.sol\":1754:1760  _pairs */\n      0x01\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"simpleswap.sol\":1754:1776  _pairs[token0][token1] */\n      swap1\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap3\n      0x40\n      dup5\n      add\n      swap3\n      dup5\n      dup5\n      lt\n      0xffffffffffffffff\n      dup6\n      gt\n      or\n      tag_99\n      jumpi\n      0x40\n      swap5\n      0x20\n      swap5\n      dup7\n      mstore\n        /* \"simpleswap.sol\":1754:1760  _pairs */\n      0x01\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup5\n      sload\n      swap5\n      dup6\n      dup4\n      mstore\n      add\n      sload\n      swap5\n      dup6\n      swap2\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"simpleswap.sol\":1819:1835  tokenA == token0 */\n      eq\n        /* \"simpleswap.sol\":1819:1889  tokenA == token0 ? (r.reserve0, r.reserve1) : (r.reserve1, r.reserve0) */\n      0x00\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      eq\n      tag_101\n      jumpi\n        /* \"simpleswap.sol\":1819:1889  tokenA == token0 ? (r.reserve0, r.reserve1) : (r.reserve1, r.reserve0) */\n      swap1\n    tag_103:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n        /* \"simpleswap.sol\":1819:1889  tokenA == token0 ? (r.reserve0, r.reserve1) : (r.reserve1, r.reserve0) */\n    tag_101:\n      jump(tag_103)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_99:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_26:\n      jumpi(tag_38, callvalue)\n      jumpi(tag_38, slt(add(not(0x03), calldatasize), 0xe0))\n      tag_108\n      tag_3\n      jump\t// in\n    tag_108:\n      tag_109\n      tag_1\n      jump\t// in\n    tag_109:\n      swap1\n      calldataload(0xa4)\n      calldataload(0x44)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_38\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_112\n      tag_12\n      jump\t// in\n    tag_112:\n        /* \"simpleswap.sol\":6282:6329  require(block.timestamp <= deadline, \"Expired\") */\n      tag_113\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      calldataload(0xc4)\n        /* \"simpleswap.sol\":6290:6305  block.timestamp */\n      timestamp\n        /* \"simpleswap.sol\":6290:6317  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"simpleswap.sol\":6282:6329  require(block.timestamp <= deadline, \"Expired\") */\n      tag_5\n      jump\t// in\n    tag_113:\n        /* \"simpleswap.sol\":6348:6361  liquidity > 0 */\n      dup1\n      iszero\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_114\n      jumpi\n        /* \"simpleswap.sol\":6428:6455  _sortTokens(tokenA, tokenB) */\n      tag_116\n      dup5\n      dup5\n      tag_13\n      jump\t// in\n    tag_116:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap2\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"simpleswap.sol\":6527:6540  pair.balances */\n      swap6\n      0x03\n      dup8\n      add\n        /* \"simpleswap.sol\":6527:6552  pair.balances[msg.sender] */\n      swap5\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"simpleswap.sol\":6541:6551  msg.sender */\n      caller\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      and\n      0x00\n      mstore\n      dup6\n      0x20\n      mstore\n      dup4\n      sload(keccak256(0x00, 0x40))\n        /* \"simpleswap.sol\":6527:6565  pair.balances[msg.sender] >= liquidity */\n      lt\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_117\n      jumpi\n      dup8\n      sload\n        /* \"simpleswap.sol\":6669:6691  pair.reserves.reserve1 */\n      swap1\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n        /* \"simpleswap.sol\":6669:6691  pair.reserves.reserve1 */\n      dup10\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap3\n      dup4\n      sload\n        /* \"simpleswap.sol\":6724:6740  pair.totalSupply */\n      swap4\n      0x02\n      dup12\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap11\n      dup12\n      sload\n        /* \"simpleswap.sol\":6764:6784  liquidity * reserve0 */\n      swap1\n        /* \"simpleswap.sol\":6763:6799  (liquidity * reserve0) / totalSupply */\n      tag_119\n        /* \"simpleswap.sol\":6764:6784  liquidity * reserve0 */\n      dup3\n      tag_76\n      dup9\n      dup13\n      tag_10\n      jump\t// in\n        /* \"simpleswap.sol\":6763:6799  (liquidity * reserve0) / totalSupply */\n    tag_119:\n        /* \"simpleswap.sol\":6821:6841  liquidity * reserve1 */\n      swap12\n        /* \"simpleswap.sol\":6820:6856  (liquidity * reserve1) / totalSupply */\n      tag_121\n        /* \"simpleswap.sol\":6821:6841  liquidity * reserve1 */\n      dup4\n      tag_76\n      dup11\n      dup14\n      tag_10\n      jump\t// in\n        /* \"simpleswap.sol\":6820:6856  (liquidity * reserve1) / totalSupply */\n    tag_121:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap12\n      dup14\n      calldataload(0x64)\n      gt\n      tag_123\n      jumpi\n      calldataload(0x84)\n        /* \"simpleswap.sol\":6927:6948  amountB >= amountBMin */\n      dup14\n      lt\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_125\n      jumpi\n      0x40\n        /* \"simpleswap.sol\":6996:7014  reserve0 - amountA */\n      swap15\n        /* \"simpleswap.sol\":7079:7108  pair.totalSupply -= liquidity */\n      tag_127\n        /* \"simpleswap.sol\":6996:7014  reserve0 - amountA */\n      dup16\n      swap6\n      dup16\n      swap11\n      swap1\n        /* \"simpleswap.sol\":7202:7209  amountA */\n      tag_128\n        /* \"simpleswap.sol\":6996:7014  reserve0 - amountA */\n      swap9\n      dup16\n      swap3\n      dup14\n        /* \"simpleswap.sol\":7253:7260  amountB */\n      tag_129\n        /* \"simpleswap.sol\":6996:7014  reserve0 - amountA */\n      swap16\n      dup15\n      swap11\n      tag_130\n      dup14\n        /* \"simpleswap.sol\":7050:7068  reserve1 - amountB */\n      tag_130\n        /* \"simpleswap.sol\":6996:7014  reserve0 - amountA */\n      swap6\n      tag_8\n      jump\t// in\n    tag_130:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      sstore\n        /* \"simpleswap.sol\":7050:7068  reserve1 - amountB */\n      tag_8\n      jump\t// in\n        /* \"simpleswap.sol\":7079:7108  pair.totalSupply -= liquidity */\n    tag_127:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"simpleswap.sol\":6541:6551  msg.sender */\n      caller\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      dup14\n      0x00\n      keccak256\n        /* \"simpleswap.sol\":7119:7157  pair.balances[msg.sender] -= liquidity */\n      tag_132\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup12\n      dup3\n      sload\n        /* \"simpleswap.sol\":7119:7157  pair.balances[msg.sender] -= liquidity */\n      tag_8\n      jump\t// in\n    tag_132:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"simpleswap.sol\":7202:7209  amountA */\n      tag_16\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      and\n        /* \"simpleswap.sol\":7253:7260  amountB */\n      tag_16\n      jump\t// in\n    tag_129:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup6\n      mload\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      0x40\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"simpleswap.sol\":6541:6551  msg.sender */\n      caller\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      and\n      swap2\n        /* \"simpleswap.sol\":7279:7352  LiquidityRemoved(token0, token1, msg.sender, amountA, amountB, liquidity) */\n      0xd765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c1\n      swap1\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x60\n      swap1\n        /* \"simpleswap.sol\":7279:7352  LiquidityRemoved(token0, token1, msg.sender, amountA, amountB, liquidity) */\n      log4\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sstore(0x00, 0x01)\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n    tag_125:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x05\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xd9, 0x26b4b71021)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_123:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x05\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xd8, 0x4d696e2041)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_117:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8c, 0x0496e73756666696369656e74204c5)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_114:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x90, 0x5a65726f206c6971756964697479)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_24:\n      jumpi(tag_38, callvalue)\n      jumpi(tag_38, slt(add(not(0x03), calldatasize), 0x60))\n        /* \"simpleswap.sol\":1485:1516  _pairs[token0][token1].balances */\n      0x03\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_138\n      tag_3\n      jump\t// in\n    tag_138:\n        /* \"simpleswap.sol\":1440:1467  _sortTokens(tokenA, tokenB) */\n      tag_139\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_140\n      tag_1\n      jump\t// in\n    tag_140:\n      tag_141\n      tag_2\n      jump\t// in\n    tag_141:\n        /* \"simpleswap.sol\":1440:1467  _sortTokens(tokenA, tokenB) */\n      swap3\n      tag_13\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      swap4\n      dup6\n      and\n      dup4\n      mstore\n      swap3\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n      swap5\n      swap1\n      swap4\n      and\n      dup2\n      mstore\n        /* \"simpleswap.sol\":1485:1516  _pairs[token0][token1].balances */\n      swap4\n      swap1\n      swap3\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup2\n      mstore\n      swap2\n      dup2\n      swap1\n      keccak256\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_22:\n      jumpi(tag_38, callvalue)\n      jumpi(tag_38, slt(add(not(0x03), calldatasize), 0x60))\n      0x20\n        /* \"simpleswap.sol\":2357:2403  _getAmountOut(amountIn, reserveIn, reserveOut) */\n      tag_146\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_147\n      tag_1\n      jump\t// in\n    tag_147:\n        /* \"simpleswap.sol\":2058:2088  _sortTokens(tokenIn, tokenOut) */\n      tag_148\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_98\n      tag_2\n      jump\t// in\n        /* \"simpleswap.sol\":2058:2088  _sortTokens(tokenIn, tokenOut) */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap2\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      0x01\n      dup8\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      swap4\n      dup6\n      and\n      dup3\n      mstore\n      swap3\n      dup8\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      swap3\n      swap1\n      swap2\n      and\n        /* \"simpleswap.sol\":2194:2211  tokenIn == token0 */\n      sub\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_150\n      jumpi\n      0x01\n      dup2\n      sload\n        /* \"simpleswap.sol\":2252:2274  pair.reserves.reserve1 */\n      swap2\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sload\n        /* \"simpleswap.sol\":2194:2339  tokenIn == token0 ?... */\n      swap1\n    tag_152:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      calldataload(0x04)\n        /* \"simpleswap.sol\":2357:2403  _getAmountOut(amountIn, reserveIn, reserveOut) */\n      tag_15\n      jump\t// in\n    tag_146:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"simpleswap.sol\":2194:2339  tokenIn == token0 ?... */\n    tag_150:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n        /* \"simpleswap.sol\":2292:2314  pair.reserves.reserve1 */\n      dup2\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sload\n      swap1\n      sload\n        /* \"simpleswap.sol\":2194:2339  tokenIn == token0 ?... */\n      swap1\n      jump(tag_152)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_20:\n      jumpi(tag_38, callvalue)\n      jumpi(tag_38, slt(add(not(0x03), calldatasize), 0xa0))\n      calldataload(0x04)\n      calldataload(0x44)\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_38\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_38\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_38\n      jumpi\n      calldatasize\n      0x24\n      dup5\n      0x05\n      shl\n      dup5\n      add\n      add\n      gt\n      tag_38\n      jumpi\n      calldataload(0x64)\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup4\n      sub\n      tag_38\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_167\n      tag_12\n      jump\t// in\n    tag_167:\n        /* \"simpleswap.sol\":7617:7664  require(block.timestamp <= deadline, \"Expired\") */\n      tag_168\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      calldataload(0x84)\n        /* \"simpleswap.sol\":7625:7640  block.timestamp */\n      timestamp\n        /* \"simpleswap.sol\":7625:7652  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"simpleswap.sol\":7617:7664  require(block.timestamp <= deadline, \"Expired\") */\n      tag_5\n      jump\t// in\n    tag_168:\n        /* \"simpleswap.sol\":7698:7699  2 */\n      0x02\n        /* \"simpleswap.sol\":7683:7699  path.length == 2 */\n      dup5\n      sub\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_169\n      jumpi\n        /* \"simpleswap.sol\":7737:7749  amountIn > 0 */\n      dup2\n      iszero\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_171\n      jumpi\n      dup4\n      iszero\n      tag_196\n      jumpi\n        /* \"simpleswap.sol\":7795:7802  path[0] */\n      tag_175\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x24\n      dup3\n      add\n        /* \"simpleswap.sol\":7795:7802  path[0] */\n      tag_6\n      jump\t// in\n    tag_175:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap4\n      0x01\n      lt\n      iszero\n      tag_196\n      jumpi\n      0x44\n        /* \"simpleswap.sol\":7832:7839  path[1] */\n      tag_178\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap2\n      add\n        /* \"simpleswap.sol\":7832:7839  path[1] */\n      tag_6\n      jump\t// in\n    tag_178:\n        /* \"simpleswap.sol\":7887:7917  _sortTokens(tokenIn, tokenOut) */\n      swap2\n      tag_179\n      dup4\n      dup6\n      tag_13\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap2\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      swap5\n      dup7\n      and\n      dup4\n      mstore\n      swap4\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n        /* \"simpleswap.sol\":8025:8042  tokenIn == token0 */\n      dup6\n      eq\n      swap1\n        /* \"simpleswap.sol\":8025:8170  tokenIn == token0 ?... */\n      dup2\n      iszero\n      tag_180\n      jumpi\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup1\n      sload\n        /* \"simpleswap.sol\":8083:8105  pair.reserves.reserve1 */\n      swap5\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n        /* \"simpleswap.sol\":8083:8105  pair.reserves.reserve1 */\n      dup3\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sload\n        /* \"simpleswap.sol\":8025:8170  tokenIn == token0 ?... */\n      swap2\n    tag_182:\n        /* \"simpleswap.sol\":8243:8251  amountIn */\n      tag_183\n        /* \"simpleswap.sol\":8236:8240  this */\n      dup7\n      address\n        /* \"simpleswap.sol\":8216:8226  msg.sender */\n      caller\n        /* \"simpleswap.sol\":8243:8251  amountIn */\n      dup12\n      tag_14\n      jump\t// in\n    tag_183:\n        /* \"simpleswap.sol\":8285:8331  _getAmountOut(amountIn, reserveIn, reserveOut) */\n      tag_184\n      dup4\n      dup9\n      dup9\n      tag_15\n      jump\t// in\n    tag_184:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap7\n      calldataload(0x24)\n        /* \"simpleswap.sol\":8350:8375  amountOut >= amountOutMin */\n      dup9\n      lt\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_185\n      jumpi\n        /* \"simpleswap.sol\":8412:8709  if (tokenIn == token0) {... */\n      dup8\n      dup1\n      swap5\n      dup9\n      swap3\n        /* \"simpleswap.sol\":8755:8764  amountOut */\n      tag_187\n        /* \"simpleswap.sol\":8412:8709  if (tokenIn == token0) {... */\n      swap8\n      0x00\n      eq\n      tag_188\n      jumpi\n        /* \"simpleswap.sol\":8475:8495  reserveIn + amountIn */\n      swap1\n      tag_190\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n        /* \"simpleswap.sol\":8475:8495  reserveIn + amountIn */\n      swap5\n        /* \"simpleswap.sol\":8535:8557  reserveOut - amountOut */\n      tag_191\n        /* \"simpleswap.sol\":8475:8495  reserveIn + amountIn */\n      swap5\n      swap4\n      tag_7\n      jump\t// in\n    tag_190:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup6\n      sstore\n        /* \"simpleswap.sol\":8535:8557  reserveOut - amountOut */\n      tag_8\n      jump\t// in\n    tag_191:\n        /* \"simpleswap.sol\":8510:8532  pair.reserves.reserve1 */\n      swap2\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sstore\n        /* \"simpleswap.sol\":8412:8709  if (tokenIn == token0) {... */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      and\n      swap3\n      dup4\n        /* \"simpleswap.sol\":8755:8764  amountOut */\n      tag_16\n      jump\t// in\n    tag_187:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mload(0x40)\n      swap4\n      tag_193\n      0x60\n      dup7\n      tag_9\n      jump\t// in\n    tag_193:\n        /* \"simpleswap.sol\":7698:7699  2 */\n      0x02\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup6\n      mstore\n      0x20\n      dup6\n      add\n      swap4\n      0x40\n      calldatasize\n      dup7\n      calldatacopy\n      dup6\n      mload\n      iszero\n      tag_196\n      jumpi\n      dup4\n      dup6\n      mstore\n      dup6\n      mload\n      0x01\n      lt\n      iszero\n      tag_196\n      jumpi\n      dup1\n      0x40\n      dup8\n      swap7\n      swap8\n      add\n      mstore\n      mload(0x40)\n      swap4\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      mstore\n        /* \"simpleswap.sol\":8887:8952  TokensSwapped(tokenIn, tokenOut, msg.sender, amountIn, amountOut) */\n      0xad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d4332\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x40\n        /* \"simpleswap.sol\":8216:8226  msg.sender */\n      caller\n        /* \"simpleswap.sol\":8887:8952  TokensSwapped(tokenIn, tokenOut, msg.sender, amountIn, amountOut) */\n      swap5\n      log4\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sstore(0x00, 0x01)\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      add\n      swap1\n      0x20\n      dup5\n      mstore\n      mload\n      dup1\n      swap2\n      mstore\n      0x40\n      dup4\n      add\n      swap2\n      swap1\n      0x00\n    tag_198:\n      dup2\n      dup2\n      lt\n      tag_199\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_199:\n      dup3\n      mload\n      dup5\n      mstore\n      dup6\n      swap5\n      pop\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_198)\n    tag_196:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"simpleswap.sol\":8412:8709  if (tokenIn == token0) {... */\n    tag_188:\n        /* \"simpleswap.sol\":8675:8697  reserveOut - amountOut */\n      tag_201\n        /* \"simpleswap.sol\":8615:8635  reserveIn + amountIn */\n      swap4\n      tag_202\n      swap2\n      tag_7\n      jump\t// in\n    tag_202:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n        /* \"simpleswap.sol\":8590:8612  pair.reserves.reserve1 */\n      dup6\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sstore\n        /* \"simpleswap.sol\":8675:8697  reserveOut - amountOut */\n      tag_8\n      jump\t// in\n    tag_201:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      sstore\n        /* \"simpleswap.sol\":8412:8709  if (tokenIn == token0) {... */\n      jump(tag_192)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_185:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x125b9cdd59999a58da595b9d081bdd5d1c1d5d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"simpleswap.sol\":8025:8170  tokenIn == token0 ?... */\n    tag_180:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x01\n        /* \"simpleswap.sol\":8123:8145  pair.reserves.reserve1 */\n      dup2\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sload\n      swap5\n      dup2\n      sload\n        /* \"simpleswap.sol\":8025:8170  tokenIn == token0 ?... */\n      swap2\n      jump(tag_182)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_171:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb2, 0x16995c9bc81a5b9c1d5d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_169:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x91, 0x2830ba341036bab9ba1031329019)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_1:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_38\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x44)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_38\n      jumpi\n      jump\t// out\n    tag_3:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_38\n      jumpi\n      jump\t// out\n    tag_5:\n      iszero\n      tag_209\n      jumpi\n      jump\t// out\n    tag_209:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x07\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xca, 0x115e1c1a5c9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_6:\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_38\n      jumpi\n      swap1\n      jump\t// out\n    tag_7:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_55\n      jumpi\n      jump\t// out\n    tag_8:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_55\n      jumpi\n      jump\t// out\n    tag_9:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_99\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_10:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_55\n      jumpi\n      jump\t// out\n    tag_11:\n      dup2\n      iszero\n      tag_221\n      jumpi\n      div\n      swap1\n      jump\t// out\n    tag_221:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_223\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_223:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"simpleswap.sol\":2419:2728  function _sortTokens(address tokenA, address tokenB) internal pure returns (address, address) {... */\n    tag_13:\n      swap1\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup1\n      dup5\n      and\n      swap1\n      dup3\n      and\n        /* \"simpleswap.sol\":2532:2548  tokenA != tokenB */\n      dup1\n      dup3\n      eq\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      tag_225\n      jumpi\n        /* \"simpleswap.sol\":2588:2608  tokenA != address(0) */\n      dup1\n      iszero\n      iszero\n        /* \"simpleswap.sol\":2588:2632  tokenA != address(0) && tokenB != address(0) */\n      dup1\n      tag_227\n      jumpi\n        /* \"simpleswap.sol\":2419:2728  function _sortTokens(address tokenA, address tokenB) internal pure returns (address, address) {... */\n    tag_228:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"simpleswap.sol\":2667:2682  tokenA < tokenB */\n      lt\n      iszero\n      tag_231\n      jumpi\n        /* \"simpleswap.sol\":2660:2720  return tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      swap2\n        /* \"simpleswap.sol\":2419:2728  function _sortTokens(address tokenA, address tokenB) internal pure returns (address, address) {... */\n      swap1\n      jump\t// out\n        /* \"simpleswap.sol\":2667:2720  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n    tag_231:\n        /* \"simpleswap.sol\":2419:2728  function _sortTokens(address tokenA, address tokenB) internal pure returns (address, address) {... */\n      swap1\n      jump\t// out\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_229:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x5a65726f2061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"simpleswap.sol\":2588:2632  tokenA != address(0) && tokenB != address(0) */\n    tag_227:\n        /* \"simpleswap.sol\":2612:2632  tokenB != address(0) */\n      pop\n      dup2\n      iszero\n      iszero\n        /* \"simpleswap.sol\":2588:2632  tokenA != address(0) && tokenB != address(0) */\n      jump(tag_228)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_225:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x80, 0x4964656e746963616c20746f6b656e73)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_14:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap3\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup3\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x44\n      dup4\n      add\n      mstore\n      0x64\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      swap2\n      dup2\n      mstore\n      tag_234\n      swap2\n      tag_235\n      0x84\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_9\n      jump\t// in\n    tag_235:\n      tag_17\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      jump\t// out\n        /* \"simpleswap.sol\":2736:3099  function _getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) internal pure returns (uint256) {... */\n    tag_15:\n      swap2\n        /* \"simpleswap.sol\":2867:2879  amountIn > 0 */\n      dup3\n      iszero\n      dup1\n      iszero\n        /* \"simpleswap.sol\":2867:2896  amountIn > 0 && reserveIn > 0 */\n      dup1\n      tag_236\n      jumpi\n        /* \"simpleswap.sol\":2736:3099  function _getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) internal pure returns (uint256) {... */\n    tag_237:\n        /* \"simpleswap.sol\":2867:2914  amountIn > 0 && reserveIn > 0 && reserveOut > 0 */\n      dup1\n      tag_238\n      jumpi\n        /* \"simpleswap.sol\":2736:3099  function _getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) internal pure returns (uint256) {... */\n    tag_239:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"simpleswap.sol\":496:499  997 */\n      0x03e5\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup5\n      mul\n      swap4\n      dup5\n      div\n        /* \"simpleswap.sol\":496:499  997 */\n      0x03e5\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      eq\n      or\n      iszero\n      tag_55\n      jumpi\n        /* \"simpleswap.sol\":3012:3040  amountInWithFee * reserveOut */\n      tag_244\n      swap1\n      dup4\n      tag_10\n      jump\t// in\n    tag_244:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n        /* \"simpleswap.sol\":549:553  1000 */\n      0x03e8\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"simpleswap.sol\":549:553  1000 */\n      0x03e8\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_55\n      jumpi\n        /* \"simpleswap.sol\":3011:3091  (amountInWithFee * reserveOut) / (reserveIn * FEE_DENOMINATOR + amountInWithFee) */\n      tag_231\n        /* \"simpleswap.sol\":3045:3090  reserveIn * FEE_DENOMINATOR + amountInWithFee */\n      swap3\n      tag_248\n      swap2\n      tag_7\n      jump\t// in\n    tag_248:\n        /* \"simpleswap.sol\":3011:3091  (amountInWithFee * reserveOut) / (reserveIn * FEE_DENOMINATOR + amountInWithFee) */\n      swap1\n      tag_11\n      jump\t// in\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n    tag_240:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x125b9d985b1a59081a5b9c1d5d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"simpleswap.sol\":2867:2914  amountIn > 0 && reserveIn > 0 && reserveOut > 0 */\n    tag_238:\n        /* \"simpleswap.sol\":2900:2914  reserveOut > 0 */\n      pop\n      dup2\n      iszero\n      iszero\n        /* \"simpleswap.sol\":2867:2914  amountIn > 0 && reserveIn > 0 && reserveOut > 0 */\n      jump(tag_239)\n        /* \"simpleswap.sol\":2867:2896  amountIn > 0 && reserveIn > 0 */\n    tag_236:\n        /* \"simpleswap.sol\":2883:2896  reserveIn > 0 */\n      pop\n      dup3\n      iszero\n      iszero\n        /* \"simpleswap.sol\":2867:2896  amountIn > 0 && reserveIn > 0 */\n      jump(tag_237)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_16:\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap1\n      swap3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap2\n      dup2\n      mstore\n      tag_234\n      swap2\n      tag_235\n      0x64\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_9\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_17:\n      swap1\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      dup3\n      dup2\n      mload\n      swap2\n      add\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_251\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_253\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_256:\n      shl(0xe0, 0x5274afe7)\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n        /* \"simpleswap.sol\":374:8963  contract SimpleSwap is ReentrancyGuard {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_255)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n    tag_251:\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n\n    auxdata: 0xa2646970667358221220b0f7a6334c378ada80b182f90c6d14d848022af1bfbfa5d18f83752ca8c5d6dc64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460195760015f55610e4d908161001e8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806338ed1739146107aa5780635e1e63251461072e57806375bb9b63146106bc578063baa2abde1461044e578063d52bb6f4146103925763e8e337001461005b575f80fd5b3461038e5761010036600319011261038e57610075610ac3565b61007d610a97565b9060643560443560c4356001600160a01b0381169081900361038e576100a1610b90565b6100af60e435421115610ad9565b6100b98585610be4565b9060018060a01b0316805f52600160205260405f2060018060a01b0383165f5260205260405f20938454946001810191825497871580610386575b156102c357906101089a61011a929b8c92809c5b309033906001600160a01b0316610c8c565b600281018054978a8a828a8c8061028d575050509061013891610b5f565b5f600382111561027f5750808060011c6001810180911161026b57905b82821061024c5750505b975b881561021657610212996003956101898e610190958f610182908f97610b23565b8955610b23565b9055610b23565b9055845f520160205260405f206101a8858254610b23565b905560408051878152602081018990529081018590526001600160a01b0392909216917f43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b7090606090a460015f55604051938493846040919493926060820195825260208201520152565b0390f35b60405162461bcd60e51b815260206004820152600e60248201526d4c6971756964697479207a65726f60901b6044820152606490fd5b9091506102628261025d8184610b72565b610b23565b60011c90610155565b634e487b7160e01b5f52601160045260245ffd5b901561015f5750600161015f565b6102a66102a1926102a1836102ac97610b5f565b610b72565b94610b5f565b808210156102bc57505b97610161565b90506102b6565b906102d2886102a18b84610b5f565b91808311610328575060a43582106102f6576101089a61011a929b8c92809c610108565b60405162461bcd60e51b815260206004820152600a60248201526929b634b83830b3b2902160b11b6044820152606490fd5b915050610339886102a18984610b5f565b6084358110610354576101089a61011a929b8c92809c610108565b60405162461bcd60e51b815260206004820152600a602482015269536c697070616765204160b01b6044820152606490fd5b5088156100f4565b5f80fd5b3461038e57604036600319011261038e576103ab610ac3565b6103bc6103b6610a97565b82610be4565b919060018060a01b031691825f52600160205260405f209060018060a01b03165f5260205260405f2060405192604084019284841067ffffffffffffffff85111761043a57604094602094865260018454948583520154948591015260018060a01b0316145f1461043557905b82519182526020820152f35b610429565b634e487b7160e01b5f52604160045260245ffd5b3461038e5760e036600319011261038e57610467610ac3565b61046f610a97565b9060a4356044356001600160a01b038216820361038e5761048e610b90565b61049c60c435421115610ad9565b8015610686576104ac8484610be4565b919060018060a01b0316805f52600160205260405f2060018060a01b0384165f5260205260405f2095600387019460018060a01b0333165f52856020528360405f20541061064f57875490600189019283549360028b019a8b5490610515826102a1888c610b5f565b9b610524836102a18a8d610b5f565b9b8d60643511610622576084358d106105f55760409e6105638f958f9a90610591988f928d61059f9f8e9a61055c8d61055c95610b30565b9055610b30565b905560018060a01b0333165f526020528d5f206105818b8254610b30565b90556001600160a01b0316610d79565b6001600160a01b0316610d79565b855185815260208101859052604081019290925233926001600160a01b0316917fd765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c190606090a460015f5582519182526020820152f35b60405162461bcd60e51b815260206004820152600560248201526426b4b7102160d91b6044820152606490fd5b60405162461bcd60e51b81526020600482015260056024820152644d696e204160d81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e0496e73756666696369656e74204c5608c1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d5a65726f206c697175696469747960901b6044820152606490fd5b3461038e57606036600319011261038e5760036106d7610ac3565b6106f06106e2610a97565b6106ea610aad565b92610be4565b6001600160a01b039182165f908152600160209081526040808320938516835292815282822094909316815293909201815291819020549051908152f35b3461038e57606036600319011261038e57602061079561074c610a97565b6107576103b6610aad565b6001600160a01b039182165f818152600187526040808220938516825292875291909120929091160361079d5760018154910154905b600435610cd7565b604051908152f35b600181015490549061078d565b3461038e5760a036600319011261038e5760043560443567ffffffffffffffff811161038e573660238201121561038e5780600401359167ffffffffffffffff831161038e573660248460051b8401011161038e57606435916001600160a01b038316830361038e5761081b610b90565b610829608435421115610ad9565b60028403610a61578115610a2f5783156109b45761084960248201610b0f565b93600110156109b457604461085e9101610b0f565b916108698385610be4565b6001600160a01b039182165f81815260016020908152604080832094861683529390529190912091909516948514908115610a21578054946001820154915b6108b48630338b610c8c565b6108bf838888610cd7565b9660243588106109e6578780948892610904975f146109c857906108e96001946108f09493610b23565b8555610b30565b9101555b6001600160a01b03169283610d79565b60405193610913606086610b3d565b60028552602085019360403686378551156109b4578385528551600110156109b457806040879697015260405193845260208401527fad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d433260403394a460015f55604051918291602083019060208452518091526040830191905f5b81811061099b575050500390f35b825184528594506020938401939092019160010161098d565b634e487b7160e01b5f52603260045260245ffd5b6109df936109d591610b23565b6001850155610b30565b90556108f4565b60405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d081bdd5d1c1d5d606a1b6044820152606490fd5b6001810154948154916108a8565b60405162461bcd60e51b815260206004820152600a60248201526916995c9bc81a5b9c1d5d60b21b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d2830ba341036bab9ba103132901960911b6044820152606490fd5b602435906001600160a01b038216820361038e57565b604435906001600160a01b038216820361038e57565b600435906001600160a01b038216820361038e57565b15610ae057565b60405162461bcd60e51b8152602060048201526007602482015266115e1c1a5c995960ca1b6044820152606490fd5b356001600160a01b038116810361038e5790565b9190820180921161026b57565b9190820391821161026b57565b90601f8019910116810190811067ffffffffffffffff82111761043a57604052565b8181029291811591840414171561026b57565b8115610b7c570490565b634e487b7160e01b5f52601260045260245ffd5b60025f5414610b9f5760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9091906001600160a01b03808416908216808214610c545780151580610c4b575b15610c17571015610c14579190565b90565b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606490fd5b50811515610c05565b60405162461bcd60e51b815260206004820152601060248201526f4964656e746963616c20746f6b656e7360801b6044820152606490fd5b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152610cd591610cd0608483610b3d565b610db4565b565b918215801580610d70575b80610d67575b15610d32576103e584029384046103e514171561026b57610d099083610b5f565b906103e88102908082046103e8149015171561026b57610c1492610d2c91610b23565b90610b72565b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a5b9c1d5d609a1b6044820152606490fd5b50811515610ce8565b50821515610ce2565b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610cd591610cd0606483610b3d565b905f602091828151910182855af115610e0c575f513d610e0357506001600160a01b0381163b155b610de35750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415610ddc565b6040513d5f823e3d90fdfea2646970667358221220b0f7a6334c378ada80b182f90c6d14d848022af1bfbfa5d18f83752ca8c5d6dc64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x19 JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH2 0xE4D SWAP1 DUP2 PUSH2 0x1E DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x7AA JUMPI DUP1 PUSH4 0x5E1E6325 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0x75BB9B63 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xD52BB6F4 EQ PUSH2 0x392 JUMPI PUSH4 0xE8E33700 EQ PUSH2 0x5B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH2 0x75 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x7D PUSH2 0xA97 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x38E JUMPI PUSH2 0xA1 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xAF PUSH1 0xE4 CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xB9 DUP6 DUP6 PUSH2 0xBE4 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP5 SLOAD SWAP5 PUSH1 0x1 DUP2 ADD SWAP2 DUP3 SLOAD SWAP8 DUP8 ISZERO DUP1 PUSH2 0x386 JUMPI JUMPDEST ISZERO PUSH2 0x2C3 JUMPI SWAP1 PUSH2 0x108 SWAP11 PUSH2 0x11A SWAP3 SWAP12 DUP13 SWAP3 DUP1 SWAP13 JUMPDEST ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP8 DUP11 DUP11 DUP3 DUP11 DUP13 DUP1 PUSH2 0x28D JUMPI POP POP POP SWAP1 PUSH2 0x138 SWAP2 PUSH2 0xB5F JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x27F JUMPI POP DUP1 DUP1 PUSH1 0x1 SHR PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x26B JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x24C JUMPI POP POP JUMPDEST SWAP8 JUMPDEST DUP9 ISZERO PUSH2 0x216 JUMPI PUSH2 0x212 SWAP10 PUSH1 0x3 SWAP6 PUSH2 0x189 DUP15 PUSH2 0x190 SWAP6 DUP16 PUSH2 0x182 SWAP1 DUP16 SWAP8 PUSH2 0xB23 JUMP JUMPDEST DUP10 SSTORE PUSH2 0xB23 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xB23 JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1A8 DUP6 DUP3 SLOAD PUSH2 0xB23 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH32 0x43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70 SWAP1 PUSH1 0x60 SWAP1 LOG4 PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4C6971756964697479207A65726F PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x262 DUP3 PUSH2 0x25D DUP2 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 SHR SWAP1 PUSH2 0x155 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 ISZERO PUSH2 0x15F JUMPI POP PUSH1 0x1 PUSH2 0x15F JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x2A1 SWAP3 PUSH2 0x2A1 DUP4 PUSH2 0x2AC SWAP8 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST SWAP5 PUSH2 0xB5F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2BC JUMPI POP JUMPDEST SWAP8 PUSH2 0x161 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B6 JUMP JUMPDEST SWAP1 PUSH2 0x2D2 DUP9 PUSH2 0x2A1 DUP12 DUP5 PUSH2 0xB5F JUMP JUMPDEST SWAP2 DUP1 DUP4 GT PUSH2 0x328 JUMPI POP PUSH1 0xA4 CALLDATALOAD DUP3 LT PUSH2 0x2F6 JUMPI PUSH2 0x108 SWAP11 PUSH2 0x11A SWAP3 SWAP12 DUP13 SWAP3 DUP1 SWAP13 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x29B634B83830B3B29021 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH2 0x339 DUP9 PUSH2 0x2A1 DUP10 DUP5 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP2 LT PUSH2 0x354 JUMPI PUSH2 0x108 SWAP11 PUSH2 0x11A SWAP3 SWAP12 DUP13 SWAP3 DUP1 SWAP13 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x536C6970706167652041 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP9 ISZERO PUSH2 0xF4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH2 0x3AB PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B6 PUSH2 0xA97 JUMP JUMPDEST DUP3 PUSH2 0xBE4 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x43A JUMPI PUSH1 0x40 SWAP5 PUSH1 0x20 SWAP5 DUP7 MSTORE PUSH1 0x1 DUP5 SLOAD SWAP5 DUP6 DUP4 MSTORE ADD SLOAD SWAP5 DUP6 SWAP2 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH0 EQ PUSH2 0x435 JUMPI SWAP1 JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH2 0x467 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x46F PUSH2 0xA97 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x38E JUMPI PUSH2 0x48E PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x49C PUSH1 0xC4 CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0xAD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x686 JUMPI PUSH2 0x4AC DUP5 DUP5 PUSH2 0xBE4 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP6 PUSH1 0x3 DUP8 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE DUP6 PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT PUSH2 0x64F JUMPI DUP8 SLOAD SWAP1 PUSH1 0x1 DUP10 ADD SWAP3 DUP4 SLOAD SWAP4 PUSH1 0x2 DUP12 ADD SWAP11 DUP12 SLOAD SWAP1 PUSH2 0x515 DUP3 PUSH2 0x2A1 DUP9 DUP13 PUSH2 0xB5F JUMP JUMPDEST SWAP12 PUSH2 0x524 DUP4 PUSH2 0x2A1 DUP11 DUP14 PUSH2 0xB5F JUMP JUMPDEST SWAP12 DUP14 PUSH1 0x64 CALLDATALOAD GT PUSH2 0x622 JUMPI PUSH1 0x84 CALLDATALOAD DUP14 LT PUSH2 0x5F5 JUMPI PUSH1 0x40 SWAP15 PUSH2 0x563 DUP16 SWAP6 DUP16 SWAP11 SWAP1 PUSH2 0x591 SWAP9 DUP16 SWAP3 DUP14 PUSH2 0x59F SWAP16 DUP15 SWAP11 PUSH2 0x55C DUP14 PUSH2 0x55C SWAP6 PUSH2 0xB30 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xB30 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE DUP14 PUSH0 KECCAK256 PUSH2 0x581 DUP12 DUP3 SLOAD PUSH2 0xB30 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD79 JUMP JUMPDEST DUP6 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0xD765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1 SWAP1 PUSH1 0x60 SWAP1 LOG4 PUSH1 0x1 PUSH0 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x26B4B71021 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x4D696E2041 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E73756666696369656E74204C5 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x5A65726F206C6971756964697479 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH1 0x3 PUSH2 0x6D7 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x6F0 PUSH2 0x6E2 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0xAAD JUMP JUMPDEST SWAP3 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 ADD DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH1 0x20 PUSH2 0x795 PUSH2 0x74C PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x757 PUSH2 0x3B6 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 DUP6 AND DUP3 MSTORE SWAP3 DUP8 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 SWAP1 SWAP2 AND SUB PUSH2 0x79D JUMPI PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD SWAP1 JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP1 PUSH2 0x78D JUMP JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x38E JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x38E JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x38E JUMPI CALLDATASIZE PUSH1 0x24 DUP5 PUSH1 0x5 SHL DUP5 ADD ADD GT PUSH2 0x38E JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x38E JUMPI PUSH2 0x81B PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x829 PUSH1 0x84 CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0xA61 JUMPI DUP2 ISZERO PUSH2 0xA2F JUMPI DUP4 ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x849 PUSH1 0x24 DUP3 ADD PUSH2 0xB0F JUMP JUMPDEST SWAP4 PUSH1 0x1 LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x44 PUSH2 0x85E SWAP2 ADD PUSH2 0xB0F JUMP JUMPDEST SWAP2 PUSH2 0x869 DUP4 DUP6 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP6 AND SWAP5 DUP6 EQ SWAP1 DUP2 ISZERO PUSH2 0xA21 JUMPI DUP1 SLOAD SWAP5 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 JUMPDEST PUSH2 0x8B4 DUP7 ADDRESS CALLER DUP12 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP9 DUP9 PUSH2 0xCD7 JUMP JUMPDEST SWAP7 PUSH1 0x24 CALLDATALOAD DUP9 LT PUSH2 0x9E6 JUMPI DUP8 DUP1 SWAP5 DUP9 SWAP3 PUSH2 0x904 SWAP8 PUSH0 EQ PUSH2 0x9C8 JUMPI SWAP1 PUSH2 0x8E9 PUSH1 0x1 SWAP5 PUSH2 0x8F0 SWAP5 SWAP4 PUSH2 0xB23 JUMP JUMPDEST DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST SWAP2 ADD SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x913 PUSH1 0x60 DUP7 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 PUSH1 0x40 CALLDATASIZE DUP7 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0x9B4 JUMPI DUP4 DUP6 MSTORE DUP6 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x9B4 JUMPI DUP1 PUSH1 0x40 DUP8 SWAP7 SWAP8 ADD MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH32 0xAD56699D0F375866EB895ED27203058A36A713382AADED78EB6B67DA266D4332 PUSH1 0x40 CALLER SWAP5 LOG4 PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x99B JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x98D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x9DF SWAP4 PUSH2 0x9D5 SWAP2 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0xB30 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081BDD5D1C1D5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP5 DUP2 SLOAD SWAP2 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x16995C9BC81A5B9C1D5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2830BA341036BAB9BA1031329019 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x38E JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x38E JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x38E JUMPI JUMP JUMPDEST ISZERO PUSH2 0xAE0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x115E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x38E JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x26B JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x26B JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x43A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x26B JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB7C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0xB9F JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 DUP3 AND DUP1 DUP3 EQ PUSH2 0xC54 JUMPI DUP1 ISZERO ISZERO DUP1 PUSH2 0xC4B JUMPI JUMPDEST ISZERO PUSH2 0xC17 JUMPI LT ISZERO PUSH2 0xC14 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4964656E746963616C20746F6B656E73 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xCD5 SWAP2 PUSH2 0xCD0 PUSH1 0x84 DUP4 PUSH2 0xB3D JUMP JUMPDEST PUSH2 0xDB4 JUMP JUMPDEST JUMP JUMPDEST SWAP2 DUP3 ISZERO DUP1 ISZERO DUP1 PUSH2 0xD70 JUMPI JUMPDEST DUP1 PUSH2 0xD67 JUMPI JUMPDEST ISZERO PUSH2 0xD32 JUMPI PUSH2 0x3E5 DUP5 MUL SWAP4 DUP5 DIV PUSH2 0x3E5 EQ OR ISZERO PUSH2 0x26B JUMPI PUSH2 0xD09 SWAP1 DUP4 PUSH2 0xB5F JUMP JUMPDEST SWAP1 PUSH2 0x3E8 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0x3E8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x26B JUMPI PUSH2 0xC14 SWAP3 PUSH2 0xD2C SWAP2 PUSH2 0xB23 JUMP JUMPDEST SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081A5B9C1D5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xCE8 JUMP JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xCD5 SWAP2 PUSH2 0xCD0 PUSH1 0x64 DUP4 PUSH2 0xB3D JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xE0C JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xE03 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xDE3 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xF7 0xA6 CALLER 0x4C CALLDATACOPY DUP11 0xDA DUP1 0xB1 DUP3 EXTDELEGATECALL 0xC PUSH14 0x14D848022AF1BFBFA5D18F83752C 0xA8 0xC5 0xD6 0xDC PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "374:8589:7:-:0;;;;;;;1716:1:3;1821:22;1716:1;374:8589:7;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_12199": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_uint256_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_uint256": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 2864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_callOptionalReturn": {
									"entryPoint": 3508,
									"id": 654,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_getAmountOut": {
									"entryPoint": 3287,
									"id": 1019,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 2960,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_safeTransfer": {
									"entryPoint": 3449,
									"id": 277,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 3212,
									"id": 304,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_sortTokens": {
									"entryPoint": 3044,
									"id": 974,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"read_from_calldatat_address": {
									"entryPoint": 2831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral_f183": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361015610011575f80fd5b5f3560e01c806338ed1739146107aa5780635e1e63251461072e57806375bb9b63146106bc578063baa2abde1461044e578063d52bb6f4146103925763e8e337001461005b575f80fd5b3461038e5761010036600319011261038e57610075610ac3565b61007d610a97565b9060643560443560c4356001600160a01b0381169081900361038e576100a1610b90565b6100af60e435421115610ad9565b6100b98585610be4565b9060018060a01b0316805f52600160205260405f2060018060a01b0383165f5260205260405f20938454946001810191825497871580610386575b156102c357906101089a61011a929b8c92809c5b309033906001600160a01b0316610c8c565b600281018054978a8a828a8c8061028d575050509061013891610b5f565b5f600382111561027f5750808060011c6001810180911161026b57905b82821061024c5750505b975b881561021657610212996003956101898e610190958f610182908f97610b23565b8955610b23565b9055610b23565b9055845f520160205260405f206101a8858254610b23565b905560408051878152602081018990529081018590526001600160a01b0392909216917f43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b7090606090a460015f55604051938493846040919493926060820195825260208201520152565b0390f35b60405162461bcd60e51b815260206004820152600e60248201526d4c6971756964697479207a65726f60901b6044820152606490fd5b9091506102628261025d8184610b72565b610b23565b60011c90610155565b634e487b7160e01b5f52601160045260245ffd5b901561015f5750600161015f565b6102a66102a1926102a1836102ac97610b5f565b610b72565b94610b5f565b808210156102bc57505b97610161565b90506102b6565b906102d2886102a18b84610b5f565b91808311610328575060a43582106102f6576101089a61011a929b8c92809c610108565b60405162461bcd60e51b815260206004820152600a60248201526929b634b83830b3b2902160b11b6044820152606490fd5b915050610339886102a18984610b5f565b6084358110610354576101089a61011a929b8c92809c610108565b60405162461bcd60e51b815260206004820152600a602482015269536c697070616765204160b01b6044820152606490fd5b5088156100f4565b5f80fd5b3461038e57604036600319011261038e576103ab610ac3565b6103bc6103b6610a97565b82610be4565b919060018060a01b031691825f52600160205260405f209060018060a01b03165f5260205260405f2060405192604084019284841067ffffffffffffffff85111761043a57604094602094865260018454948583520154948591015260018060a01b0316145f1461043557905b82519182526020820152f35b610429565b634e487b7160e01b5f52604160045260245ffd5b3461038e5760e036600319011261038e57610467610ac3565b61046f610a97565b9060a4356044356001600160a01b038216820361038e5761048e610b90565b61049c60c435421115610ad9565b8015610686576104ac8484610be4565b919060018060a01b0316805f52600160205260405f2060018060a01b0384165f5260205260405f2095600387019460018060a01b0333165f52856020528360405f20541061064f57875490600189019283549360028b019a8b5490610515826102a1888c610b5f565b9b610524836102a18a8d610b5f565b9b8d60643511610622576084358d106105f55760409e6105638f958f9a90610591988f928d61059f9f8e9a61055c8d61055c95610b30565b9055610b30565b905560018060a01b0333165f526020528d5f206105818b8254610b30565b90556001600160a01b0316610d79565b6001600160a01b0316610d79565b855185815260208101859052604081019290925233926001600160a01b0316917fd765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c190606090a460015f5582519182526020820152f35b60405162461bcd60e51b815260206004820152600560248201526426b4b7102160d91b6044820152606490fd5b60405162461bcd60e51b81526020600482015260056024820152644d696e204160d81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e0496e73756666696369656e74204c5608c1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d5a65726f206c697175696469747960901b6044820152606490fd5b3461038e57606036600319011261038e5760036106d7610ac3565b6106f06106e2610a97565b6106ea610aad565b92610be4565b6001600160a01b039182165f908152600160209081526040808320938516835292815282822094909316815293909201815291819020549051908152f35b3461038e57606036600319011261038e57602061079561074c610a97565b6107576103b6610aad565b6001600160a01b039182165f818152600187526040808220938516825292875291909120929091160361079d5760018154910154905b600435610cd7565b604051908152f35b600181015490549061078d565b3461038e5760a036600319011261038e5760043560443567ffffffffffffffff811161038e573660238201121561038e5780600401359167ffffffffffffffff831161038e573660248460051b8401011161038e57606435916001600160a01b038316830361038e5761081b610b90565b610829608435421115610ad9565b60028403610a61578115610a2f5783156109b45761084960248201610b0f565b93600110156109b457604461085e9101610b0f565b916108698385610be4565b6001600160a01b039182165f81815260016020908152604080832094861683529390529190912091909516948514908115610a21578054946001820154915b6108b48630338b610c8c565b6108bf838888610cd7565b9660243588106109e6578780948892610904975f146109c857906108e96001946108f09493610b23565b8555610b30565b9101555b6001600160a01b03169283610d79565b60405193610913606086610b3d565b60028552602085019360403686378551156109b4578385528551600110156109b457806040879697015260405193845260208401527fad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d433260403394a460015f55604051918291602083019060208452518091526040830191905f5b81811061099b575050500390f35b825184528594506020938401939092019160010161098d565b634e487b7160e01b5f52603260045260245ffd5b6109df936109d591610b23565b6001850155610b30565b90556108f4565b60405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d081bdd5d1c1d5d606a1b6044820152606490fd5b6001810154948154916108a8565b60405162461bcd60e51b815260206004820152600a60248201526916995c9bc81a5b9c1d5d60b21b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d2830ba341036bab9ba103132901960911b6044820152606490fd5b602435906001600160a01b038216820361038e57565b604435906001600160a01b038216820361038e57565b600435906001600160a01b038216820361038e57565b15610ae057565b60405162461bcd60e51b8152602060048201526007602482015266115e1c1a5c995960ca1b6044820152606490fd5b356001600160a01b038116810361038e5790565b9190820180921161026b57565b9190820391821161026b57565b90601f8019910116810190811067ffffffffffffffff82111761043a57604052565b8181029291811591840414171561026b57565b8115610b7c570490565b634e487b7160e01b5f52601260045260245ffd5b60025f5414610b9f5760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9091906001600160a01b03808416908216808214610c545780151580610c4b575b15610c17571015610c14579190565b90565b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606490fd5b50811515610c05565b60405162461bcd60e51b815260206004820152601060248201526f4964656e746963616c20746f6b656e7360801b6044820152606490fd5b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152610cd591610cd0608483610b3d565b610db4565b565b918215801580610d70575b80610d67575b15610d32576103e584029384046103e514171561026b57610d099083610b5f565b906103e88102908082046103e8149015171561026b57610c1492610d2c91610b23565b90610b72565b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a5b9c1d5d609a1b6044820152606490fd5b50811515610ce8565b50821515610ce2565b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610cd591610cd0606483610b3d565b905f602091828151910182855af115610e0c575f513d610e0357506001600160a01b0381163b155b610de35750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415610ddc565b6040513d5f823e3d90fdfea2646970667358221220b0f7a6334c378ada80b182f90c6d14d848022af1bfbfa5d18f83752ca8c5d6dc64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38ED1739 EQ PUSH2 0x7AA JUMPI DUP1 PUSH4 0x5E1E6325 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0x75BB9B63 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xD52BB6F4 EQ PUSH2 0x392 JUMPI PUSH4 0xE8E33700 EQ PUSH2 0x5B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH2 0x75 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x7D PUSH2 0xA97 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x38E JUMPI PUSH2 0xA1 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xAF PUSH1 0xE4 CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0xB9 DUP6 DUP6 PUSH2 0xBE4 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP4 DUP5 SLOAD SWAP5 PUSH1 0x1 DUP2 ADD SWAP2 DUP3 SLOAD SWAP8 DUP8 ISZERO DUP1 PUSH2 0x386 JUMPI JUMPDEST ISZERO PUSH2 0x2C3 JUMPI SWAP1 PUSH2 0x108 SWAP11 PUSH2 0x11A SWAP3 SWAP12 DUP13 SWAP3 DUP1 SWAP13 JUMPDEST ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP8 DUP11 DUP11 DUP3 DUP11 DUP13 DUP1 PUSH2 0x28D JUMPI POP POP POP SWAP1 PUSH2 0x138 SWAP2 PUSH2 0xB5F JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x27F JUMPI POP DUP1 DUP1 PUSH1 0x1 SHR PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x26B JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x24C JUMPI POP POP JUMPDEST SWAP8 JUMPDEST DUP9 ISZERO PUSH2 0x216 JUMPI PUSH2 0x212 SWAP10 PUSH1 0x3 SWAP6 PUSH2 0x189 DUP15 PUSH2 0x190 SWAP6 DUP16 PUSH2 0x182 SWAP1 DUP16 SWAP8 PUSH2 0xB23 JUMP JUMPDEST DUP10 SSTORE PUSH2 0xB23 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xB23 JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1A8 DUP6 DUP3 SLOAD PUSH2 0xB23 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH32 0x43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70 SWAP1 PUSH1 0x60 SWAP1 LOG4 PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4C6971756964697479207A65726F PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x262 DUP3 PUSH2 0x25D DUP2 DUP5 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 SHR SWAP1 PUSH2 0x155 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 ISZERO PUSH2 0x15F JUMPI POP PUSH1 0x1 PUSH2 0x15F JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x2A1 SWAP3 PUSH2 0x2A1 DUP4 PUSH2 0x2AC SWAP8 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST SWAP5 PUSH2 0xB5F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2BC JUMPI POP JUMPDEST SWAP8 PUSH2 0x161 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B6 JUMP JUMPDEST SWAP1 PUSH2 0x2D2 DUP9 PUSH2 0x2A1 DUP12 DUP5 PUSH2 0xB5F JUMP JUMPDEST SWAP2 DUP1 DUP4 GT PUSH2 0x328 JUMPI POP PUSH1 0xA4 CALLDATALOAD DUP3 LT PUSH2 0x2F6 JUMPI PUSH2 0x108 SWAP11 PUSH2 0x11A SWAP3 SWAP12 DUP13 SWAP3 DUP1 SWAP13 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x29B634B83830B3B29021 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH2 0x339 DUP9 PUSH2 0x2A1 DUP10 DUP5 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP2 LT PUSH2 0x354 JUMPI PUSH2 0x108 SWAP11 PUSH2 0x11A SWAP3 SWAP12 DUP13 SWAP3 DUP1 SWAP13 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x536C6970706167652041 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP9 ISZERO PUSH2 0xF4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH2 0x3AB PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3B6 PUSH2 0xA97 JUMP JUMPDEST DUP3 PUSH2 0xBE4 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x43A JUMPI PUSH1 0x40 SWAP5 PUSH1 0x20 SWAP5 DUP7 MSTORE PUSH1 0x1 DUP5 SLOAD SWAP5 DUP6 DUP4 MSTORE ADD SLOAD SWAP5 DUP6 SWAP2 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND EQ PUSH0 EQ PUSH2 0x435 JUMPI SWAP1 JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH2 0x467 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x46F PUSH2 0xA97 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x38E JUMPI PUSH2 0x48E PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x49C PUSH1 0xC4 CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0xAD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x686 JUMPI PUSH2 0x4AC DUP5 DUP5 PUSH2 0xBE4 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP6 PUSH1 0x3 DUP8 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE DUP6 PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT PUSH2 0x64F JUMPI DUP8 SLOAD SWAP1 PUSH1 0x1 DUP10 ADD SWAP3 DUP4 SLOAD SWAP4 PUSH1 0x2 DUP12 ADD SWAP11 DUP12 SLOAD SWAP1 PUSH2 0x515 DUP3 PUSH2 0x2A1 DUP9 DUP13 PUSH2 0xB5F JUMP JUMPDEST SWAP12 PUSH2 0x524 DUP4 PUSH2 0x2A1 DUP11 DUP14 PUSH2 0xB5F JUMP JUMPDEST SWAP12 DUP14 PUSH1 0x64 CALLDATALOAD GT PUSH2 0x622 JUMPI PUSH1 0x84 CALLDATALOAD DUP14 LT PUSH2 0x5F5 JUMPI PUSH1 0x40 SWAP15 PUSH2 0x563 DUP16 SWAP6 DUP16 SWAP11 SWAP1 PUSH2 0x591 SWAP9 DUP16 SWAP3 DUP14 PUSH2 0x59F SWAP16 DUP15 SWAP11 PUSH2 0x55C DUP14 PUSH2 0x55C SWAP6 PUSH2 0xB30 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xB30 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE DUP14 PUSH0 KECCAK256 PUSH2 0x581 DUP12 DUP3 SLOAD PUSH2 0xB30 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD79 JUMP JUMPDEST DUP6 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0xD765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1 SWAP1 PUSH1 0x60 SWAP1 LOG4 PUSH1 0x1 PUSH0 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x26B4B71021 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x4D696E2041 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E73756666696369656E74204C5 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x5A65726F206C6971756964697479 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH1 0x3 PUSH2 0x6D7 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x6F0 PUSH2 0x6E2 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0xAAD JUMP JUMPDEST SWAP3 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 ADD DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH1 0x20 PUSH2 0x795 PUSH2 0x74C PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x757 PUSH2 0x3B6 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 DUP6 AND DUP3 MSTORE SWAP3 DUP8 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 SWAP1 SWAP2 AND SUB PUSH2 0x79D JUMPI PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD SWAP1 JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0xCD7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP1 PUSH2 0x78D JUMP JUMPDEST CALLVALUE PUSH2 0x38E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x38E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x38E JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x38E JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x38E JUMPI CALLDATASIZE PUSH1 0x24 DUP5 PUSH1 0x5 SHL DUP5 ADD ADD GT PUSH2 0x38E JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x38E JUMPI PUSH2 0x81B PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x829 PUSH1 0x84 CALLDATALOAD TIMESTAMP GT ISZERO PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0xA61 JUMPI DUP2 ISZERO PUSH2 0xA2F JUMPI DUP4 ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x849 PUSH1 0x24 DUP3 ADD PUSH2 0xB0F JUMP JUMPDEST SWAP4 PUSH1 0x1 LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x44 PUSH2 0x85E SWAP2 ADD PUSH2 0xB0F JUMP JUMPDEST SWAP2 PUSH2 0x869 DUP4 DUP6 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP6 AND SWAP5 DUP6 EQ SWAP1 DUP2 ISZERO PUSH2 0xA21 JUMPI DUP1 SLOAD SWAP5 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 JUMPDEST PUSH2 0x8B4 DUP7 ADDRESS CALLER DUP12 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP9 DUP9 PUSH2 0xCD7 JUMP JUMPDEST SWAP7 PUSH1 0x24 CALLDATALOAD DUP9 LT PUSH2 0x9E6 JUMPI DUP8 DUP1 SWAP5 DUP9 SWAP3 PUSH2 0x904 SWAP8 PUSH0 EQ PUSH2 0x9C8 JUMPI SWAP1 PUSH2 0x8E9 PUSH1 0x1 SWAP5 PUSH2 0x8F0 SWAP5 SWAP4 PUSH2 0xB23 JUMP JUMPDEST DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST SWAP2 ADD SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x913 PUSH1 0x60 DUP7 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 PUSH1 0x40 CALLDATASIZE DUP7 CALLDATACOPY DUP6 MLOAD ISZERO PUSH2 0x9B4 JUMPI DUP4 DUP6 MSTORE DUP6 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x9B4 JUMPI DUP1 PUSH1 0x40 DUP8 SWAP7 SWAP8 ADD MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH32 0xAD56699D0F375866EB895ED27203058A36A713382AADED78EB6B67DA266D4332 PUSH1 0x40 CALLER SWAP5 LOG4 PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x99B JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x98D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x9DF SWAP4 PUSH2 0x9D5 SWAP2 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0xB30 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081BDD5D1C1D5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP5 DUP2 SLOAD SWAP2 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x16995C9BC81A5B9C1D5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2830BA341036BAB9BA1031329019 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x38E JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x38E JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x38E JUMPI JUMP JUMPDEST ISZERO PUSH2 0xAE0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x115E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x38E JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x26B JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x26B JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x43A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x26B JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB7C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0xB9F JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 DUP3 AND DUP1 DUP3 EQ PUSH2 0xC54 JUMPI DUP1 ISZERO ISZERO DUP1 PUSH2 0xC4B JUMPI JUMPDEST ISZERO PUSH2 0xC17 JUMPI LT ISZERO PUSH2 0xC14 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4964656E746963616C20746F6B656E73 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xCD5 SWAP2 PUSH2 0xCD0 PUSH1 0x84 DUP4 PUSH2 0xB3D JUMP JUMPDEST PUSH2 0xDB4 JUMP JUMPDEST JUMP JUMPDEST SWAP2 DUP3 ISZERO DUP1 ISZERO DUP1 PUSH2 0xD70 JUMPI JUMPDEST DUP1 PUSH2 0xD67 JUMPI JUMPDEST ISZERO PUSH2 0xD32 JUMPI PUSH2 0x3E5 DUP5 MUL SWAP4 DUP5 DIV PUSH2 0x3E5 EQ OR ISZERO PUSH2 0x26B JUMPI PUSH2 0xD09 SWAP1 DUP4 PUSH2 0xB5F JUMP JUMPDEST SWAP1 PUSH2 0x3E8 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0x3E8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x26B JUMPI PUSH2 0xC14 SWAP3 PUSH2 0xD2C SWAP2 PUSH2 0xB23 JUMP JUMPDEST SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081A5B9C1D5D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xCE8 JUMP JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xCD5 SWAP2 PUSH2 0xCD0 PUSH1 0x64 DUP4 PUSH2 0xB3D JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xE0C JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xE03 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xDE3 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xF7 0xA6 CALLER 0x4C CALLDATACOPY DUP11 0xDA DUP1 0xB1 DUP3 EXTDELEGATECALL 0xC PUSH14 0x14D848022AF1BFBFA5D18F83752C 0xA8 0xC5 0xD6 0xDC PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "374:8589:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:8589:7;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;374:8589:7;;;;;;;;2227:103:3;;:::i;:::-;4305:47:7;374:8589;;4313:15;:27;;4305:47;:::i;:::-;4398:27;;;;:::i;:::-;374:8589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4555:22;374:8589;4555:22;;374:8589;;;4595:13;;;:30;;;374:8589;4591:668;;;4642:53;5330:7;4642:53;5408:7;4642:53;;;;4591:668;;;5323:4;;5303:10;;-1:-1:-1;;;;;374:8589:7;5330:7;:::i;5408:::-;5433:16;;;374:8589;;;5433:21;;;;374:8589;5433:21;;;5489:17;;;;;;;:::i;:::-;374:8589;3713:1;3709:5;;3713:1;;;3731:5;;374:8589;;;;;;;;;;;3790:93;3797:5;;;;;;3705:239;;;5429:221;;5670:13;;374:8589;;;5740:18;5863:13;5740:18;5794;5740;5823:29;5740:18;;;;;;;:::i;:::-;374:8589;;5794:18;:::i;:::-;374:8589;;5823:29;:::i;:::-;374:8589;;;-1:-1:-1;374:8589:7;5863:13;374:8589;;;-1:-1:-1;374:8589:7;5863:30;374:8589;;;5863:30;:::i;:::-;374:8589;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:8589:7;;;;;5911:63;;374:8589;;5911:63;374:8589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;3790:93;3823:5;;;3852:9;3823:5;3852;;;;:::i;:::-;:9;:::i;:::-;374:8589;;3790:93;;;374:8589;;;;;;;;;;;;3705:239;3904:6;3900:44;3705:239;3900:44;3927:5;374:8589;3705:239;;5429:221;5557:39;5599:26;5558;;;5598:39;5558:26;;:::i;:::-;5557:39;:::i;:::-;5599:26;;:::i;5598:39::-;3605:5;;;;;;:13;;5429:221;;;3605:13;;;;;4591:668;4754:25;4753:38;4754:25;;;;;:::i;4753:38::-;4810:32;;;;;;374:8589;;;4871:28;;374:8589;;5330:7;4933:53;5408:7;4933:53;;;;4806:442;;4591:668;;374:8589;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;4806:442;5053:25;;;5052:38;5053:25;;;;;:::i;5052:38::-;374:8589;;5117:28;;374:8589;;5330:7;5179:53;5408:7;5179:53;;;;4806:442;;4591:668;;374:8589;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;4595:30;4612:13;;;4595:30;;374:8589;;;;;;;;;;-1:-1:-1;;374:8589:7;;;;;;:::i;:::-;1696:27;374:8589;;:::i;:::-;1696:27;;:::i;:::-;374:8589;;;;;;;;;;;;1754:6;374:8589;;;;;1754:22;374:8589;;;;;;-1:-1:-1;374:8589:7;;;;-1:-1:-1;374:8589:7;;;;;;;;;;;;;;;;;;;;;;;1754:6;374:8589;;;;;;;;;;;;;;;;;;;1819:16;:70;374:8589;;;1819:70;;374:8589;;;;;;;;;;1819:70;;;374:8589;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:8589:7;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;374:8589:7;;;;;;2227:103:3;;:::i;:::-;6282:47:7;374:8589;;6290:15;:27;;6282:47;:::i;:::-;6348:13;;374:8589;;6428:27;;;;:::i;:::-;374:8589;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:8589:7;;;;-1:-1:-1;374:8589:7;6527:13;;;;:25;374:8589;;;;;6541:10;374:8589;-1:-1:-1;374:8589:7;;;;;;-1:-1:-1;374:8589:7;;6527:38;374:8589;;;;6669:22;374:8589;6669:22;;374:8589;;;6724:16;;;;374:8589;;;6764:20;6763:36;6764:20;;;;;:::i;6763:36::-;6821:20;6820:36;6821:20;;;;;:::i;6820:36::-;374:8589;;;;-1:-1:-1;374:8589:7;;;;6927:21;;374:8589;;;6996:18;7079:29;6996:18;;;;;7202:7;6996:18;;;;7253:7;6996:18;;;;;7050;6996;;:::i;:::-;374:8589;;7050:18;:::i;7079:29::-;374:8589;;;;;;;6541:10;374:8589;-1:-1:-1;374:8589:7;;;;-1:-1:-1;374:8589:7;7119:38;374:8589;;;7119:38;:::i;:::-;374:8589;;-1:-1:-1;;;;;374:8589:7;7202:7;:::i;:::-;-1:-1:-1;;;;;374:8589:7;7253:7;:::i;:::-;374:8589;;;;;;;;;;;;;;;;;;6541:10;;-1:-1:-1;;;;;374:8589:7;;7279:73;;374:8589;;7279:73;374:8589;;;;;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;;-1:-1:-1;;374:8589:7;;;;1485:31;374:8589;;:::i;:::-;1440:27;374:8589;;:::i;:::-;;;:::i;:::-;1440:27;;:::i;:::-;-1:-1:-1;;;;;374:8589:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1485:31;;;;374:8589;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:8589:7;;;;;2357:46;374:8589;;:::i;:::-;2058:30;374:8589;;:::i;2058:30::-;-1:-1:-1;;;;;374:8589:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2194:17;374:8589;;;;;2252:22;;374:8589;2194:145;;374:8589;;2357:46;:::i;:::-;374:8589;;;;;;2194:145;374:8589;2292:22;;374:8589;;;2194:145;;;374:8589;;;;;;-1:-1:-1;;374:8589:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:8589:7;;;;;;2227:103:3;;:::i;:::-;7617:47:7;374:8589;;7625:15;:27;;7617:47;:::i;:::-;7698:1;7683:16;;374:8589;;7737:12;;374:8589;;;;;;7795:7;374:8589;;;7795:7;:::i;:::-;374:8589;;;;;;;7832:7;374:8589;;7832:7;:::i;:::-;7887:30;;;;;:::i;:::-;-1:-1:-1;;;;;374:8589:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8025:17;;;:145;;;;374:8589;;8083:22;374:8589;8083:22;;374:8589;8025:145;;8243:8;8236:4;;8216:10;8243:8;;:::i;:::-;8285:46;;;;;:::i;:::-;374:8589;;;8350:25;;374:8589;;8412:297;;;;;8755:9;8412:297;;;;;8475:20;;374:8589;8475:20;8535:22;8475:20;;;:::i;:::-;374:8589;;8535:22;:::i;:::-;8510;;374:8589;8412:297;-1:-1:-1;;;;;374:8589:7;;;8755:9;:::i;:::-;374:8589;;;;;;;:::i;:::-;7698:1;374:8589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8887:65;374:8589;8216:10;8887:65;;374:8589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:8589:7;;;;;;;;;;;;;;;;;;;;;;;;;8412:297;8675:22;8615:20;;;;:::i;:::-;374:8589;8590:22;;374:8589;8675:22;:::i;:::-;374:8589;;8412:297;;374:8589;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;8025:145;374:8589;8123:22;;374:8589;;;;8025:145;;;374:8589;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;-1:-1:-1;;;;;374:8589:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;374:8589:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;374:8589:7;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;;;-1:-1:-1;;;;;374:8589:7;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;2336:287:3;1759:1;2468:7;374:8589:7;2468:19:3;1759:1;;;2468:7;374:8589:7;2336:287:3:o;1759:1::-;374:8589:7;;-1:-1:-1;;;1759:1:3;;;;;;;;;;;374:8589:7;1759:1:3;374:8589:7;;;1759:1:3;;;;2419:309:7;;;;-1:-1:-1;;;;;374:8589:7;;;;;;2532:16;;;374:8589;;2588:20;;;:44;;;2419:309;374:8589;;;2667:15;;;;2660:60;2419:309;:::o;2667:53::-;2419:309;:::o;374:8589::-;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;2588:44;2612:20;;;;2588:44;;374:8589;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;1618:188:5;374:8589:7;;-1:-1:-1;;;1745:53:5;;;;-1:-1:-1;;;;;374:8589:7;;;1745:53:5;;;374:8589:7;;;;;;;;;;;;;;;;;1745:53:5;;;;;;;374:8589:7;1745:53:5;:::i;:::-;;:::i;:::-;1618:188::o;2736:363:7:-;;2867:12;;;;:29;;;2736:363;2867:47;;;2736:363;374:8589;;;496:3;374:8589;;;;;496:3;374:8589;;;;;3012:28;;;;:::i;:::-;374:8589;549:4;374:8589;;;;;;549:4;374:8589;;;;;;;3011:80;3045:45;;;;:::i;:::-;3011:80;;:::i;374:8589::-;;;-1:-1:-1;;;374:8589:7;;;;;;;;;;;;-1:-1:-1;;;374:8589:7;;;;;;;2867:47;2900:14;;;;2867:47;;:29;2883:13;;;;2867:29;;1219:160:5;374:8589:7;;-1:-1:-1;;;1328:43:5;;;;-1:-1:-1;;;;;374:8589:7;;;1328:43:5;;;374:8589:7;;;;;;;;;1328:43:5;;;;;;;374:8589:7;1328:43:5;:::i;8370:720::-;;-1:-1:-1;8507:421:5;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:5;;8942:15;;-1:-1:-1;;;;;;374:8589:7;;8960:26:5;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:5;;;-1:-1:-1;;;;;374:8589:7;;;;9033:40:5;374:8589:7;;;9033:40:5;8942:68;9009:1;8994:16;;8942:68;;8507:421;;;;-1:-1:-1;8507:421:5;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "732200",
								"executionCost": "22879",
								"totalCost": "755079"
							},
							"external": {
								"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"balanceOf(address,address,address)": "2950",
								"getAmountOut(uint256,address,address)": "5363",
								"getReserves(address,address)": "5101",
								"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "infinite",
								"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "infinite"
							},
							"internal": {
								"_getAmountIn(uint256,uint256,uint256)": "infinite",
								"_getAmountOut(uint256,uint256,uint256)": "infinite",
								"_min(uint256,uint256)": "infinite",
								"_sortTokens(address,address)": "infinite",
								"_sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 374,
									"end": 8963,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 374,
									"end": 8963,
									"name": "REVERT",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0f7a6334c378ada80b182f90c6d14d848022af1bfbfa5d18f83752ca8c5d6dc64736f6c634300081e0033",
									".code": [
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "38ED1739"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "5E1E6325"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "75BB9B63"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "BAA2ABDE"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "D52BB6F4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E8E33700"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "C4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4328,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4340,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4305,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4352,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4305,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4398,
											"end": 4425,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4425,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4398,
											"end": 4425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4425,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4398,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4577,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4555,
											"end": 4577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4608,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4608,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "SWAP13",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5327,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5313,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5330,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5449,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5433,
											"end": 5449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5454,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5454,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5454,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5433,
											"end": 5454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5489,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5650,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5650,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5429,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5683,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5683,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 5876,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "DUP16",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "DUP16",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5740,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5794,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5823,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5823,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 5876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5863,
											"end": 5893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 5893,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5863,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5911,
											"end": 5974,
											"name": "PUSH",
											"source": 7,
											"value": "43C967B388D3A4CCAD3F7AB80167852E322E5A3FDE9893F530252281B2AE8B70"
										},
										{
											"begin": 5911,
											"end": 5974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5911,
											"end": 5974,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C6971756964697479207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3883,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3790,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3852,
											"end": 3857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3852,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3790,
											"end": 3883,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3944,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3900,
											"end": 3944,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3705,
											"end": 3944,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5650,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5429,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5599,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5558,
											"end": 5584,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5558,
											"end": 5584,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5558,
											"end": 5584,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5558,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5584,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5558,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5557,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5596,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5557,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5625,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5599,
											"end": 5625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5650,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5429,
											"end": 5650,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4754,
											"end": 4779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4791,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4753,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4842,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4842,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4842,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4810,
											"end": 4842,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4899,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4933,
											"end": 4986,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4933,
											"end": 4986,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4986,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4986,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4986,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 5248,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 5248,
											"name": "SWAP13",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29B634B83830B3B29021"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 5248,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4806,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5078,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5053,
											"end": 5078,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5053,
											"end": 5078,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5078,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 5053,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5090,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5052,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5145,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5179,
											"end": 5232,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5179,
											"end": 5232,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5232,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5232,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5232,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 5248,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 5248,
											"name": "SWAP13",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4591,
											"end": 5259,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "536C6970706167652041"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4625,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4612,
											"end": 4625,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1696,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1723,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1696,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1835,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1889,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1819,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1889,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1819,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1819,
											"end": 1889,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "C4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6305,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6317,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6317,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6282,
											"end": 6329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6329,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 6282,
											"end": 6329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6361,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6361,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 6428,
											"end": 6455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6540,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6540,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6527,
											"end": 6540,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6552,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6565,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6740,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6740,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6724,
											"end": 6740,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6764,
											"end": 6784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6764,
											"end": 6784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6764,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 6764,
											"end": 6784,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6764,
											"end": 6784,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 6764,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6764,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6799,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6763,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6841,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6821,
											"end": 6841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 6821,
											"end": 6841,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6841,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6821,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6856,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6820,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6948,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6948,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP15",
											"source": 7
										},
										{
											"begin": 7079,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "DUP16",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "DUP16",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "DUP16",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP16",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6996,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7050,
											"end": 7068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7079,
											"end": 7108,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 7079,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7119,
											"end": 7157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7157,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 7119,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7202,
											"end": 7209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7209,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 7202,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7253,
											"end": 7260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7260,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 7253,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7352,
											"name": "PUSH",
											"source": 7,
											"value": "D765E08EEF31C0983ECCA03ECD166297AC485ECD5DD69E291C848F0A020333C1"
										},
										{
											"begin": 7279,
											"end": 7352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7352,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26B4B71021"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D696E2041"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E74204C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1440,
											"end": 1467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1440,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1516,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1516,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2088,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2058,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2339,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2194,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2357,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2403,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2357,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2339,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2194,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2292,
											"end": 2314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2194,
											"end": 2339,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7617,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7640,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7652,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7652,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7617,
											"end": 7664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7664,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7617,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7737,
											"end": 7749,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7737,
											"end": 7749,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7795,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7802,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7795,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7832,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7832,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7832,
											"end": 7839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7832,
											"end": 7839,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7832,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 7887,
											"end": 7917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8042,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8042,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8105,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8083,
											"end": 8105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8236,
											"end": 8240,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8236,
											"end": 8240,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8251,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 8243,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8251,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8243,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8285,
											"end": 8331,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8331,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8331,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8285,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8331,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8285,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8350,
											"end": 8375,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8350,
											"end": 8375,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8475,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8535,
											"end": 8557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8532,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 8755,
											"end": 8764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8952,
											"name": "PUSH",
											"source": 7,
											"value": "AD56699D0F375866EB895ED27203058A36A713382AADED78EB6B67DA266D4332"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8216,
											"end": 8226,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8952,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8887,
											"end": 8952,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8675,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 8615,
											"end": 8635,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 8615,
											"end": 8635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8615,
											"end": 8635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8635,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 8615,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8590,
											"end": 8612,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8675,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8675,
											"end": 8697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8675,
											"end": 8697,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 8675,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 8412,
											"end": 8709,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D081BDD5D1C1D5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8123,
											"end": 8145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8025,
											"end": 8170,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16995C9BC81A5B9C1D5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2830BA341036BAB9BA1031329019"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2548,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2588,
											"end": 2632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2720,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2720,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2667,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2632,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2588,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2632,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2632,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2588,
											"end": 2632,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4964656E746963616C20746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 3099,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2736,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 3099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2879,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2879,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2867,
											"end": 2896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 3099,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2736,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 3099,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2736,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 7,
											"value": "3E5"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 7,
											"value": "3E5"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3012,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3045,
											"end": 3090,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3045,
											"end": 3090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3045,
											"end": 3090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3090,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 3045,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3011,
											"end": 3091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081A5B9C1D5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2914,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2914,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2914,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2867,
											"end": 2914,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2896,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2867,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2896,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2867,
											"end": 2896,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 8963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"simpleswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"balanceOf(address,address,address)": "75bb9b63",
							"getAmountOut(uint256,address,address)": "5e1e6325",
							"getReserves(address,address)": "d52bb6f4",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SimpleSwap - Decentralized Exchange Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal DEX with liquidity provision and token swap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"simpleswap.sol\":\"SimpleSwap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"simpleswap.sol\":{\"keccak256\":\"0x47d93681fa46c093486e84bc360373c0fc4cb89139a5b7e6f092cdd47bbbb624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc19f0fbe073cb84eed8eac4b226a3ec3b9fc0f45a48def7edc5e38ef0c07ec6\",\"dweb:/ipfs/QmXwU8yys19XuCbKZKduNH7NNgfk3UchQb1fMb5Z16yMDh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "simpleswap.sol:SimpleSwap",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 748,
								"contract": "simpleswap.sol:SimpleSwap",
								"label": "_pairs",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_struct(Pair)741_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_struct(Pair)741_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => struct SimpleSwap.Pair))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(Pair)741_storage)"
							},
							"t_mapping(t_address,t_struct(Pair)741_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SimpleSwap.Pair)",
								"numberOfBytes": "32",
								"value": "t_struct(Pair)741_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Pair)741_storage": {
								"encoding": "inplace",
								"label": "struct SimpleSwap.Pair",
								"members": [
									{
										"astId": 734,
										"contract": "simpleswap.sol:SimpleSwap",
										"label": "reserves",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Reserves)731_storage"
									},
									{
										"astId": 736,
										"contract": "simpleswap.sol:SimpleSwap",
										"label": "totalSupply",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 740,
										"contract": "simpleswap.sol:SimpleSwap",
										"label": "balances",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Reserves)731_storage": {
								"encoding": "inplace",
								"label": "struct SimpleSwap.Reserves",
								"members": [
									{
										"astId": 728,
										"contract": "simpleswap.sol:SimpleSwap",
										"label": "reserve0",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 730,
										"contract": "simpleswap.sol:SimpleSwap",
										"label": "reserve1",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimal DEX with liquidity provision and token swap",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							708
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								708,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 709,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 232,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 232,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 232,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 232,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 232,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 232,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC165",
							"nameLocation": "432:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "818:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "861:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:6"
									},
									"scope": 708,
									"src": "791:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "422:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:6"
				},
				"id": 6
			},
			"simpleswap.sol": {
				"ast": {
					"absolutePath": "simpleswap.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"SimpleSwap": [
							1776
						]
					},
					"id": 1777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1777,
							"sourceUnit": 233,
							"src": "61:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1777,
							"sourceUnit": 697,
							"src": "119:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1777,
							"sourceUnit": 155,
							"src": "186:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 715,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"397:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "397:15:7"
									},
									"id": 716,
									"nodeType": "InheritanceSpecifier",
									"src": "397:15:7"
								}
							],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "252:122:7",
								"text": "@title SimpleSwap - Decentralized Exchange Contract\n @notice Minimal DEX with liquidity provision and token swap"
							},
							"fullyImplemented": true,
							"id": 1776,
							"linearizedBaseContracts": [
								1776,
								154
							],
							"name": "SimpleSwap",
							"nameLocation": "383:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 720,
									"libraryName": {
										"id": 717,
										"name": "SafeERC20",
										"nameLocations": [
											"426:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "426:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "420:27:7",
									"typeName": {
										"id": 719,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 718,
											"name": "IERC20",
											"nameLocations": [
												"440:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "440:6:7"
										},
										"referencedDeclaration": 232,
										"src": "440:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 723,
									"mutability": "constant",
									"name": "FEE_NUMERATOR",
									"nameLocation": "480:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1776,
									"src": "455:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 721,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "455:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "393937",
										"id": 722,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "496:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_997_by_1",
											"typeString": "int_const 997"
										},
										"value": "997"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 726,
									"mutability": "constant",
									"name": "FEE_DENOMINATOR",
									"nameLocation": "531:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1776,
									"src": "506:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 724,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "506:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 725,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "549:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "SimpleSwap.Reserves",
									"id": 731,
									"members": [
										{
											"constant": false,
											"id": 728,
											"mutability": "mutable",
											"name": "reserve0",
											"nameLocation": "597:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 731,
											"src": "589:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 727,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "589:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 730,
											"mutability": "mutable",
											"name": "reserve1",
											"nameLocation": "624:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 731,
											"src": "616:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 729,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "616:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Reserves",
									"nameLocation": "569:8:7",
									"nodeType": "StructDefinition",
									"scope": 1776,
									"src": "562:78:7",
									"visibility": "public"
								},
								{
									"canonicalName": "SimpleSwap.Pair",
									"id": 741,
									"members": [
										{
											"constant": false,
											"id": 734,
											"mutability": "mutable",
											"name": "reserves",
											"nameLocation": "680:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 741,
											"src": "671:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Reserves_$731_storage_ptr",
												"typeString": "struct SimpleSwap.Reserves"
											},
											"typeName": {
												"id": 733,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 732,
													"name": "Reserves",
													"nameLocations": [
														"671:8:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 731,
													"src": "671:8:7"
												},
												"referencedDeclaration": 731,
												"src": "671:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Reserves_$731_storage_ptr",
													"typeString": "struct SimpleSwap.Reserves"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 736,
											"mutability": "mutable",
											"name": "totalSupply",
											"nameLocation": "707:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 741,
											"src": "699:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 735,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "699:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 740,
											"mutability": "mutable",
											"name": "balances",
											"nameLocation": "757:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 741,
											"src": "729:36:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 739,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "729:27:7",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pair",
									"nameLocation": "655:4:7",
									"nodeType": "StructDefinition",
									"scope": 1776,
									"src": "648:125:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 748,
									"mutability": "mutable",
									"name": "_pairs",
									"nameLocation": "834:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1776,
									"src": "781:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$_$",
										"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pair))"
									},
									"typeName": {
										"id": 747,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 742,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "789:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "781:44:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$_$",
											"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pair))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 746,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 743,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "808:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "800:24:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$",
												"typeString": "mapping(address => struct SimpleSwap.Pair)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 745,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 744,
													"name": "Pair",
													"nameLocations": [
														"819:4:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 741,
													"src": "819:4:7"
												},
												"referencedDeclaration": 741,
												"src": "819:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
													"typeString": "struct SimpleSwap.Pair"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "43c967b388d3a4ccad3f7ab80167852e322e5a3fde9893f530252281b2ae8b70",
									"id": 762,
									"name": "LiquidityAdded",
									"nameLocation": "855:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "886:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "870:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "910:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "894:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "934:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "918:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "952:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "944:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "969:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "961:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "986:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "978:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:127:7"
									},
									"src": "849:148:7"
								},
								{
									"anonymous": false,
									"eventSelector": "d765e08eef31c0983ecca03ecd166297ac485ecd5dd69e291c848f0a020333c1",
									"id": 776,
									"name": "LiquidityRemoved",
									"nameLocation": "1009:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1042:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1026:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1066:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1050:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1090:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1074:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1108:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1100:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1125:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1117:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1142:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1134:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:127:7"
									},
									"src": "1003:150:7"
								},
								{
									"anonymous": false,
									"eventSelector": "ad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d4332",
									"id": 788,
									"name": "TokensSwapped",
									"nameLocation": "1165:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1195:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1179:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1220:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1204:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1246:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1230:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1260:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1252:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1278:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1270:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:110:7"
									},
									"src": "1159:130:7"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "1394:136:7",
										"statements": [
											{
												"assignments": [
													800,
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "1414:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 817,
														"src": "1406:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1406:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "1430:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 817,
														"src": "1422:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 801,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1422:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [
														{
															"id": 804,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "1452:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 805,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1460:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 803,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1440:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1440:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:62:7"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 808,
																	"name": "_pairs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "1485:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$_$",
																		"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pair storage ref))"
																	}
																},
																"id": 810,
																"indexExpression": {
																	"id": 809,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "1492:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1485:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$",
																	"typeString": "mapping(address => struct SimpleSwap.Pair storage ref)"
																}
															},
															"id": 812,
															"indexExpression": {
																"id": 811,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1500:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1485:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage",
																"typeString": "struct SimpleSwap.Pair storage ref"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1508:8:7",
														"memberName": "balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 740,
														"src": "1485:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 815,
													"indexExpression": {
														"id": 814,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "1517:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1485:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 798,
												"id": 816,
												"nodeType": "Return",
												"src": "1478:44:7"
											}
										]
									},
									"functionSelector": "75bb9b63",
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1306:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1324:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1316:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1340:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1332:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1356:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1348:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1315:46:7"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1385:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:9:7"
									},
									"scope": 1776,
									"src": "1297:233:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1650:247:7",
										"statements": [
											{
												"assignments": [
													830,
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "1670:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "1662:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 829,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1662:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "1686:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "1678:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1678:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": {
													"arguments": [
														{
															"id": 834,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "1708:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "1716:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1696:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1661:62:7"
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "1750:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "1734:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserves_$731_memory_ptr",
															"typeString": "struct SimpleSwap.Reserves"
														},
														"typeName": {
															"id": 839,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 838,
																"name": "Reserves",
																"nameLocations": [
																	"1734:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 731,
																"src": "1734:8:7"
															},
															"referencedDeclaration": 731,
															"src": "1734:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserves_$731_storage_ptr",
																"typeString": "struct SimpleSwap.Reserves"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 847,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 841,
																"name": "_pairs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "1754:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pair storage ref))"
																}
															},
															"id": 843,
															"indexExpression": {
																"id": 842,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "1761:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1754:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$",
																"typeString": "mapping(address => struct SimpleSwap.Pair storage ref)"
															}
														},
														"id": 845,
														"indexExpression": {
															"id": 844,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1769:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1754:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pair_$741_storage",
															"typeString": "struct SimpleSwap.Pair storage ref"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1777:8:7",
													"memberName": "reserves",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 734,
													"src": "1754:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Reserves_$731_storage",
														"typeString": "struct SimpleSwap.Reserves storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1734:51:7"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 848,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "1797:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 849,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1807:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 850,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1796:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "1819:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 852,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "1829:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1819:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"expression": {
																		"id": 859,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "1866:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserves_$731_memory_ptr",
																			"typeString": "struct SimpleSwap.Reserves memory"
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1868:8:7",
																	"memberName": "reserve1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 730,
																	"src": "1866:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 861,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "1878:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserves_$731_memory_ptr",
																			"typeString": "struct SimpleSwap.Reserves memory"
																		}
																	},
																	"id": 862,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1880:8:7",
																	"memberName": "reserve0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "1878:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 863,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1865:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1819:70:7",
														"trueExpression": {
															"components": [
																{
																	"expression": {
																		"id": 854,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "1839:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserves_$731_memory_ptr",
																			"typeString": "struct SimpleSwap.Reserves memory"
																		}
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1841:8:7",
																	"memberName": "reserve0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "1839:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 856,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "1851:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserves_$731_memory_ptr",
																			"typeString": "struct SimpleSwap.Reserves memory"
																		}
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1853:8:7",
																	"memberName": "reserve1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 730,
																	"src": "1851:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 858,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1838:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "1796:93:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1796:93:7"
											}
										]
									},
									"functionSelector": "d52bb6f4",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1547:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1567:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1559:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1583:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1575:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1575:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:32:7"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "1622:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1614:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "1640:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1632:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:36:7"
									},
									"scope": 1776,
									"src": "1538:359:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "2012:399:7",
										"statements": [
											{
												"assignments": [
													880,
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "2032:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "2024:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 879,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2024:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "2048:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "2040:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 881,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2040:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"arguments": [
														{
															"id": 884,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2070:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2079:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 883,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "2058:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2058:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2023:65:7"
											},
											{
												"assignments": [
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "2112:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "2099:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
															"typeString": "struct SimpleSwap.Pair"
														},
														"typeName": {
															"id": 889,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 888,
																"name": "Pair",
																"nameLocations": [
																	"2099:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 741,
																"src": "2099:4:7"
															},
															"referencedDeclaration": 741,
															"src": "2099:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 896,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 891,
															"name": "_pairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "2119:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pair storage ref))"
															}
														},
														"id": 893,
														"indexExpression": {
															"id": 892,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "2126:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2119:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$",
															"typeString": "mapping(address => struct SimpleSwap.Pair storage ref)"
														}
													},
													"id": 895,
													"indexExpression": {
														"id": 894,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "2134:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2119:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pair_$741_storage",
														"typeString": "struct SimpleSwap.Pair storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2099:42:7"
											},
											{
												"assignments": [
													898,
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "reserveIn",
														"nameLocation": "2161:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "2153:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 897,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2153:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "reserveOut",
														"nameLocation": "2180:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "2172:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2172:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 901,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "2194:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 902,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "2205:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2194:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"expression": {
																	"expression": {
																		"id": 911,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2292:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2297:8:7",
																	"memberName": "reserves",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 734,
																	"src": "2292:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserves_$731_storage",
																		"typeString": "struct SimpleSwap.Reserves storage ref"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2306:8:7",
																"memberName": "reserve1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 730,
																"src": "2292:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"expression": {
																		"id": 914,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2316:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2321:8:7",
																	"memberName": "reserves",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 734,
																	"src": "2316:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserves_$731_storage",
																		"typeString": "struct SimpleSwap.Reserves storage ref"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2330:8:7",
																"memberName": "reserve0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 728,
																"src": "2316:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 917,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2291:48:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2194:145:7",
													"trueExpression": {
														"components": [
															{
																"expression": {
																	"expression": {
																		"id": 904,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2228:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2233:8:7",
																	"memberName": "reserves",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 734,
																	"src": "2228:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserves_$731_storage",
																		"typeString": "struct SimpleSwap.Reserves storage ref"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2242:8:7",
																"memberName": "reserve0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 728,
																"src": "2228:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"expression": {
																		"id": 907,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2252:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2257:8:7",
																	"memberName": "reserves",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 734,
																	"src": "2252:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserves_$731_storage",
																		"typeString": "struct SimpleSwap.Reserves storage ref"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2266:8:7",
																"memberName": "reserve1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 730,
																"src": "2252:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 910,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2227:48:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2152:187:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "2371:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 922,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "2381:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 923,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "2392:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "_getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2357:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 878,
												"id": 925,
												"nodeType": "Return",
												"src": "2350:53:7"
											}
										]
									},
									"functionSelector": "5e1e6325",
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1914:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1935:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1927:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1953:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1945:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1970:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1962:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1926:53:7"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "2003:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:9:7"
									},
									"scope": 1776,
									"src": "1905:506:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "2513:215:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 939,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "2532:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 940,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "2542:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2532:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4964656e746963616c20746f6b656e73",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2550:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																"typeString": "literal_string \"Identical tokens\""
															},
															"value": "Identical tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_564dd1e3f9258ab6d5564b29cfecfb76f0e4789ee260e34c1e371b0939703e7d",
																"typeString": "literal_string \"Identical tokens\""
															}
														],
														"id": 938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2524:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "2524:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 946,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "2588:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2606:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2598:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 947,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2598:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2598:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2588:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 952,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "2612:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2630:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2622:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 953,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2622:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2622:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2612:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2588:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2061646472657373",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2634:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															},
															"value": "Zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2580:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2580:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "2580:69:7"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 962,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "2667:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 963,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "2676:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2667:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 968,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "2705:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 969,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "2713:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 970,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2704:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2667:53:7",
													"trueExpression": {
														"components": [
															{
																"id": 965,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "2686:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 966,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "2694:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 967,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2685:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 937,
												"id": 972,
												"nodeType": "Return",
												"src": "2660:60:7"
											}
										]
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sortTokens",
									"nameLocation": "2428:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2448:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "2440:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2464:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "2456:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:32:7"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "2495:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "2504:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:18:7"
									},
									"scope": 1776,
									"src": "2419:309:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "2848:251:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 986,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "2867:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2878:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2867:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 989,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "2883:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2895:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2883:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2867:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 993,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "2900:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2913:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2900:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2867:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e707574",
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2916:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															},
															"value": "Invalid input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															}
														],
														"id": 985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2859:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2859:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2859:73:7"
											},
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "2951:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "2943:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2943:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1005,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2969:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1003,
														"name": "FEE_NUMERATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "2980:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2969:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2943:50:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1006,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "3012:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1007,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3030:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3012:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1009,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3011:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1010,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "3045:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1011,
																		"name": "FEE_DENOMINATOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "3057:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3045:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1013,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "3075:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3045:45:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1015,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3044:47:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3011:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 984,
												"id": 1017,
												"nodeType": "Return",
												"src": "3004:87:7"
											}
										]
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAmountOut",
									"nameLocation": "2745:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2767:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2759:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "2785:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2777:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "2804:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2796:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:57:7"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2839:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2838:9:7"
									},
									"scope": 1776,
									"src": "2736:363:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "3219:292:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1031,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "3238:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3250:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3238:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1034,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1023,
																		"src": "3255:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3267:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3255:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3238:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1038,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "3272:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1039,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "3285:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3272:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3238:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f7574707574",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3296:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1d84300a154a68ad84135f12b1e05cdc1e1c9692bfeb69c706ecca877e12ef7",
																"typeString": "literal_string \"Invalid output\""
															},
															"value": "Invalid output"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1d84300a154a68ad84135f12b1e05cdc1e1c9692bfeb69c706ecca877e12ef7",
																"typeString": "literal_string \"Invalid output\""
															}
														],
														"id": 1030,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3230:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:83:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "3230:83:7"
											},
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "3332:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "3324:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3324:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1047,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "3344:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1048,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "3356:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3344:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1050,
														"name": "FEE_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "3368:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3344:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3324:59:7"
											},
											{
												"assignments": [
													1054
												],
												"declarations": [
													{
														"constant": false,
														"id": 1054,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "3402:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "3394:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1053,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3394:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1055,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "3417:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1056,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "3430:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3417:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1058,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3416:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1059,
														"name": "FEE_NUMERATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "3443:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3416:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:62:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1062,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "3475:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1063,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "3487:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3475:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1065,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3474:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3502:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3474:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1068,
												"nodeType": "Return",
												"src": "3467:36:7"
											}
										]
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAmountIn",
									"nameLocation": "3116:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3137:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3129:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3156:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3148:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3148:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3175:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3167:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3128:58:7"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "3210:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:7"
									},
									"scope": 1776,
									"src": "3107:404:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "3587:39:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1079,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "3605:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1080,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "3609:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3605:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1083,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3617:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3605:13:7",
													"trueExpression": {
														"id": 1082,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "3613:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1078,
												"id": 1085,
												"nodeType": "Return",
												"src": "3598:20:7"
											}
										]
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_min",
									"nameLocation": "3528:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3541:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3533:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3552:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3544:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3544:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:22:7"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "3578:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3578:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3577:9:7"
									},
									"scope": 1776,
									"src": "3519:107:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "3694:257:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "3709:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3713:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3709:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1131,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3904:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3909:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3904:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1139,
													"nodeType": "IfStatement",
													"src": "3900:44:7",
													"trueBody": {
														"id": 1138,
														"nodeType": "Block",
														"src": "3912:32:7",
														"statements": [
															{
																"expression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1134,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "3927:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3931:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3927:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1137,
																"nodeType": "ExpressionStatement",
																"src": "3927:5:7"
															}
														]
													}
												},
												"id": 1140,
												"nodeType": "IfStatement",
												"src": "3705:239:7",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "3716:178:7",
													"statements": [
														{
															"expression": {
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1097,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "3731:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1098,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "3735:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3731:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "3731:5:7"
														},
														{
															"assignments": [
																1102
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1102,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "3759:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1130,
																	"src": "3751:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1101,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3751:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1109,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1103,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "3764:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3769:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3764:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1106,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3763:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3774:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3763:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3751:24:7"
														},
														{
															"body": {
																"id": 1128,
																"nodeType": "Block",
																"src": "3804:79:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1113,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "3823:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1114,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "3827:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3823:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1116,
																		"nodeType": "ExpressionStatement",
																		"src": "3823:5:7"
																	},
																	{
																		"expression": {
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1117,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "3847:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1122,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1120,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1118,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1089,
																									"src": "3852:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 1119,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1102,
																									"src": "3856:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3852:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1121,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1102,
																								"src": "3860:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3852:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1123,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3851:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3866:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3851:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3847:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1127,
																		"nodeType": "ExpressionStatement",
																		"src": "3847:20:7"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1110,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "3797:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1111,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "3801:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3797:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1129,
															"nodeType": "WhileStatement",
															"src": "3790:93:7"
														}
													]
												}
											}
										]
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sqrt",
									"nameLocation": "3643:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3657:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3649:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3649:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3648:11:7"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "3691:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3683:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3682:11:7"
									},
									"scope": 1776,
									"src": "3634:317:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "4294:1688:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1170,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4313:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4319:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4313:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1172,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "4332:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4313:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4342:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4305:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4305:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "4305:47:7"
											},
											{
												"assignments": [
													1178,
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1178,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "4372:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "4364:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1177,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4364:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "4388:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "4380:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4380:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1185,
												"initialValue": {
													"arguments": [
														{
															"id": 1182,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "4410:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "4418:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1181,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "4398:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4363:62:7"
											},
											{
												"assignments": [
													1188
												],
												"declarations": [
													{
														"constant": false,
														"id": 1188,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "4449:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "4436:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
															"typeString": "struct SimpleSwap.Pair"
														},
														"typeName": {
															"id": 1187,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1186,
																"name": "Pair",
																"nameLocations": [
																	"4436:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 741,
																"src": "4436:4:7"
															},
															"referencedDeclaration": 741,
															"src": "4436:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1189,
															"name": "_pairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4456:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pair storage ref))"
															}
														},
														"id": 1191,
														"indexExpression": {
															"id": 1190,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4463:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4456:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$",
															"typeString": "mapping(address => struct SimpleSwap.Pair storage ref)"
														}
													},
													"id": 1193,
													"indexExpression": {
														"id": 1192,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "4471:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4456:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pair_$741_storage",
														"typeString": "struct SimpleSwap.Pair storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4436:42:7"
											},
											{
												"assignments": [
													1196,
													1198
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "4500:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "4492:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4492:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1198,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "4518:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "4510:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4510:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"components": [
														{
															"expression": {
																"expression": {
																	"id": 1199,
																	"name": "pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "4531:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																		"typeString": "struct SimpleSwap.Pair storage pointer"
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4536:8:7",
																"memberName": "reserves",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 734,
																"src": "4531:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Reserves_$731_storage",
																	"typeString": "struct SimpleSwap.Reserves storage ref"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4545:8:7",
															"memberName": "reserve0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 728,
															"src": "4531:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1202,
																	"name": "pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "4555:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																		"typeString": "struct SimpleSwap.Pair storage pointer"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4560:8:7",
																"memberName": "reserves",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 734,
																"src": "4555:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Reserves_$731_storage",
																	"typeString": "struct SimpleSwap.Reserves storage ref"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4569:8:7",
															"memberName": "reserve1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 730,
															"src": "4555:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1205,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4530:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4491:87:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1207,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "4595:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4607:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4595:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1210,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "4612:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4624:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4612:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4595:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1277,
													"nodeType": "Block",
													"src": "4713:546:7",
													"statements": [
														{
															"assignments": [
																1224
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1224,
																	"mutability": "mutable",
																	"name": "amountBOptimal",
																	"nameLocation": "4736:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1277,
																	"src": "4728:22:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1223,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4728:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1231,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1225,
																				"name": "amountADesired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "4754:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1226,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "4771:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4754:25:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1228,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4753:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1229,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "4783:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4753:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4728:63:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1232,
																	"name": "amountBOptimal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "4810:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1233,
																	"name": "amountBDesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "4828:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4810:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1275,
																"nodeType": "Block",
																"src": "5008:240:7",
																"statements": [
																	{
																		"assignments": [
																			1252
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1252,
																				"mutability": "mutable",
																				"name": "amountAOptimal",
																				"nameLocation": "5035:14:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1275,
																				"src": "5027:22:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1251,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5027:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1259,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1255,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1253,
																							"name": "amountBDesired",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1150,
																							"src": "5053:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1254,
																							"name": "reserve0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1196,
																							"src": "5070:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5053:25:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1256,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5052:27:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1257,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "5082:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5052:38:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5027:63:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1263,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1261,
																						"name": "amountAOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "5117:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1262,
																						"name": "amountAMin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1152,
																						"src": "5135:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5117:28:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "536c6970706167652041",
																					"id": 1264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5147:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_5e757cfc0cef258f5c1fb2f28594f656da959d2c8a792df0e0753800f6aa5bc9",
																						"typeString": "literal_string \"Slippage A\""
																					},
																					"value": "Slippage A"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_5e757cfc0cef258f5c1fb2f28594f656da959d2c8a792df0e0753800f6aa5bc9",
																						"typeString": "literal_string \"Slippage A\""
																					}
																				],
																				"id": 1260,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "5109:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5109:51:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1266,
																		"nodeType": "ExpressionStatement",
																		"src": "5109:51:7"
																	},
																	{
																		"expression": {
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 1267,
																						"name": "amountA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1163,
																						"src": "5180:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1268,
																						"name": "amountB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1165,
																						"src": "5189:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1269,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "5179:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"components": [
																					{
																						"id": 1270,
																						"name": "amountAOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "5201:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1271,
																						"name": "amountBDesired",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1150,
																						"src": "5217:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1272,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5200:32:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"src": "5179:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1274,
																		"nodeType": "ExpressionStatement",
																		"src": "5179:53:7"
																	}
																]
															},
															"id": 1276,
															"nodeType": "IfStatement",
															"src": "4806:442:7",
															"trueBody": {
																"id": 1250,
																"nodeType": "Block",
																"src": "4844:158:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1236,
																						"name": "amountBOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1224,
																						"src": "4871:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1237,
																						"name": "amountBMin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1154,
																						"src": "4889:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4871:28:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "536c6970706167652042",
																					"id": 1239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4901:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_f83b07f983751f90a56f4aa0b9f374b9d12b6b4f854400c8e4b033913369bda4",
																						"typeString": "literal_string \"Slippage B\""
																					},
																					"value": "Slippage B"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_f83b07f983751f90a56f4aa0b9f374b9d12b6b4f854400c8e4b033913369bda4",
																						"typeString": "literal_string \"Slippage B\""
																					}
																				],
																				"id": 1235,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "4863:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4863:51:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1241,
																		"nodeType": "ExpressionStatement",
																		"src": "4863:51:7"
																	},
																	{
																		"expression": {
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 1242,
																						"name": "amountA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1163,
																						"src": "4934:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1243,
																						"name": "amountB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1165,
																						"src": "4943:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1244,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "4933:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"components": [
																					{
																						"id": 1245,
																						"name": "amountADesired",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1148,
																						"src": "4955:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1246,
																						"name": "amountBOptimal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1224,
																						"src": "4971:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1247,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4954:32:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"src": "4933:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1249,
																		"nodeType": "ExpressionStatement",
																		"src": "4933:53:7"
																	}
																]
															}
														}
													]
												},
												"id": 1278,
												"nodeType": "IfStatement",
												"src": "4591:668:7",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "4627:80:7",
													"statements": [
														{
															"expression": {
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1214,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "4643:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1215,
																			"name": "amountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1165,
																			"src": "4652:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1216,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "4642:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1217,
																			"name": "amountADesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "4664:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1218,
																			"name": "amountBDesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "4680:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1219,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4663:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "4642:53:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1221,
															"nodeType": "ExpressionStatement",
															"src": "4642:53:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1283,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5303:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5307:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5303:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1287,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5323:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1776",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1776",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5315:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1285,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5315:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5315:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5330:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1280,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "5278:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1279,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "5271:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5271:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "5271:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5271:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "5271:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1296,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5381:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5385:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5381:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1300,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5401:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1776",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1776",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5393:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1298,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5393:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5393:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "5408:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1293,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "5356:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1292,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "5349:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5349:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5364:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "5349:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5349:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "5349:67:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1305,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "5433:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair storage pointer"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5438:11:7",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 736,
														"src": "5433:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5453:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5433:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "5525:125:7",
													"statements": [
														{
															"expression": {
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1318,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "5540:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1323,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1320,
																							"name": "amountA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1163,
																							"src": "5558:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 1321,
																								"name": "pair",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1188,
																								"src": "5568:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																									"typeString": "struct SimpleSwap.Pair storage pointer"
																								}
																							},
																							"id": 1322,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5573:11:7",
																							"memberName": "totalSupply",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 736,
																							"src": "5568:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5558:26:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1324,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5557:28:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1325,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1196,
																				"src": "5588:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5557:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1330,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1327,
																							"name": "amountB",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1165,
																							"src": "5599:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 1328,
																								"name": "pair",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1188,
																								"src": "5609:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																									"typeString": "struct SimpleSwap.Pair storage pointer"
																								}
																							},
																							"id": 1329,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5614:11:7",
																							"memberName": "totalSupply",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 736,
																							"src": "5609:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5599:26:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1331,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5598:28:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1332,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "5629:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5598:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1319,
																		"name": "_min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "5552:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5552:86:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5540:98:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1336,
															"nodeType": "ExpressionStatement",
															"src": "5540:98:7"
														}
													]
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "5429:221:7",
												"trueBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "5456:63:7",
													"statements": [
														{
															"expression": {
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1309,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "5471:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1311,
																				"name": "amountA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "5489:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1312,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "5499:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5489:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1310,
																		"name": "_sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "5483:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5483:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5471:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1316,
															"nodeType": "ExpressionStatement",
															"src": "5471:36:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1340,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "5670:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5682:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5670:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6971756964697479207a65726f",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5685:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c129fb27c93508ddfee2c0bf55ecef15f93349b002b607d723c5c0b0e9d86200",
																"typeString": "literal_string \"Liquidity zero\""
															},
															"value": "Liquidity zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c129fb27c93508ddfee2c0bf55ecef15f93349b002b607d723c5c0b0e9d86200",
																"typeString": "literal_string \"Liquidity zero\""
															}
														],
														"id": 1339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5662:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "5662:40:7"
											},
											{
												"expression": {
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1346,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "5715:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																	"typeString": "struct SimpleSwap.Pair storage pointer"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5720:8:7",
															"memberName": "reserves",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "5715:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserves_$731_storage",
																"typeString": "struct SimpleSwap.Reserves storage ref"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5729:8:7",
														"memberName": "reserve0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "5715:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1351,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "5740:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1352,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5751:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5740:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5715:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "5715:43:7"
											},
											{
												"expression": {
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1356,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "5769:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																	"typeString": "struct SimpleSwap.Pair storage pointer"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5774:8:7",
															"memberName": "reserves",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "5769:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserves_$731_storage",
																"typeString": "struct SimpleSwap.Reserves storage ref"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5783:8:7",
														"memberName": "reserve1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 730,
														"src": "5769:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1361,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "5794:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1362,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "5805:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5794:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5769:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "5769:43:7"
											},
											{
												"expression": {
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1366,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "5823:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair storage pointer"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5828:11:7",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 736,
														"src": "5823:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1369,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "5843:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5823:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "5823:29:7"
											},
											{
												"expression": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1372,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "5863:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																	"typeString": "struct SimpleSwap.Pair storage pointer"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5868:8:7",
															"memberName": "balances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 740,
															"src": "5863:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1376,
														"indexExpression": {
															"id": 1374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "5877:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5863:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1377,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "5884:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5863:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "5863:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1381,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "5926:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "5934:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "5942:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1384,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5946:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1385,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "5955:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1386,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "5964:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1380,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "5911:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5911:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "EmitStatement",
												"src": "5906:68:7"
											}
										]
									},
									"functionSelector": "e8e33700",
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1160,
												"name": "nonReentrant",
												"nameLocations": [
													"4219:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "4219:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4219:12:7"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "3968:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3999:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "3991:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "4024:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4016:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "4049:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4041:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "4082:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4074:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "4115:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4107:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "4144:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4136:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4173:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4165:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4194:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4186:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4186:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:229:7"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "4249:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4241:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "4266:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4258:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4283:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4275:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:53:7"
									},
									"scope": 1776,
									"src": "3959:2023:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "6271:1089:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1414,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6290:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6296:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6290:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1416,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "6309:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6290:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6319:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6282:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6282:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "6282:47:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1422,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "6348:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6360:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6348:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206c6971756964697479",
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6363:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c",
																"typeString": "literal_string \"Zero liquidity\""
															},
															"value": "Zero liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b92817ebaa76de1bc1b1ef78878a5feea9c14a36ac8f9eae26db98a6f7f9807c",
																"typeString": "literal_string \"Zero liquidity\""
															}
														],
														"id": 1421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6340:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6340:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "6340:40:7"
											},
											{
												"assignments": [
													1429,
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1429,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "6402:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "6394:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1428,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6394:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "6418:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "6410:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6410:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1436,
												"initialValue": {
													"arguments": [
														{
															"id": 1433,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "6440:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1434,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "6448:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1432,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "6428:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6428:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6393:62:7"
											},
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "6479:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "6466:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
															"typeString": "struct SimpleSwap.Pair"
														},
														"typeName": {
															"id": 1438,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1437,
																"name": "Pair",
																"nameLocations": [
																	"6466:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 741,
																"src": "6466:4:7"
															},
															"referencedDeclaration": 741,
															"src": "6466:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1440,
															"name": "_pairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6486:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pair storage ref))"
															}
														},
														"id": 1442,
														"indexExpression": {
															"id": 1441,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "6493:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6486:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$",
															"typeString": "mapping(address => struct SimpleSwap.Pair storage ref)"
														}
													},
													"id": 1444,
													"indexExpression": {
														"id": 1443,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "6501:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6486:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pair_$741_storage",
														"typeString": "struct SimpleSwap.Pair storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6466:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 1447,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "6527:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6532:8:7",
																	"memberName": "balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 740,
																	"src": "6527:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1451,
																"indexExpression": {
																	"expression": {
																		"id": 1449,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6541:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6545:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6541:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6527:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1452,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "6556:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6527:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74204c50",
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6567:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_591b5e9681abdd9cddf0a6affeda75002e6ffb44b209a31baffc2aab362072a1",
																"typeString": "literal_string \"Insufficient LP\""
															},
															"value": "Insufficient LP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_591b5e9681abdd9cddf0a6affeda75002e6ffb44b209a31baffc2aab362072a1",
																"typeString": "literal_string \"Insufficient LP\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6519:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6519:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "6519:66:7"
											},
											{
												"assignments": [
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "6606:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "6598:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6598:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1462,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1459,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "6617:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair storage pointer"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6622:8:7",
														"memberName": "reserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "6617:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserves_$731_storage",
															"typeString": "struct SimpleSwap.Reserves storage ref"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6631:8:7",
													"memberName": "reserve0",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 728,
													"src": "6617:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6598:41:7"
											},
											{
												"assignments": [
													1464
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "6658:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "6650:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6650:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1465,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "6669:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair storage pointer"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6674:8:7",
														"memberName": "reserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "6669:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Reserves_$731_storage",
															"typeString": "struct SimpleSwap.Reserves storage ref"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6683:8:7",
													"memberName": "reserve1",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 730,
													"src": "6669:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6650:41:7"
											},
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "6710:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "6702:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6702:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1473,
												"initialValue": {
													"expression": {
														"id": 1471,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "6724:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
															"typeString": "struct SimpleSwap.Pair storage pointer"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6729:11:7",
													"memberName": "totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 736,
													"src": "6724:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6702:38:7"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1474,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "6753:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1475,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "6764:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1476,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1458,
																		"src": "6776:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6764:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1478,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6763:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1479,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "6788:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6763:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6753:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "6753:46:7"
											},
											{
												"expression": {
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1483,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "6810:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1484,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "6821:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1485,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1464,
																		"src": "6833:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6821:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1487,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6820:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1488,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "6845:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6820:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6810:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "6810:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1493,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "6877:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1494,
																"name": "amountAMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "6888:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6877:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e2041",
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6900:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33b68e9cf2a50a71d47fe9dcd6305d2a4b169ce50991225b754fc94fbcaabdc8",
																"typeString": "literal_string \"Min A\""
															},
															"value": "Min A"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33b68e9cf2a50a71d47fe9dcd6305d2a4b169ce50991225b754fc94fbcaabdc8",
																"typeString": "literal_string \"Min A\""
															}
														],
														"id": 1492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6869:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6869:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "6869:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1500,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "6927:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1501,
																"name": "amountBMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "6938:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6927:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e2042",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6950:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd139e31d636bcbe76d3e252660f2fe4aefbfa0503efc42e364bb9f6c15f9dfb",
																"typeString": "literal_string \"Min B\""
															},
															"value": "Min B"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd139e31d636bcbe76d3e252660f2fe4aefbfa0503efc42e364bb9f6c15f9dfb",
																"typeString": "literal_string \"Min B\""
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6919:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "6919:39:7"
											},
											{
												"expression": {
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1506,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "6971:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																	"typeString": "struct SimpleSwap.Pair storage pointer"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6976:8:7",
															"memberName": "reserves",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "6971:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserves_$731_storage",
																"typeString": "struct SimpleSwap.Reserves storage ref"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6985:8:7",
														"memberName": "reserve0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "6971:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1511,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "6996:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1512,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "7007:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6996:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6971:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "6971:43:7"
											},
											{
												"expression": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1516,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "7025:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																	"typeString": "struct SimpleSwap.Pair storage pointer"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7030:8:7",
															"memberName": "reserves",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "7025:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Reserves_$731_storage",
																"typeString": "struct SimpleSwap.Reserves storage ref"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7039:8:7",
														"memberName": "reserve1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 730,
														"src": "7025:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1521,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "7050:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1522,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "7061:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7050:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7025:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "7025:43:7"
											},
											{
												"expression": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1526,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "7079:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair storage pointer"
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7084:11:7",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 736,
														"src": "7079:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1529,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "7099:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7079:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "7079:29:7"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1532,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "7119:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																	"typeString": "struct SimpleSwap.Pair storage pointer"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7124:8:7",
															"memberName": "balances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 740,
															"src": "7119:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1537,
														"indexExpression": {
															"expression": {
																"id": 1534,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7133:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7137:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7133:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7119:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1538,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "7148:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7119:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "7119:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1545,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "7198:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1546,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "7202:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1542,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "7177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1541,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7170:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7170:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7185:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "7170:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7170:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "7170:40:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1553,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "7249:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1554,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "7253:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1550,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "7228:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1549,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7221:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7221:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7236:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "7221:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7221:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "7221:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1558,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "7296:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "7304:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1560,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7312:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7316:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7312:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1562,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "7324:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1563,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "7333:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1564,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "7342:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1557,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "7279:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7279:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "EmitStatement",
												"src": "7274:78:7"
											}
										]
									},
									"functionSelector": "baa2abde",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1406,
												"name": "nonReentrant",
												"nameLocations": [
													"6215:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "6215:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6215:12:7"
										}
									],
									"name": "removeLiquidity",
									"nameLocation": "5999:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "6033:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6025:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "6058:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6050:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6083:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6075:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6075:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "6111:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6103:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6103:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "6140:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6132:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6132:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6169:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6161:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6161:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6190:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6182:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6014:191:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "6245:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6237:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6237:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "6262:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "6254:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6254:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:34:7"
									},
									"scope": 1776,
									"src": "5990:1370:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "7606:1354:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1588,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7625:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7631:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7625:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1590,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "7644:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7625:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45787069726564",
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7654:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															},
															"value": "Expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f183c8b0f89612f6f096bf1f0017061404d2019bd0580f7b18bddb8dcc0d7a13",
																"typeString": "literal_string \"Expired\""
															}
														],
														"id": 1587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7617:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7617:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "7617:47:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1596,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1575,
																	"src": "7683:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7688:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7683:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7698:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "7683:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50617468206d7573742062652032",
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7701:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca3f6f84208167beac4375561bd9c0b82ee628556f7b821696893bf5e3c5c83a",
																"typeString": "literal_string \"Path must be 2\""
															},
															"value": "Path must be 2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca3f6f84208167beac4375561bd9c0b82ee628556f7b821696893bf5e3c5c83a",
																"typeString": "literal_string \"Path must be 2\""
															}
														],
														"id": 1595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7675:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7675:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "7675:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1604,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "7737:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7748:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7737:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20696e707574",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7751:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4",
																"typeString": "literal_string \"Zero input\""
															},
															"value": "Zero input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc186d373dd540cb9fb96bc11c9900e230b3d537c77cb1630f42b8b4fd4a54f4",
																"typeString": "literal_string \"Zero input\""
															}
														],
														"id": 1603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7729:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7729:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "7729:35:7"
											},
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "7785:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1774,
														"src": "7777:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1610,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7777:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"baseExpression": {
														"id": 1612,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "7795:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 1614,
													"indexExpression": {
														"hexValue": "30",
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7800:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7795:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7777:25:7"
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "7821:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1774,
														"src": "7813:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1616,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7813:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"baseExpression": {
														"id": 1618,
														"name": "path",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "7832:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 1620,
													"indexExpression": {
														"hexValue": "31",
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7837:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7832:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7813:26:7"
											},
											{
												"assignments": [
													1623,
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1623,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "7861:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1774,
														"src": "7853:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1622,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7853:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "7877:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1774,
														"src": "7869:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7869:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"arguments": [
														{
															"id": 1627,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "7899:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1628,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "7908:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1626,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "7887:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
															"typeString": "function (address,address) pure returns (address,address)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7852:65:7"
											},
											{
												"assignments": [
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "7941:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1774,
														"src": "7928:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
															"typeString": "struct SimpleSwap.Pair"
														},
														"typeName": {
															"id": 1632,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1631,
																"name": "Pair",
																"nameLocations": [
																	"7928:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 741,
																"src": "7928:4:7"
															},
															"referencedDeclaration": 741,
															"src": "7928:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																"typeString": "struct SimpleSwap.Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1634,
															"name": "_pairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "7948:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct SimpleSwap.Pair storage ref))"
															}
														},
														"id": 1636,
														"indexExpression": {
															"id": 1635,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "7955:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7948:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$741_storage_$",
															"typeString": "mapping(address => struct SimpleSwap.Pair storage ref)"
														}
													},
													"id": 1638,
													"indexExpression": {
														"id": 1637,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "7963:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7948:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pair_$741_storage",
														"typeString": "struct SimpleSwap.Pair storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7928:42:7"
											},
											{
												"assignments": [
													1641,
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1641,
														"mutability": "mutable",
														"name": "reserveIn",
														"nameLocation": "7992:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1774,
														"src": "7984:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7984:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "reserveOut",
														"nameLocation": "8011:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1774,
														"src": "8003:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8003:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1662,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1644,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "8025:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1645,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "8036:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8025:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"expression": {
																	"expression": {
																		"id": 1654,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "8123:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8128:8:7",
																	"memberName": "reserves",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 734,
																	"src": "8123:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserves_$731_storage",
																		"typeString": "struct SimpleSwap.Reserves storage ref"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8137:8:7",
																"memberName": "reserve1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 730,
																"src": "8123:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"expression": {
																		"id": 1657,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "8147:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8152:8:7",
																	"memberName": "reserves",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 734,
																	"src": "8147:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserves_$731_storage",
																		"typeString": "struct SimpleSwap.Reserves storage ref"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8161:8:7",
																"memberName": "reserve0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 728,
																"src": "8147:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1660,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8122:48:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8025:145:7",
													"trueExpression": {
														"components": [
															{
																"expression": {
																	"expression": {
																		"id": 1647,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "8059:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8064:8:7",
																	"memberName": "reserves",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 734,
																	"src": "8059:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserves_$731_storage",
																		"typeString": "struct SimpleSwap.Reserves storage ref"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8073:8:7",
																"memberName": "reserve0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 728,
																"src": "8059:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"expression": {
																		"id": 1650,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "8083:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																			"typeString": "struct SimpleSwap.Pair storage pointer"
																		}
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8088:8:7",
																	"memberName": "reserves",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 734,
																	"src": "8083:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Reserves_$731_storage",
																		"typeString": "struct SimpleSwap.Reserves storage ref"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8097:8:7",
																"memberName": "reserve1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 730,
																"src": "8083:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1653,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8058:48:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7983:187:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1667,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8216:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8220:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8216:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1671,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8236:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1776",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1776",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8228:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1669,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8228:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8228:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1673,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "8243:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1664,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "8190:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1663,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "8183:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8183:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8199:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "8183:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8183:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "8183:69:7"
											},
											{
												"assignments": [
													1677
												],
												"declarations": [
													{
														"constant": false,
														"id": 1677,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "8273:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1774,
														"src": "8265:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1676,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8265:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1683,
												"initialValue": {
													"arguments": [
														{
															"id": 1679,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "8299:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1680,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "8309:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1681,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "8320:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "_getAmountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "8285:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8285:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8265:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1685,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "8350:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1686,
																"name": "amountOutMin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "8363:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8350:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f7574707574",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															},
															"value": "Insufficient output"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffebb6789a62ed60836fc38e566e8cbcff27ebb3acadee53ee5da9825f1b14e1",
																"typeString": "literal_string \"Insufficient output\""
															}
														],
														"id": 1684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8342:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8342:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "8342:57:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "8416:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1692,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "8427:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8416:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1735,
													"nodeType": "Block",
													"src": "8575:134:7",
													"statements": [
														{
															"expression": {
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1715,
																			"name": "pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "8590:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																				"typeString": "struct SimpleSwap.Pair storage pointer"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8595:8:7",
																		"memberName": "reserves",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 734,
																		"src": "8590:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserves_$731_storage",
																			"typeString": "struct SimpleSwap.Reserves storage ref"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8604:8:7",
																	"memberName": "reserve1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 730,
																	"src": "8590:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1720,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "8615:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1721,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "8627:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8615:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8590:45:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1724,
															"nodeType": "ExpressionStatement",
															"src": "8590:45:7"
														},
														{
															"expression": {
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1725,
																			"name": "pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "8650:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																				"typeString": "struct SimpleSwap.Pair storage pointer"
																			}
																		},
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8655:8:7",
																		"memberName": "reserves",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 734,
																		"src": "8650:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserves_$731_storage",
																			"typeString": "struct SimpleSwap.Reserves storage ref"
																		}
																	},
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8664:8:7",
																	"memberName": "reserve0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "8650:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1730,
																		"name": "reserveOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "8675:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1731,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "8688:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8675:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8650:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1734,
															"nodeType": "ExpressionStatement",
															"src": "8650:47:7"
														}
													]
												},
												"id": 1736,
												"nodeType": "IfStatement",
												"src": "8412:297:7",
												"trueBody": {
													"id": 1714,
													"nodeType": "Block",
													"src": "8435:134:7",
													"statements": [
														{
															"expression": {
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1694,
																			"name": "pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "8450:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																				"typeString": "struct SimpleSwap.Pair storage pointer"
																			}
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8455:8:7",
																		"memberName": "reserves",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 734,
																		"src": "8450:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserves_$731_storage",
																			"typeString": "struct SimpleSwap.Reserves storage ref"
																		}
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8464:8:7",
																	"memberName": "reserve0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "8450:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1699,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "8475:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1700,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "8487:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8475:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8450:45:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1703,
															"nodeType": "ExpressionStatement",
															"src": "8450:45:7"
														},
														{
															"expression": {
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1704,
																			"name": "pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "8510:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pair_$741_storage_ptr",
																				"typeString": "struct SimpleSwap.Pair storage pointer"
																			}
																		},
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8515:8:7",
																		"memberName": "reserves",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 734,
																		"src": "8510:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Reserves_$731_storage",
																			"typeString": "struct SimpleSwap.Reserves storage ref"
																		}
																	},
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8524:8:7",
																	"memberName": "reserve1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 730,
																	"src": "8510:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1709,
																		"name": "reserveOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "8535:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1710,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "8548:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8535:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8510:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "8510:47:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1741,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "8751:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1742,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "8755:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1738,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "8728:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1737,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "8721:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8721:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8738:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "8721:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8721:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "8721:44:7"
											},
											{
												"expression": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1745,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "8778:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8802:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "8788:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8792:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1747,
																"nodeType": "ArrayTypeName",
																"src": "8792:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8788:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "8778:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "8778:26:7"
											},
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1753,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "8815:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1755,
														"indexExpression": {
															"hexValue": "30",
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8815:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1756,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "8828:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8815:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "8815:21:7"
											},
											{
												"expression": {
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1759,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "8847:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1761,
														"indexExpression": {
															"hexValue": "31",
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8855:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8847:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1762,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "8860:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8847:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "8847:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1766,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "8901:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1767,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "8910:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1768,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8920:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8924:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8920:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1770,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "8932:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1771,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "8942:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1765,
														"name": "TokensSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "8887:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8887:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1773,
												"nodeType": "EmitStatement",
												"src": "8882:70:7"
											}
										]
									},
									"functionSelector": "38ed1739",
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1581,
												"name": "nonReentrant",
												"nameLocations": [
													"7558:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "7558:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7558:12:7"
										}
									],
									"name": "swapExactTokensForTokens",
									"nameLocation": "7377:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7420:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "7412:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "7447:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "7439:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7439:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "7489:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "7470:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1573,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7470:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1574,
													"nodeType": "ArrayTypeName",
													"src": "7470:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7512:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "7504:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7504:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "7533:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "7525:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7401:147:7"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7597:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "7580:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1583,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7580:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1584,
													"nodeType": "ArrayTypeName",
													"src": "7580:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7579:26:7"
									},
									"scope": 1776,
									"src": "7368:1592:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1777,
							"src": "374:8589:7",
							"usedErrors": [
								244
							],
							"usedEvents": [
								762,
								776,
								788
							]
						}
					],
					"src": "33:8932:7"
				},
				"id": 7
			}
		}
	}
}